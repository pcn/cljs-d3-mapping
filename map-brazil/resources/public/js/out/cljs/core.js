// Compiled by ClojureScript 0.0-2913 {:static-fns true}
goog.provide('cljs.core');
goog.require('goog.string.StringBuffer');
goog.require('goog.array');
goog.require('goog.object');
goog.require('goog.string');
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2913";
cljs.core._STAR_unchecked_if_STAR_ = false;
if(typeof cljs.core._STAR_print_fn_STAR_ !== 'undefined'){
} else {
/**
* Each runtime environment provides a different way to print output.
* Whatever function *print-fn* is bound to will be passed any
* Strings which should be printed.
*/
cljs.core._STAR_print_fn_STAR_ = (function _STAR_print_fn_STAR_(_){
throw (new Error("No *print-fn* fn set for evaluation environment"));
});
}
/**
* Set *print-fn* to f.
*/
cljs.core.set_print_fn_BANG_ = (function set_print_fn_BANG_(f){
return cljs.core._STAR_print_fn_STAR_ = f;
});
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if(typeof cljs.core._STAR_loaded_libs_STAR_ !== 'undefined'){
} else {
cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = (function pr_opts(){
return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939),cljs.core._STAR_flush_on_newline_STAR_,new cljs.core.Keyword(null,"readably","readably",1129599760),cljs.core._STAR_print_readably_STAR_,new cljs.core.Keyword(null,"meta","meta",1499536964),cljs.core._STAR_print_meta_STAR_,new cljs.core.Keyword(null,"dup","dup",556298533),cljs.core._STAR_print_dup_STAR_,new cljs.core.Keyword(null,"print-length","print-length",1931866356),cljs.core._STAR_print_length_STAR_], null);
});
/**
* Set *print-fn* to console.log
*/
cljs.core.enable_console_print_BANG_ = (function enable_console_print_BANG_(){
cljs.core._STAR_print_newline_STAR_ = false;

return cljs.core._STAR_print_fn_STAR_ = (function() { 
var G__18848__delegate = function (args){
return console.log.apply(console,(function (){var G__18847 = args;
return (cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__18847) : cljs.core.into_array.call(null,G__18847));
})());
};
var G__18848 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__18849__i = 0, G__18849__a = new Array(arguments.length -  0);
while (G__18849__i < G__18849__a.length) {G__18849__a[G__18849__i] = arguments[G__18849__i + 0]; ++G__18849__i;}
  args = new cljs.core.IndexedSeq(G__18849__a,0);
} 
return G__18848__delegate.call(this,args);};
G__18848.cljs$lang$maxFixedArity = 0;
G__18848.cljs$lang$applyTo = (function (arglist__18850){
var args = cljs.core.seq(arglist__18850);
return G__18848__delegate(args);
});
G__18848.cljs$core$IFn$_invoke$arity$variadic = G__18848__delegate;
return G__18848;
})()
;
});
/**
* Internal - do not use!
*/
cljs.core.truth_ = (function truth_(x){
return (x != null && x !== false);
});
cljs.core.not_native = null;

/**
* Tests if 2 arguments are the same object
*/
cljs.core.identical_QMARK_ = (function identical_QMARK_(x,y){
return (x === y);
});
/**
* Returns true if x is nil, false otherwise.
*/
cljs.core.nil_QMARK_ = (function nil_QMARK_(x){
return (x == null);
});
cljs.core.array_QMARK_ = (function array_QMARK_(x){
return x instanceof Array;
});
cljs.core.number_QMARK_ = (function number_QMARK_(n){
return typeof n === 'number';
});
/**
* Returns true if x is logical false, false otherwise.
*/
cljs.core.not = (function not(x){
if(cljs.core.truth_(x)){
return false;
} else {
return true;
}
});
/**
* Returns true if x is not nil, false otherwise.
*/
cljs.core.some_QMARK_ = (function some_QMARK_(x){
return !((x == null));
});
cljs.core.object_QMARK_ = (function object_QMARK_(x){
if(!((x == null))){
return (x.constructor === Object);
} else {
return false;
}
});
cljs.core.string_QMARK_ = (function string_QMARK_(x){
var G__18852 = x;
return goog.isString(G__18852);
});
/**
* Internal - do not use!
*/
cljs.core.native_satisfies_QMARK_ = (function native_satisfies_QMARK_(p,x){
var x__$1 = (((x == null))?null:x);
if((p[(function (){var G__18854 = x__$1;
return goog.typeOf(G__18854);
})()])){
return true;
} else {
if((p["_"])){
return true;
} else {
return false;

}
}
});
cljs.core.is_proto_ = (function is_proto_(x){
return (x.constructor.prototype === x);
});
/**
* When compiled for a command-line target, whatever
* function *main-fn* is set to will be called with the command-line
* argv as arguments
*/
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = (function type(x){
if((x == null)){
return null;
} else {
return x.constructor;
}
});
cljs.core.missing_protocol = (function missing_protocol(proto,obj){
var ty = cljs.core.type(obj);
var ty__$1 = (cljs.core.truth_((function (){var and__17320__auto__ = ty;
if(cljs.core.truth_(and__17320__auto__)){
return ty.cljs$lang$type;
} else {
return and__17320__auto__;
}
})())?ty.cljs$lang$ctorStr:(function (){var G__18856 = obj;
return goog.typeOf(G__18856);
})());
return (new Error(["No protocol method ",proto," defined for type ",ty__$1,": ",obj].join("")));
});
cljs.core.type__GT_str = (function type__GT_str(ty){
var temp__4124__auto__ = ty.cljs$lang$ctorStr;
if(cljs.core.truth_(temp__4124__auto__)){
var s = temp__4124__auto__;
return s;
} else {
return [cljs.core.str(ty)].join('');
}
});
cljs.core.load_file = (function load_file(file){
if(cljs.core.truth_(COMPILED)){
return null;
} else {
return goog.importScript_(file);
}
});
if((typeof Symbol !== 'undefined') && (((function (){var G__18858 = Symbol;
return goog.typeOf(G__18858);
})() === "function"))){
cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = (function() {
var make_array = null;
var make_array__1 = (function (size){
return (new Array(size));
});
var make_array__2 = (function (type,size){
return make_array.cljs$core$IFn$_invoke$arity$1(size);
});
make_array = function(type,size){
switch(arguments.length){
case 1:
return make_array__1.call(this,type);
case 2:
return make_array__2.call(this,type,size);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
return make_array;
})()
;
/**
* Returns a javascript array, cloned from the passed in array
*/
cljs.core.aclone = (function aclone(arr){
var len = arr.length;
var new_arr = (new Array(len));
var n__18219__auto___18860 = len;
var i_18861 = (0);
while(true){
if((i_18861 < n__18219__auto___18860)){
(new_arr[i_18861] = (arr[i_18861]));

var G__18862 = (i_18861 + (1));
i_18861 = G__18862;
continue;
} else {
}
break;
}

return new_arr;
});
/**
* Creates a new javascript array.
* @param {...*} var_args
*/
cljs.core.array = (function array(var_args){
var a = (new Array(arguments.length));
var i = (0);
while(true){
if((i < a.length)){
(a[i] = (arguments[i]));

var G__18863 = (i + (1));
i = G__18863;
continue;
} else {
return a;
}
break;
}
});
/**
* Returns the value at the index.
* @param {...*} var_args
*/
cljs.core.aget = (function() {
var aget = null;
var aget__2 = (function (array,i){
return (array[i]);
});
var aget__3 = (function() { 
var G__18872__delegate = function (array,i,idxs){
var G__18869 = aget;
var G__18870 = aget.cljs$core$IFn$_invoke$arity$2(array,i);
var G__18871 = idxs;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__18869,G__18870,G__18871) : cljs.core.apply.call(null,G__18869,G__18870,G__18871));
};
var G__18872 = function (array,i,var_args){
var idxs = null;
if (arguments.length > 2) {
var G__18873__i = 0, G__18873__a = new Array(arguments.length -  2);
while (G__18873__i < G__18873__a.length) {G__18873__a[G__18873__i] = arguments[G__18873__i + 2]; ++G__18873__i;}
  idxs = new cljs.core.IndexedSeq(G__18873__a,0);
} 
return G__18872__delegate.call(this,array,i,idxs);};
G__18872.cljs$lang$maxFixedArity = 2;
G__18872.cljs$lang$applyTo = (function (arglist__18874){
var array = cljs.core.first(arglist__18874);
arglist__18874 = cljs.core.next(arglist__18874);
var i = cljs.core.first(arglist__18874);
var idxs = cljs.core.rest(arglist__18874);
return G__18872__delegate(array,i,idxs);
});
G__18872.cljs$core$IFn$_invoke$arity$variadic = G__18872__delegate;
return G__18872;
})()
;
aget = function(array,i,var_args){
var idxs = var_args;
switch(arguments.length){
case 2:
return aget__2.call(this,array,i);
default:
var G__18875 = null;
if (arguments.length > 2) {
var G__18876__i = 0, G__18876__a = new Array(arguments.length -  2);
while (G__18876__i < G__18876__a.length) {G__18876__a[G__18876__i] = arguments[G__18876__i + 2]; ++G__18876__i;}
G__18875 = new cljs.core.IndexedSeq(G__18876__a,0);
}
return aget__3.cljs$core$IFn$_invoke$arity$variadic(array,i, G__18875);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aget.cljs$lang$maxFixedArity = 2;
aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
return aget;
})()
;
/**
* Sets the value at the index.
* @param {...*} var_args
*/
cljs.core.aset = (function() {
var aset = null;
var aset__3 = (function (array,i,val){
return (array[i] = val);
});
var aset__4 = (function() { 
var G__18885__delegate = function (array,idx,idx2,idxv){
var G__18881 = aset;
var G__18882 = (array[idx]);
var G__18883 = idx2;
var G__18884 = idxv;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__18881,G__18882,G__18883,G__18884) : cljs.core.apply.call(null,G__18881,G__18882,G__18883,G__18884));
};
var G__18885 = function (array,idx,idx2,var_args){
var idxv = null;
if (arguments.length > 3) {
var G__18886__i = 0, G__18886__a = new Array(arguments.length -  3);
while (G__18886__i < G__18886__a.length) {G__18886__a[G__18886__i] = arguments[G__18886__i + 3]; ++G__18886__i;}
  idxv = new cljs.core.IndexedSeq(G__18886__a,0);
} 
return G__18885__delegate.call(this,array,idx,idx2,idxv);};
G__18885.cljs$lang$maxFixedArity = 3;
G__18885.cljs$lang$applyTo = (function (arglist__18887){
var array = cljs.core.first(arglist__18887);
arglist__18887 = cljs.core.next(arglist__18887);
var idx = cljs.core.first(arglist__18887);
arglist__18887 = cljs.core.next(arglist__18887);
var idx2 = cljs.core.first(arglist__18887);
var idxv = cljs.core.rest(arglist__18887);
return G__18885__delegate(array,idx,idx2,idxv);
});
G__18885.cljs$core$IFn$_invoke$arity$variadic = G__18885__delegate;
return G__18885;
})()
;
aset = function(array,idx,idx2,var_args){
var idxv = var_args;
switch(arguments.length){
case 3:
return aset__3.call(this,array,idx,idx2);
default:
var G__18888 = null;
if (arguments.length > 3) {
var G__18889__i = 0, G__18889__a = new Array(arguments.length -  3);
while (G__18889__i < G__18889__a.length) {G__18889__a[G__18889__i] = arguments[G__18889__i + 3]; ++G__18889__i;}
G__18888 = new cljs.core.IndexedSeq(G__18889__a,0);
}
return aset__4.cljs$core$IFn$_invoke$arity$variadic(array,idx,idx2, G__18888);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aset.cljs$lang$maxFixedArity = 3;
aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
return aset;
})()
;
/**
* Returns the length of the array. Works on arrays of all types.
*/
cljs.core.alength = (function alength(array){
return array.length;
});
cljs.core.into_array = (function() {
var into_array = null;
var into_array__1 = (function (aseq){
return into_array.cljs$core$IFn$_invoke$arity$2(null,aseq);
});
var into_array__2 = (function (type,aseq){
var G__18895 = (function (a,x){
a.push(x);

return a;
});
var G__18896 = [];
var G__18897 = aseq;
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__18895,G__18896,G__18897) : cljs.core.reduce.call(null,G__18895,G__18896,G__18897));
});
into_array = function(type,aseq){
switch(arguments.length){
case 1:
return into_array__1.call(this,type);
case 2:
return into_array__2.call(this,type,aseq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
return into_array;
})()
;
/**
* Invoke JavaScript object method via string. Needed when the
* string is not a valid unquoted property name.
* @param {...*} var_args
*/
cljs.core.js_invoke = (function() { 
var js_invoke__delegate = function (obj,s,args){
return (obj[s]).apply(obj,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
var js_invoke = function (obj,s,var_args){
var args = null;
if (arguments.length > 2) {
var G__18898__i = 0, G__18898__a = new Array(arguments.length -  2);
while (G__18898__i < G__18898__a.length) {G__18898__a[G__18898__i] = arguments[G__18898__i + 2]; ++G__18898__i;}
  args = new cljs.core.IndexedSeq(G__18898__a,0);
} 
return js_invoke__delegate.call(this,obj,s,args);};
js_invoke.cljs$lang$maxFixedArity = 2;
js_invoke.cljs$lang$applyTo = (function (arglist__18899){
var obj = cljs.core.first(arglist__18899);
arglist__18899 = cljs.core.next(arglist__18899);
var s = cljs.core.first(arglist__18899);
var args = cljs.core.rest(arglist__18899);
return js_invoke__delegate(obj,s,args);
});
js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
return js_invoke;
})()
;

cljs.core.Fn = (function (){var obj18901 = {};
return obj18901;
})();


cljs.core.IFn = (function (){var obj18903 = {};
return obj18903;
})();

cljs.core._invoke = (function() {
var _invoke = null;
var _invoke__1 = (function (this$){
if((function (){var and__17320__auto__ = this$;
if(and__17320__auto__){
return this$.cljs$core$IFn$_invoke$arity$1;
} else {
return and__17320__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$1(this$);
} else {
var x__17976__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17332__auto__ = (cljs.core._invoke[(function (){var G__18949 = x__17976__auto__;
return goog.typeOf(G__18949);
})()]);
if(or__17332__auto__){
return or__17332__auto__;
} else {
var or__17332__auto____$1 = (cljs.core._invoke["_"]);
if(or__17332__auto____$1){
return or__17332__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$);
}
});
var _invoke__2 = (function (this$,a){
if((function (){var and__17320__auto__ = this$;
if(and__17320__auto__){
return this$.cljs$core$IFn$_invoke$arity$2;
} else {
return and__17320__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$2(this$,a);
} else {
var x__17976__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17332__auto__ = (cljs.core._invoke[(function (){var G__18951 = x__17976__auto__;
return goog.typeOf(G__18951);
})()]);
if(or__17332__auto__){
return or__17332__auto__;
} else {
var or__17332__auto____$1 = (cljs.core._invoke["_"]);
if(or__17332__auto____$1){
return or__17332__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a);
}
});
var _invoke__3 = (function (this$,a,b){
if((function (){var and__17320__auto__ = this$;
if(and__17320__auto__){
return this$.cljs$core$IFn$_invoke$arity$3;
} else {
return and__17320__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$3(this$,a,b);
} else {
var x__17976__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17332__auto__ = (cljs.core._invoke[(function (){var G__18953 = x__17976__auto__;
return goog.typeOf(G__18953);
})()]);
if(or__17332__auto__){
return or__17332__auto__;
} else {
var or__17332__auto____$1 = (cljs.core._invoke["_"]);
if(or__17332__auto____$1){
return or__17332__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b);
}
});
var _invoke__4 = (function (this$,a,b,c){
if((function (){var and__17320__auto__ = this$;
if(and__17320__auto__){
return this$.cljs$core$IFn$_invoke$arity$4;
} else {
return and__17320__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$4(this$,a,b,c);
} else {
var x__17976__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17332__auto__ = (cljs.core._invoke[(function (){var G__18955 = x__17976__auto__;
return goog.typeOf(G__18955);
})()]);
if(or__17332__auto__){
return or__17332__auto__;
} else {
var or__17332__auto____$1 = (cljs.core._invoke["_"]);
if(or__17332__auto____$1){
return or__17332__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c);
}
});
var _invoke__5 = (function (this$,a,b,c,d){
if((function (){var and__17320__auto__ = this$;
if(and__17320__auto__){
return this$.cljs$core$IFn$_invoke$arity$5;
} else {
return and__17320__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d);
} else {
var x__17976__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17332__auto__ = (cljs.core._invoke[(function (){var G__18957 = x__17976__auto__;
return goog.typeOf(G__18957);
})()]);
if(or__17332__auto__){
return or__17332__auto__;
} else {
var or__17332__auto____$1 = (cljs.core._invoke["_"]);
if(or__17332__auto____$1){
return or__17332__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d);
}
});
var _invoke__6 = (function (this$,a,b,c,d,e){
if((function (){var and__17320__auto__ = this$;
if(and__17320__auto__){
return this$.cljs$core$IFn$_invoke$arity$6;
} else {
return and__17320__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e);
} else {
var x__17976__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17332__auto__ = (cljs.core._invoke[(function (){var G__18959 = x__17976__auto__;
return goog.typeOf(G__18959);
})()]);
if(or__17332__auto__){
return or__17332__auto__;
} else {
var or__17332__auto____$1 = (cljs.core._invoke["_"]);
if(or__17332__auto____$1){
return or__17332__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e);
}
});
var _invoke__7 = (function (this$,a,b,c,d,e,f){
if((function (){var and__17320__auto__ = this$;
if(and__17320__auto__){
return this$.cljs$core$IFn$_invoke$arity$7;
} else {
return and__17320__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f);
} else {
var x__17976__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17332__auto__ = (cljs.core._invoke[(function (){var G__18961 = x__17976__auto__;
return goog.typeOf(G__18961);
})()]);
if(or__17332__auto__){
return or__17332__auto__;
} else {
var or__17332__auto____$1 = (cljs.core._invoke["_"]);
if(or__17332__auto____$1){
return or__17332__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f);
}
});
var _invoke__8 = (function (this$,a,b,c,d,e,f,g){
if((function (){var and__17320__auto__ = this$;
if(and__17320__auto__){
return this$.cljs$core$IFn$_invoke$arity$8;
} else {
return and__17320__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g);
} else {
var x__17976__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17332__auto__ = (cljs.core._invoke[(function (){var G__18963 = x__17976__auto__;
return goog.typeOf(G__18963);
})()]);
if(or__17332__auto__){
return or__17332__auto__;
} else {
var or__17332__auto____$1 = (cljs.core._invoke["_"]);
if(or__17332__auto____$1){
return or__17332__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g);
}
});
var _invoke__9 = (function (this$,a,b,c,d,e,f,g,h){
if((function (){var and__17320__auto__ = this$;
if(and__17320__auto__){
return this$.cljs$core$IFn$_invoke$arity$9;
} else {
return and__17320__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h);
} else {
var x__17976__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17332__auto__ = (cljs.core._invoke[(function (){var G__18965 = x__17976__auto__;
return goog.typeOf(G__18965);
})()]);
if(or__17332__auto__){
return or__17332__auto__;
} else {
var or__17332__auto____$1 = (cljs.core._invoke["_"]);
if(or__17332__auto____$1){
return or__17332__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h);
}
});
var _invoke__10 = (function (this$,a,b,c,d,e,f,g,h,i){
if((function (){var and__17320__auto__ = this$;
if(and__17320__auto__){
return this$.cljs$core$IFn$_invoke$arity$10;
} else {
return and__17320__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i);
} else {
var x__17976__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17332__auto__ = (cljs.core._invoke[(function (){var G__18967 = x__17976__auto__;
return goog.typeOf(G__18967);
})()]);
if(or__17332__auto__){
return or__17332__auto__;
} else {
var or__17332__auto____$1 = (cljs.core._invoke["_"]);
if(or__17332__auto____$1){
return or__17332__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i);
}
});
var _invoke__11 = (function (this$,a,b,c,d,e,f,g,h,i,j){
if((function (){var and__17320__auto__ = this$;
if(and__17320__auto__){
return this$.cljs$core$IFn$_invoke$arity$11;
} else {
return and__17320__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j);
} else {
var x__17976__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17332__auto__ = (cljs.core._invoke[(function (){var G__18969 = x__17976__auto__;
return goog.typeOf(G__18969);
})()]);
if(or__17332__auto__){
return or__17332__auto__;
} else {
var or__17332__auto____$1 = (cljs.core._invoke["_"]);
if(or__17332__auto____$1){
return or__17332__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j);
}
});
var _invoke__12 = (function (this$,a,b,c,d,e,f,g,h,i,j,k){
if((function (){var and__17320__auto__ = this$;
if(and__17320__auto__){
return this$.cljs$core$IFn$_invoke$arity$12;
} else {
return and__17320__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k);
} else {
var x__17976__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17332__auto__ = (cljs.core._invoke[(function (){var G__18971 = x__17976__auto__;
return goog.typeOf(G__18971);
})()]);
if(or__17332__auto__){
return or__17332__auto__;
} else {
var or__17332__auto____$1 = (cljs.core._invoke["_"]);
if(or__17332__auto____$1){
return or__17332__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k);
}
});
var _invoke__13 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l){
if((function (){var and__17320__auto__ = this$;
if(and__17320__auto__){
return this$.cljs$core$IFn$_invoke$arity$13;
} else {
return and__17320__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l);
} else {
var x__17976__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17332__auto__ = (cljs.core._invoke[(function (){var G__18973 = x__17976__auto__;
return goog.typeOf(G__18973);
})()]);
if(or__17332__auto__){
return or__17332__auto__;
} else {
var or__17332__auto____$1 = (cljs.core._invoke["_"]);
if(or__17332__auto____$1){
return or__17332__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l);
}
});
var _invoke__14 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m){
if((function (){var and__17320__auto__ = this$;
if(and__17320__auto__){
return this$.cljs$core$IFn$_invoke$arity$14;
} else {
return and__17320__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
} else {
var x__17976__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17332__auto__ = (cljs.core._invoke[(function (){var G__18975 = x__17976__auto__;
return goog.typeOf(G__18975);
})()]);
if(or__17332__auto__){
return or__17332__auto__;
} else {
var or__17332__auto____$1 = (cljs.core._invoke["_"]);
if(or__17332__auto____$1){
return or__17332__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
}
});
var _invoke__15 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
if((function (){var and__17320__auto__ = this$;
if(and__17320__auto__){
return this$.cljs$core$IFn$_invoke$arity$15;
} else {
return and__17320__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
} else {
var x__17976__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17332__auto__ = (cljs.core._invoke[(function (){var G__18977 = x__17976__auto__;
return goog.typeOf(G__18977);
})()]);
if(or__17332__auto__){
return or__17332__auto__;
} else {
var or__17332__auto____$1 = (cljs.core._invoke["_"]);
if(or__17332__auto____$1){
return or__17332__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
}
});
var _invoke__16 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
if((function (){var and__17320__auto__ = this$;
if(and__17320__auto__){
return this$.cljs$core$IFn$_invoke$arity$16;
} else {
return and__17320__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
} else {
var x__17976__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17332__auto__ = (cljs.core._invoke[(function (){var G__18979 = x__17976__auto__;
return goog.typeOf(G__18979);
})()]);
if(or__17332__auto__){
return or__17332__auto__;
} else {
var or__17332__auto____$1 = (cljs.core._invoke["_"]);
if(or__17332__auto____$1){
return or__17332__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
}
});
var _invoke__17 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
if((function (){var and__17320__auto__ = this$;
if(and__17320__auto__){
return this$.cljs$core$IFn$_invoke$arity$17;
} else {
return and__17320__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
} else {
var x__17976__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17332__auto__ = (cljs.core._invoke[(function (){var G__18981 = x__17976__auto__;
return goog.typeOf(G__18981);
})()]);
if(or__17332__auto__){
return or__17332__auto__;
} else {
var or__17332__auto____$1 = (cljs.core._invoke["_"]);
if(or__17332__auto____$1){
return or__17332__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
}
});
var _invoke__18 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
if((function (){var and__17320__auto__ = this$;
if(and__17320__auto__){
return this$.cljs$core$IFn$_invoke$arity$18;
} else {
return and__17320__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
} else {
var x__17976__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17332__auto__ = (cljs.core._invoke[(function (){var G__18983 = x__17976__auto__;
return goog.typeOf(G__18983);
})()]);
if(or__17332__auto__){
return or__17332__auto__;
} else {
var or__17332__auto____$1 = (cljs.core._invoke["_"]);
if(or__17332__auto____$1){
return or__17332__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
}
});
var _invoke__19 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
if((function (){var and__17320__auto__ = this$;
if(and__17320__auto__){
return this$.cljs$core$IFn$_invoke$arity$19;
} else {
return and__17320__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
} else {
var x__17976__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17332__auto__ = (cljs.core._invoke[(function (){var G__18985 = x__17976__auto__;
return goog.typeOf(G__18985);
})()]);
if(or__17332__auto__){
return or__17332__auto__;
} else {
var or__17332__auto____$1 = (cljs.core._invoke["_"]);
if(or__17332__auto____$1){
return or__17332__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
}
});
var _invoke__20 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
if((function (){var and__17320__auto__ = this$;
if(and__17320__auto__){
return this$.cljs$core$IFn$_invoke$arity$20;
} else {
return and__17320__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
} else {
var x__17976__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17332__auto__ = (cljs.core._invoke[(function (){var G__18987 = x__17976__auto__;
return goog.typeOf(G__18987);
})()]);
if(or__17332__auto__){
return or__17332__auto__;
} else {
var or__17332__auto____$1 = (cljs.core._invoke["_"]);
if(or__17332__auto____$1){
return or__17332__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
}
});
var _invoke__21 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
if((function (){var and__17320__auto__ = this$;
if(and__17320__auto__){
return this$.cljs$core$IFn$_invoke$arity$21;
} else {
return and__17320__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
} else {
var x__17976__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17332__auto__ = (cljs.core._invoke[(function (){var G__18989 = x__17976__auto__;
return goog.typeOf(G__18989);
})()]);
if(or__17332__auto__){
return or__17332__auto__;
} else {
var or__17332__auto____$1 = (cljs.core._invoke["_"]);
if(or__17332__auto____$1){
return or__17332__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
}
});
var _invoke__22 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
if((function (){var and__17320__auto__ = this$;
if(and__17320__auto__){
return this$.cljs$core$IFn$_invoke$arity$22;
} else {
return and__17320__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
} else {
var x__17976__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17332__auto__ = (cljs.core._invoke[(function (){var G__18991 = x__17976__auto__;
return goog.typeOf(G__18991);
})()]);
if(or__17332__auto__){
return or__17332__auto__;
} else {
var or__17332__auto____$1 = (cljs.core._invoke["_"]);
if(or__17332__auto____$1){
return or__17332__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
});
_invoke = function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return _invoke__1.call(this,this$);
case 2:
return _invoke__2.call(this,this$,a);
case 3:
return _invoke__3.call(this,this$,a,b);
case 4:
return _invoke__4.call(this,this$,a,b,c);
case 5:
return _invoke__5.call(this,this$,a,b,c,d);
case 6:
return _invoke__6.call(this,this$,a,b,c,d,e);
case 7:
return _invoke__7.call(this,this$,a,b,c,d,e,f);
case 8:
return _invoke__8.call(this,this$,a,b,c,d,e,f,g);
case 9:
return _invoke__9.call(this,this$,a,b,c,d,e,f,g,h);
case 10:
return _invoke__10.call(this,this$,a,b,c,d,e,f,g,h,i);
case 11:
return _invoke__11.call(this,this$,a,b,c,d,e,f,g,h,i,j);
case 12:
return _invoke__12.call(this,this$,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return _invoke__13.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return _invoke__14.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return _invoke__15.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return _invoke__16.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return _invoke__17.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return _invoke__18.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return _invoke__19.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return _invoke__20.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return _invoke__21.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return _invoke__22.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
_invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
_invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
_invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
_invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
_invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
_invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
_invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
_invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
_invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
_invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
_invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
_invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
_invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
_invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
_invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
_invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
_invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
_invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
_invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
_invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
_invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
return _invoke;
})()
;


cljs.core.ICloneable = (function (){var obj18993 = {};
return obj18993;
})();

cljs.core._clone = (function _clone(value){
if((function (){var and__17320__auto__ = value;
if(and__17320__auto__){
return value.cljs$core$ICloneable$_clone$arity$1;
} else {
return and__17320__auto__;
}
})()){
return value.cljs$core$ICloneable$_clone$arity$1(value);
} else {
var x__17976__auto__ = (((value == null))?null:value);
return (function (){var or__17332__auto__ = (cljs.core._clone[(function (){var G__18997 = x__17976__auto__;
return goog.typeOf(G__18997);
})()]);
if(or__17332__auto__){
return or__17332__auto__;
} else {
var or__17332__auto____$1 = (cljs.core._clone["_"]);
if(or__17332__auto____$1){
return or__17332__auto____$1;
} else {
throw cljs.core.missing_protocol("ICloneable.-clone",value);
}
}
})().call(null,value);
}
});


cljs.core.ICounted = (function (){var obj18999 = {};
return obj18999;
})();

cljs.core._count = (function _count(coll){
if((function (){var and__17320__auto__ = coll;
if(and__17320__auto__){
return coll.cljs$core$ICounted$_count$arity$1;
} else {
return and__17320__auto__;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(coll);
} else {
var x__17976__auto__ = (((coll == null))?null:coll);
return (function (){var or__17332__auto__ = (cljs.core._count[(function (){var G__19003 = x__17976__auto__;
return goog.typeOf(G__19003);
})()]);
if(or__17332__auto__){
return or__17332__auto__;
} else {
var or__17332__auto____$1 = (cljs.core._count["_"]);
if(or__17332__auto____$1){
return or__17332__auto____$1;
} else {
throw cljs.core.missing_protocol("ICounted.-count",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IEmptyableCollection = (function (){var obj19005 = {};
return obj19005;
})();

cljs.core._empty = (function _empty(coll){
if((function (){var and__17320__auto__ = coll;
if(and__17320__auto__){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
} else {
return and__17320__auto__;
}
})()){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
} else {
var x__17976__auto__ = (((coll == null))?null:coll);
return (function (){var or__17332__auto__ = (cljs.core._empty[(function (){var G__19009 = x__17976__auto__;
return goog.typeOf(G__19009);
})()]);
if(or__17332__auto__){
return or__17332__auto__;
} else {
var or__17332__auto____$1 = (cljs.core._empty["_"]);
if(or__17332__auto____$1){
return or__17332__auto____$1;
} else {
throw cljs.core.missing_protocol("IEmptyableCollection.-empty",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ICollection = (function (){var obj19011 = {};
return obj19011;
})();

cljs.core._conj = (function _conj(coll,o){
if((function (){var and__17320__auto__ = coll;
if(and__17320__auto__){
return coll.cljs$core$ICollection$_conj$arity$2;
} else {
return and__17320__auto__;
}
})()){
return coll.cljs$core$ICollection$_conj$arity$2(coll,o);
} else {
var x__17976__auto__ = (((coll == null))?null:coll);
return (function (){var or__17332__auto__ = (cljs.core._conj[(function (){var G__19015 = x__17976__auto__;
return goog.typeOf(G__19015);
})()]);
if(or__17332__auto__){
return or__17332__auto__;
} else {
var or__17332__auto____$1 = (cljs.core._conj["_"]);
if(or__17332__auto____$1){
return or__17332__auto____$1;
} else {
throw cljs.core.missing_protocol("ICollection.-conj",coll);
}
}
})().call(null,coll,o);
}
});


cljs.core.IIndexed = (function (){var obj19017 = {};
return obj19017;
})();

cljs.core._nth = (function() {
var _nth = null;
var _nth__2 = (function (coll,n){
if((function (){var and__17320__auto__ = coll;
if(and__17320__auto__){
return coll.cljs$core$IIndexed$_nth$arity$2;
} else {
return and__17320__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(coll,n);
} else {
var x__17976__auto__ = (((coll == null))?null:coll);
return (function (){var or__17332__auto__ = (cljs.core._nth[(function (){var G__19023 = x__17976__auto__;
return goog.typeOf(G__19023);
})()]);
if(or__17332__auto__){
return or__17332__auto__;
} else {
var or__17332__auto____$1 = (cljs.core._nth["_"]);
if(or__17332__auto____$1){
return or__17332__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n);
}
});
var _nth__3 = (function (coll,n,not_found){
if((function (){var and__17320__auto__ = coll;
if(and__17320__auto__){
return coll.cljs$core$IIndexed$_nth$arity$3;
} else {
return and__17320__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(coll,n,not_found);
} else {
var x__17976__auto__ = (((coll == null))?null:coll);
return (function (){var or__17332__auto__ = (cljs.core._nth[(function (){var G__19025 = x__17976__auto__;
return goog.typeOf(G__19025);
})()]);
if(or__17332__auto__){
return or__17332__auto__;
} else {
var or__17332__auto____$1 = (cljs.core._nth["_"]);
if(or__17332__auto____$1){
return or__17332__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n,not_found);
}
});
_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return _nth__2.call(this,coll,n);
case 3:
return _nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
_nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
return _nth;
})()
;


cljs.core.ASeq = (function (){var obj19027 = {};
return obj19027;
})();


cljs.core.ISeq = (function (){var obj19029 = {};
return obj19029;
})();

cljs.core._first = (function _first(coll){
if((function (){var and__17320__auto__ = coll;
if(and__17320__auto__){
return coll.cljs$core$ISeq$_first$arity$1;
} else {
return and__17320__auto__;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(coll);
} else {
var x__17976__auto__ = (((coll == null))?null:coll);
return (function (){var or__17332__auto__ = (cljs.core._first[(function (){var G__19033 = x__17976__auto__;
return goog.typeOf(G__19033);
})()]);
if(or__17332__auto__){
return or__17332__auto__;
} else {
var or__17332__auto____$1 = (cljs.core._first["_"]);
if(or__17332__auto____$1){
return or__17332__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._rest = (function _rest(coll){
if((function (){var and__17320__auto__ = coll;
if(and__17320__auto__){
return coll.cljs$core$ISeq$_rest$arity$1;
} else {
return and__17320__auto__;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(coll);
} else {
var x__17976__auto__ = (((coll == null))?null:coll);
return (function (){var or__17332__auto__ = (cljs.core._rest[(function (){var G__19037 = x__17976__auto__;
return goog.typeOf(G__19037);
})()]);
if(or__17332__auto__){
return or__17332__auto__;
} else {
var or__17332__auto____$1 = (cljs.core._rest["_"]);
if(or__17332__auto____$1){
return or__17332__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INext = (function (){var obj19039 = {};
return obj19039;
})();

cljs.core._next = (function _next(coll){
if((function (){var and__17320__auto__ = coll;
if(and__17320__auto__){
return coll.cljs$core$INext$_next$arity$1;
} else {
return and__17320__auto__;
}
})()){
return coll.cljs$core$INext$_next$arity$1(coll);
} else {
var x__17976__auto__ = (((coll == null))?null:coll);
return (function (){var or__17332__auto__ = (cljs.core._next[(function (){var G__19043 = x__17976__auto__;
return goog.typeOf(G__19043);
})()]);
if(or__17332__auto__){
return or__17332__auto__;
} else {
var or__17332__auto____$1 = (cljs.core._next["_"]);
if(or__17332__auto____$1){
return or__17332__auto____$1;
} else {
throw cljs.core.missing_protocol("INext.-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ILookup = (function (){var obj19045 = {};
return obj19045;
})();

cljs.core._lookup = (function() {
var _lookup = null;
var _lookup__2 = (function (o,k){
if((function (){var and__17320__auto__ = o;
if(and__17320__auto__){
return o.cljs$core$ILookup$_lookup$arity$2;
} else {
return and__17320__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(o,k);
} else {
var x__17976__auto__ = (((o == null))?null:o);
return (function (){var or__17332__auto__ = (cljs.core._lookup[(function (){var G__19051 = x__17976__auto__;
return goog.typeOf(G__19051);
})()]);
if(or__17332__auto__){
return or__17332__auto__;
} else {
var or__17332__auto____$1 = (cljs.core._lookup["_"]);
if(or__17332__auto____$1){
return or__17332__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k);
}
});
var _lookup__3 = (function (o,k,not_found){
if((function (){var and__17320__auto__ = o;
if(and__17320__auto__){
return o.cljs$core$ILookup$_lookup$arity$3;
} else {
return and__17320__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(o,k,not_found);
} else {
var x__17976__auto__ = (((o == null))?null:o);
return (function (){var or__17332__auto__ = (cljs.core._lookup[(function (){var G__19053 = x__17976__auto__;
return goog.typeOf(G__19053);
})()]);
if(or__17332__auto__){
return or__17332__auto__;
} else {
var or__17332__auto____$1 = (cljs.core._lookup["_"]);
if(or__17332__auto____$1){
return or__17332__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k,not_found);
}
});
_lookup = function(o,k,not_found){
switch(arguments.length){
case 2:
return _lookup__2.call(this,o,k);
case 3:
return _lookup__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
_lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
return _lookup;
})()
;


cljs.core.IAssociative = (function (){var obj19055 = {};
return obj19055;
})();

cljs.core._contains_key_QMARK_ = (function _contains_key_QMARK_(coll,k){
if((function (){var and__17320__auto__ = coll;
if(and__17320__auto__){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
} else {
return and__17320__auto__;
}
})()){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll,k);
} else {
var x__17976__auto__ = (((coll == null))?null:coll);
return (function (){var or__17332__auto__ = (cljs.core._contains_key_QMARK_[(function (){var G__19059 = x__17976__auto__;
return goog.typeOf(G__19059);
})()]);
if(or__17332__auto__){
return or__17332__auto__;
} else {
var or__17332__auto____$1 = (cljs.core._contains_key_QMARK_["_"]);
if(or__17332__auto____$1){
return or__17332__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-contains-key?",coll);
}
}
})().call(null,coll,k);
}
});

cljs.core._assoc = (function _assoc(coll,k,v){
if((function (){var and__17320__auto__ = coll;
if(and__17320__auto__){
return coll.cljs$core$IAssociative$_assoc$arity$3;
} else {
return and__17320__auto__;
}
})()){
return coll.cljs$core$IAssociative$_assoc$arity$3(coll,k,v);
} else {
var x__17976__auto__ = (((coll == null))?null:coll);
return (function (){var or__17332__auto__ = (cljs.core._assoc[(function (){var G__19063 = x__17976__auto__;
return goog.typeOf(G__19063);
})()]);
if(or__17332__auto__){
return or__17332__auto__;
} else {
var or__17332__auto____$1 = (cljs.core._assoc["_"]);
if(or__17332__auto____$1){
return or__17332__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-assoc",coll);
}
}
})().call(null,coll,k,v);
}
});


cljs.core.IMap = (function (){var obj19065 = {};
return obj19065;
})();

cljs.core._dissoc = (function _dissoc(coll,k){
if((function (){var and__17320__auto__ = coll;
if(and__17320__auto__){
return coll.cljs$core$IMap$_dissoc$arity$2;
} else {
return and__17320__auto__;
}
})()){
return coll.cljs$core$IMap$_dissoc$arity$2(coll,k);
} else {
var x__17976__auto__ = (((coll == null))?null:coll);
return (function (){var or__17332__auto__ = (cljs.core._dissoc[(function (){var G__19069 = x__17976__auto__;
return goog.typeOf(G__19069);
})()]);
if(or__17332__auto__){
return or__17332__auto__;
} else {
var or__17332__auto____$1 = (cljs.core._dissoc["_"]);
if(or__17332__auto____$1){
return or__17332__auto____$1;
} else {
throw cljs.core.missing_protocol("IMap.-dissoc",coll);
}
}
})().call(null,coll,k);
}
});


cljs.core.IMapEntry = (function (){var obj19071 = {};
return obj19071;
})();

cljs.core._key = (function _key(coll){
if((function (){var and__17320__auto__ = coll;
if(and__17320__auto__){
return coll.cljs$core$IMapEntry$_key$arity$1;
} else {
return and__17320__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_key$arity$1(coll);
} else {
var x__17976__auto__ = (((coll == null))?null:coll);
return (function (){var or__17332__auto__ = (cljs.core._key[(function (){var G__19075 = x__17976__auto__;
return goog.typeOf(G__19075);
})()]);
if(or__17332__auto__){
return or__17332__auto__;
} else {
var or__17332__auto____$1 = (cljs.core._key["_"]);
if(or__17332__auto____$1){
return or__17332__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-key",coll);
}
}
})().call(null,coll);
}
});

cljs.core._val = (function _val(coll){
if((function (){var and__17320__auto__ = coll;
if(and__17320__auto__){
return coll.cljs$core$IMapEntry$_val$arity$1;
} else {
return and__17320__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_val$arity$1(coll);
} else {
var x__17976__auto__ = (((coll == null))?null:coll);
return (function (){var or__17332__auto__ = (cljs.core._val[(function (){var G__19079 = x__17976__auto__;
return goog.typeOf(G__19079);
})()]);
if(or__17332__auto__){
return or__17332__auto__;
} else {
var or__17332__auto____$1 = (cljs.core._val["_"]);
if(or__17332__auto____$1){
return or__17332__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-val",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISet = (function (){var obj19081 = {};
return obj19081;
})();

cljs.core._disjoin = (function _disjoin(coll,v){
if((function (){var and__17320__auto__ = coll;
if(and__17320__auto__){
return coll.cljs$core$ISet$_disjoin$arity$2;
} else {
return and__17320__auto__;
}
})()){
return coll.cljs$core$ISet$_disjoin$arity$2(coll,v);
} else {
var x__17976__auto__ = (((coll == null))?null:coll);
return (function (){var or__17332__auto__ = (cljs.core._disjoin[(function (){var G__19085 = x__17976__auto__;
return goog.typeOf(G__19085);
})()]);
if(or__17332__auto__){
return or__17332__auto__;
} else {
var or__17332__auto____$1 = (cljs.core._disjoin["_"]);
if(or__17332__auto____$1){
return or__17332__auto____$1;
} else {
throw cljs.core.missing_protocol("ISet.-disjoin",coll);
}
}
})().call(null,coll,v);
}
});


cljs.core.IStack = (function (){var obj19087 = {};
return obj19087;
})();

cljs.core._peek = (function _peek(coll){
if((function (){var and__17320__auto__ = coll;
if(and__17320__auto__){
return coll.cljs$core$IStack$_peek$arity$1;
} else {
return and__17320__auto__;
}
})()){
return coll.cljs$core$IStack$_peek$arity$1(coll);
} else {
var x__17976__auto__ = (((coll == null))?null:coll);
return (function (){var or__17332__auto__ = (cljs.core._peek[(function (){var G__19091 = x__17976__auto__;
return goog.typeOf(G__19091);
})()]);
if(or__17332__auto__){
return or__17332__auto__;
} else {
var or__17332__auto____$1 = (cljs.core._peek["_"]);
if(or__17332__auto____$1){
return or__17332__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-peek",coll);
}
}
})().call(null,coll);
}
});

cljs.core._pop = (function _pop(coll){
if((function (){var and__17320__auto__ = coll;
if(and__17320__auto__){
return coll.cljs$core$IStack$_pop$arity$1;
} else {
return and__17320__auto__;
}
})()){
return coll.cljs$core$IStack$_pop$arity$1(coll);
} else {
var x__17976__auto__ = (((coll == null))?null:coll);
return (function (){var or__17332__auto__ = (cljs.core._pop[(function (){var G__19095 = x__17976__auto__;
return goog.typeOf(G__19095);
})()]);
if(or__17332__auto__){
return or__17332__auto__;
} else {
var or__17332__auto____$1 = (cljs.core._pop["_"]);
if(or__17332__auto____$1){
return or__17332__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-pop",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IVector = (function (){var obj19097 = {};
return obj19097;
})();

cljs.core._assoc_n = (function _assoc_n(coll,n,val){
if((function (){var and__17320__auto__ = coll;
if(and__17320__auto__){
return coll.cljs$core$IVector$_assoc_n$arity$3;
} else {
return and__17320__auto__;
}
})()){
return coll.cljs$core$IVector$_assoc_n$arity$3(coll,n,val);
} else {
var x__17976__auto__ = (((coll == null))?null:coll);
return (function (){var or__17332__auto__ = (cljs.core._assoc_n[(function (){var G__19101 = x__17976__auto__;
return goog.typeOf(G__19101);
})()]);
if(or__17332__auto__){
return or__17332__auto__;
} else {
var or__17332__auto____$1 = (cljs.core._assoc_n["_"]);
if(or__17332__auto____$1){
return or__17332__auto____$1;
} else {
throw cljs.core.missing_protocol("IVector.-assoc-n",coll);
}
}
})().call(null,coll,n,val);
}
});


cljs.core.IDeref = (function (){var obj19103 = {};
return obj19103;
})();

cljs.core._deref = (function _deref(o){
if((function (){var and__17320__auto__ = o;
if(and__17320__auto__){
return o.cljs$core$IDeref$_deref$arity$1;
} else {
return and__17320__auto__;
}
})()){
return o.cljs$core$IDeref$_deref$arity$1(o);
} else {
var x__17976__auto__ = (((o == null))?null:o);
return (function (){var or__17332__auto__ = (cljs.core._deref[(function (){var G__19107 = x__17976__auto__;
return goog.typeOf(G__19107);
})()]);
if(or__17332__auto__){
return or__17332__auto__;
} else {
var or__17332__auto____$1 = (cljs.core._deref["_"]);
if(or__17332__auto____$1){
return or__17332__auto____$1;
} else {
throw cljs.core.missing_protocol("IDeref.-deref",o);
}
}
})().call(null,o);
}
});


cljs.core.IDerefWithTimeout = (function (){var obj19109 = {};
return obj19109;
})();

cljs.core._deref_with_timeout = (function _deref_with_timeout(o,msec,timeout_val){
if((function (){var and__17320__auto__ = o;
if(and__17320__auto__){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
} else {
return and__17320__auto__;
}
})()){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o,msec,timeout_val);
} else {
var x__17976__auto__ = (((o == null))?null:o);
return (function (){var or__17332__auto__ = (cljs.core._deref_with_timeout[(function (){var G__19113 = x__17976__auto__;
return goog.typeOf(G__19113);
})()]);
if(or__17332__auto__){
return or__17332__auto__;
} else {
var or__17332__auto____$1 = (cljs.core._deref_with_timeout["_"]);
if(or__17332__auto____$1){
return or__17332__auto____$1;
} else {
throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout",o);
}
}
})().call(null,o,msec,timeout_val);
}
});


cljs.core.IMeta = (function (){var obj19115 = {};
return obj19115;
})();

cljs.core._meta = (function _meta(o){
if((function (){var and__17320__auto__ = o;
if(and__17320__auto__){
return o.cljs$core$IMeta$_meta$arity$1;
} else {
return and__17320__auto__;
}
})()){
return o.cljs$core$IMeta$_meta$arity$1(o);
} else {
var x__17976__auto__ = (((o == null))?null:o);
return (function (){var or__17332__auto__ = (cljs.core._meta[(function (){var G__19119 = x__17976__auto__;
return goog.typeOf(G__19119);
})()]);
if(or__17332__auto__){
return or__17332__auto__;
} else {
var or__17332__auto____$1 = (cljs.core._meta["_"]);
if(or__17332__auto____$1){
return or__17332__auto____$1;
} else {
throw cljs.core.missing_protocol("IMeta.-meta",o);
}
}
})().call(null,o);
}
});


cljs.core.IWithMeta = (function (){var obj19121 = {};
return obj19121;
})();

cljs.core._with_meta = (function _with_meta(o,meta){
if((function (){var and__17320__auto__ = o;
if(and__17320__auto__){
return o.cljs$core$IWithMeta$_with_meta$arity$2;
} else {
return and__17320__auto__;
}
})()){
return o.cljs$core$IWithMeta$_with_meta$arity$2(o,meta);
} else {
var x__17976__auto__ = (((o == null))?null:o);
return (function (){var or__17332__auto__ = (cljs.core._with_meta[(function (){var G__19125 = x__17976__auto__;
return goog.typeOf(G__19125);
})()]);
if(or__17332__auto__){
return or__17332__auto__;
} else {
var or__17332__auto____$1 = (cljs.core._with_meta["_"]);
if(or__17332__auto____$1){
return or__17332__auto____$1;
} else {
throw cljs.core.missing_protocol("IWithMeta.-with-meta",o);
}
}
})().call(null,o,meta);
}
});


cljs.core.IReduce = (function (){var obj19127 = {};
return obj19127;
})();

cljs.core._reduce = (function() {
var _reduce = null;
var _reduce__2 = (function (coll,f){
if((function (){var and__17320__auto__ = coll;
if(and__17320__auto__){
return coll.cljs$core$IReduce$_reduce$arity$2;
} else {
return and__17320__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(coll,f);
} else {
var x__17976__auto__ = (((coll == null))?null:coll);
return (function (){var or__17332__auto__ = (cljs.core._reduce[(function (){var G__19133 = x__17976__auto__;
return goog.typeOf(G__19133);
})()]);
if(or__17332__auto__){
return or__17332__auto__;
} else {
var or__17332__auto____$1 = (cljs.core._reduce["_"]);
if(or__17332__auto____$1){
return or__17332__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f);
}
});
var _reduce__3 = (function (coll,f,start){
if((function (){var and__17320__auto__ = coll;
if(and__17320__auto__){
return coll.cljs$core$IReduce$_reduce$arity$3;
} else {
return and__17320__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(coll,f,start);
} else {
var x__17976__auto__ = (((coll == null))?null:coll);
return (function (){var or__17332__auto__ = (cljs.core._reduce[(function (){var G__19135 = x__17976__auto__;
return goog.typeOf(G__19135);
})()]);
if(or__17332__auto__){
return or__17332__auto__;
} else {
var or__17332__auto____$1 = (cljs.core._reduce["_"]);
if(or__17332__auto____$1){
return or__17332__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f,start);
}
});
_reduce = function(coll,f,start){
switch(arguments.length){
case 2:
return _reduce__2.call(this,coll,f);
case 3:
return _reduce__3.call(this,coll,f,start);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
_reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
return _reduce;
})()
;


cljs.core.IKVReduce = (function (){var obj19137 = {};
return obj19137;
})();

cljs.core._kv_reduce = (function _kv_reduce(coll,f,init){
if((function (){var and__17320__auto__ = coll;
if(and__17320__auto__){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
} else {
return and__17320__auto__;
}
})()){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll,f,init);
} else {
var x__17976__auto__ = (((coll == null))?null:coll);
return (function (){var or__17332__auto__ = (cljs.core._kv_reduce[(function (){var G__19141 = x__17976__auto__;
return goog.typeOf(G__19141);
})()]);
if(or__17332__auto__){
return or__17332__auto__;
} else {
var or__17332__auto____$1 = (cljs.core._kv_reduce["_"]);
if(or__17332__auto____$1){
return or__17332__auto____$1;
} else {
throw cljs.core.missing_protocol("IKVReduce.-kv-reduce",coll);
}
}
})().call(null,coll,f,init);
}
});


cljs.core.IEquiv = (function (){var obj19143 = {};
return obj19143;
})();

cljs.core._equiv = (function _equiv(o,other){
if((function (){var and__17320__auto__ = o;
if(and__17320__auto__){
return o.cljs$core$IEquiv$_equiv$arity$2;
} else {
return and__17320__auto__;
}
})()){
return o.cljs$core$IEquiv$_equiv$arity$2(o,other);
} else {
var x__17976__auto__ = (((o == null))?null:o);
return (function (){var or__17332__auto__ = (cljs.core._equiv[(function (){var G__19147 = x__17976__auto__;
return goog.typeOf(G__19147);
})()]);
if(or__17332__auto__){
return or__17332__auto__;
} else {
var or__17332__auto____$1 = (cljs.core._equiv["_"]);
if(or__17332__auto____$1){
return or__17332__auto____$1;
} else {
throw cljs.core.missing_protocol("IEquiv.-equiv",o);
}
}
})().call(null,o,other);
}
});


cljs.core.IHash = (function (){var obj19149 = {};
return obj19149;
})();

cljs.core._hash = (function _hash(o){
if((function (){var and__17320__auto__ = o;
if(and__17320__auto__){
return o.cljs$core$IHash$_hash$arity$1;
} else {
return and__17320__auto__;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(o);
} else {
var x__17976__auto__ = (((o == null))?null:o);
return (function (){var or__17332__auto__ = (cljs.core._hash[(function (){var G__19153 = x__17976__auto__;
return goog.typeOf(G__19153);
})()]);
if(or__17332__auto__){
return or__17332__auto__;
} else {
var or__17332__auto____$1 = (cljs.core._hash["_"]);
if(or__17332__auto____$1){
return or__17332__auto____$1;
} else {
throw cljs.core.missing_protocol("IHash.-hash",o);
}
}
})().call(null,o);
}
});


cljs.core.ISeqable = (function (){var obj19155 = {};
return obj19155;
})();

cljs.core._seq = (function _seq(o){
if((function (){var and__17320__auto__ = o;
if(and__17320__auto__){
return o.cljs$core$ISeqable$_seq$arity$1;
} else {
return and__17320__auto__;
}
})()){
return o.cljs$core$ISeqable$_seq$arity$1(o);
} else {
var x__17976__auto__ = (((o == null))?null:o);
return (function (){var or__17332__auto__ = (cljs.core._seq[(function (){var G__19159 = x__17976__auto__;
return goog.typeOf(G__19159);
})()]);
if(or__17332__auto__){
return or__17332__auto__;
} else {
var or__17332__auto____$1 = (cljs.core._seq["_"]);
if(or__17332__auto____$1){
return or__17332__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeqable.-seq",o);
}
}
})().call(null,o);
}
});


cljs.core.ISequential = (function (){var obj19161 = {};
return obj19161;
})();


cljs.core.IList = (function (){var obj19163 = {};
return obj19163;
})();


cljs.core.IRecord = (function (){var obj19165 = {};
return obj19165;
})();


cljs.core.IReversible = (function (){var obj19167 = {};
return obj19167;
})();

cljs.core._rseq = (function _rseq(coll){
if((function (){var and__17320__auto__ = coll;
if(and__17320__auto__){
return coll.cljs$core$IReversible$_rseq$arity$1;
} else {
return and__17320__auto__;
}
})()){
return coll.cljs$core$IReversible$_rseq$arity$1(coll);
} else {
var x__17976__auto__ = (((coll == null))?null:coll);
return (function (){var or__17332__auto__ = (cljs.core._rseq[(function (){var G__19171 = x__17976__auto__;
return goog.typeOf(G__19171);
})()]);
if(or__17332__auto__){
return or__17332__auto__;
} else {
var or__17332__auto____$1 = (cljs.core._rseq["_"]);
if(or__17332__auto____$1){
return or__17332__auto____$1;
} else {
throw cljs.core.missing_protocol("IReversible.-rseq",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISorted = (function (){var obj19173 = {};
return obj19173;
})();

cljs.core._sorted_seq = (function _sorted_seq(coll,ascending_QMARK_){
if((function (){var and__17320__auto__ = coll;
if(and__17320__auto__){
return coll.cljs$core$ISorted$_sorted_seq$arity$2;
} else {
return and__17320__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll,ascending_QMARK_);
} else {
var x__17976__auto__ = (((coll == null))?null:coll);
return (function (){var or__17332__auto__ = (cljs.core._sorted_seq[(function (){var G__19177 = x__17976__auto__;
return goog.typeOf(G__19177);
})()]);
if(or__17332__auto__){
return or__17332__auto__;
} else {
var or__17332__auto____$1 = (cljs.core._sorted_seq["_"]);
if(or__17332__auto____$1){
return or__17332__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq",coll);
}
}
})().call(null,coll,ascending_QMARK_);
}
});

cljs.core._sorted_seq_from = (function _sorted_seq_from(coll,k,ascending_QMARK_){
if((function (){var and__17320__auto__ = coll;
if(and__17320__auto__){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
} else {
return and__17320__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll,k,ascending_QMARK_);
} else {
var x__17976__auto__ = (((coll == null))?null:coll);
return (function (){var or__17332__auto__ = (cljs.core._sorted_seq_from[(function (){var G__19181 = x__17976__auto__;
return goog.typeOf(G__19181);
})()]);
if(or__17332__auto__){
return or__17332__auto__;
} else {
var or__17332__auto____$1 = (cljs.core._sorted_seq_from["_"]);
if(or__17332__auto____$1){
return or__17332__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq-from",coll);
}
}
})().call(null,coll,k,ascending_QMARK_);
}
});

cljs.core._entry_key = (function _entry_key(coll,entry){
if((function (){var and__17320__auto__ = coll;
if(and__17320__auto__){
return coll.cljs$core$ISorted$_entry_key$arity$2;
} else {
return and__17320__auto__;
}
})()){
return coll.cljs$core$ISorted$_entry_key$arity$2(coll,entry);
} else {
var x__17976__auto__ = (((coll == null))?null:coll);
return (function (){var or__17332__auto__ = (cljs.core._entry_key[(function (){var G__19185 = x__17976__auto__;
return goog.typeOf(G__19185);
})()]);
if(or__17332__auto__){
return or__17332__auto__;
} else {
var or__17332__auto____$1 = (cljs.core._entry_key["_"]);
if(or__17332__auto____$1){
return or__17332__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-entry-key",coll);
}
}
})().call(null,coll,entry);
}
});

cljs.core._comparator = (function _comparator(coll){
if((function (){var and__17320__auto__ = coll;
if(and__17320__auto__){
return coll.cljs$core$ISorted$_comparator$arity$1;
} else {
return and__17320__auto__;
}
})()){
return coll.cljs$core$ISorted$_comparator$arity$1(coll);
} else {
var x__17976__auto__ = (((coll == null))?null:coll);
return (function (){var or__17332__auto__ = (cljs.core._comparator[(function (){var G__19189 = x__17976__auto__;
return goog.typeOf(G__19189);
})()]);
if(or__17332__auto__){
return or__17332__auto__;
} else {
var or__17332__auto____$1 = (cljs.core._comparator["_"]);
if(or__17332__auto____$1){
return or__17332__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-comparator",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IWriter = (function (){var obj19191 = {};
return obj19191;
})();

cljs.core._write = (function _write(writer,s){
if((function (){var and__17320__auto__ = writer;
if(and__17320__auto__){
return writer.cljs$core$IWriter$_write$arity$2;
} else {
return and__17320__auto__;
}
})()){
return writer.cljs$core$IWriter$_write$arity$2(writer,s);
} else {
var x__17976__auto__ = (((writer == null))?null:writer);
return (function (){var or__17332__auto__ = (cljs.core._write[(function (){var G__19195 = x__17976__auto__;
return goog.typeOf(G__19195);
})()]);
if(or__17332__auto__){
return or__17332__auto__;
} else {
var or__17332__auto____$1 = (cljs.core._write["_"]);
if(or__17332__auto____$1){
return or__17332__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-write",writer);
}
}
})().call(null,writer,s);
}
});

cljs.core._flush = (function _flush(writer){
if((function (){var and__17320__auto__ = writer;
if(and__17320__auto__){
return writer.cljs$core$IWriter$_flush$arity$1;
} else {
return and__17320__auto__;
}
})()){
return writer.cljs$core$IWriter$_flush$arity$1(writer);
} else {
var x__17976__auto__ = (((writer == null))?null:writer);
return (function (){var or__17332__auto__ = (cljs.core._flush[(function (){var G__19199 = x__17976__auto__;
return goog.typeOf(G__19199);
})()]);
if(or__17332__auto__){
return or__17332__auto__;
} else {
var or__17332__auto____$1 = (cljs.core._flush["_"]);
if(or__17332__auto____$1){
return or__17332__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-flush",writer);
}
}
})().call(null,writer);
}
});


cljs.core.IPrintWithWriter = (function (){var obj19201 = {};
return obj19201;
})();

cljs.core._pr_writer = (function _pr_writer(o,writer,opts){
if((function (){var and__17320__auto__ = o;
if(and__17320__auto__){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
} else {
return and__17320__auto__;
}
})()){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o,writer,opts);
} else {
var x__17976__auto__ = (((o == null))?null:o);
return (function (){var or__17332__auto__ = (cljs.core._pr_writer[(function (){var G__19205 = x__17976__auto__;
return goog.typeOf(G__19205);
})()]);
if(or__17332__auto__){
return or__17332__auto__;
} else {
var or__17332__auto____$1 = (cljs.core._pr_writer["_"]);
if(or__17332__auto____$1){
return or__17332__auto____$1;
} else {
throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer",o);
}
}
})().call(null,o,writer,opts);
}
});


cljs.core.IPending = (function (){var obj19207 = {};
return obj19207;
})();

cljs.core._realized_QMARK_ = (function _realized_QMARK_(d){
if((function (){var and__17320__auto__ = d;
if(and__17320__auto__){
return d.cljs$core$IPending$_realized_QMARK_$arity$1;
} else {
return and__17320__auto__;
}
})()){
return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
} else {
var x__17976__auto__ = (((d == null))?null:d);
return (function (){var or__17332__auto__ = (cljs.core._realized_QMARK_[(function (){var G__19211 = x__17976__auto__;
return goog.typeOf(G__19211);
})()]);
if(or__17332__auto__){
return or__17332__auto__;
} else {
var or__17332__auto____$1 = (cljs.core._realized_QMARK_["_"]);
if(or__17332__auto____$1){
return or__17332__auto____$1;
} else {
throw cljs.core.missing_protocol("IPending.-realized?",d);
}
}
})().call(null,d);
}
});


cljs.core.IWatchable = (function (){var obj19213 = {};
return obj19213;
})();

cljs.core._notify_watches = (function _notify_watches(this$,oldval,newval){
if((function (){var and__17320__auto__ = this$;
if(and__17320__auto__){
return this$.cljs$core$IWatchable$_notify_watches$arity$3;
} else {
return and__17320__auto__;
}
})()){
return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$,oldval,newval);
} else {
var x__17976__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17332__auto__ = (cljs.core._notify_watches[(function (){var G__19217 = x__17976__auto__;
return goog.typeOf(G__19217);
})()]);
if(or__17332__auto__){
return or__17332__auto__;
} else {
var or__17332__auto____$1 = (cljs.core._notify_watches["_"]);
if(or__17332__auto____$1){
return or__17332__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-notify-watches",this$);
}
}
})().call(null,this$,oldval,newval);
}
});

cljs.core._add_watch = (function _add_watch(this$,key,f){
if((function (){var and__17320__auto__ = this$;
if(and__17320__auto__){
return this$.cljs$core$IWatchable$_add_watch$arity$3;
} else {
return and__17320__auto__;
}
})()){
return this$.cljs$core$IWatchable$_add_watch$arity$3(this$,key,f);
} else {
var x__17976__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17332__auto__ = (cljs.core._add_watch[(function (){var G__19221 = x__17976__auto__;
return goog.typeOf(G__19221);
})()]);
if(or__17332__auto__){
return or__17332__auto__;
} else {
var or__17332__auto____$1 = (cljs.core._add_watch["_"]);
if(or__17332__auto____$1){
return or__17332__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-add-watch",this$);
}
}
})().call(null,this$,key,f);
}
});

cljs.core._remove_watch = (function _remove_watch(this$,key){
if((function (){var and__17320__auto__ = this$;
if(and__17320__auto__){
return this$.cljs$core$IWatchable$_remove_watch$arity$2;
} else {
return and__17320__auto__;
}
})()){
return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$,key);
} else {
var x__17976__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17332__auto__ = (cljs.core._remove_watch[(function (){var G__19225 = x__17976__auto__;
return goog.typeOf(G__19225);
})()]);
if(or__17332__auto__){
return or__17332__auto__;
} else {
var or__17332__auto____$1 = (cljs.core._remove_watch["_"]);
if(or__17332__auto____$1){
return or__17332__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-remove-watch",this$);
}
}
})().call(null,this$,key);
}
});


cljs.core.IEditableCollection = (function (){var obj19227 = {};
return obj19227;
})();

cljs.core._as_transient = (function _as_transient(coll){
if((function (){var and__17320__auto__ = coll;
if(and__17320__auto__){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
} else {
return and__17320__auto__;
}
})()){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
} else {
var x__17976__auto__ = (((coll == null))?null:coll);
return (function (){var or__17332__auto__ = (cljs.core._as_transient[(function (){var G__19231 = x__17976__auto__;
return goog.typeOf(G__19231);
})()]);
if(or__17332__auto__){
return or__17332__auto__;
} else {
var or__17332__auto____$1 = (cljs.core._as_transient["_"]);
if(or__17332__auto____$1){
return or__17332__auto____$1;
} else {
throw cljs.core.missing_protocol("IEditableCollection.-as-transient",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ITransientCollection = (function (){var obj19233 = {};
return obj19233;
})();

cljs.core._conj_BANG_ = (function _conj_BANG_(tcoll,val){
if((function (){var and__17320__auto__ = tcoll;
if(and__17320__auto__){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
} else {
return and__17320__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll,val);
} else {
var x__17976__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__17332__auto__ = (cljs.core._conj_BANG_[(function (){var G__19237 = x__17976__auto__;
return goog.typeOf(G__19237);
})()]);
if(or__17332__auto__){
return or__17332__auto__;
} else {
var or__17332__auto____$1 = (cljs.core._conj_BANG_["_"]);
if(or__17332__auto____$1){
return or__17332__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-conj!",tcoll);
}
}
})().call(null,tcoll,val);
}
});

cljs.core._persistent_BANG_ = (function _persistent_BANG_(tcoll){
if((function (){var and__17320__auto__ = tcoll;
if(and__17320__auto__){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
} else {
return and__17320__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
} else {
var x__17976__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__17332__auto__ = (cljs.core._persistent_BANG_[(function (){var G__19241 = x__17976__auto__;
return goog.typeOf(G__19241);
})()]);
if(or__17332__auto__){
return or__17332__auto__;
} else {
var or__17332__auto____$1 = (cljs.core._persistent_BANG_["_"]);
if(or__17332__auto____$1){
return or__17332__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-persistent!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientAssociative = (function (){var obj19243 = {};
return obj19243;
})();

cljs.core._assoc_BANG_ = (function _assoc_BANG_(tcoll,key,val){
if((function (){var and__17320__auto__ = tcoll;
if(and__17320__auto__){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
} else {
return and__17320__auto__;
}
})()){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll,key,val);
} else {
var x__17976__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__17332__auto__ = (cljs.core._assoc_BANG_[(function (){var G__19247 = x__17976__auto__;
return goog.typeOf(G__19247);
})()]);
if(or__17332__auto__){
return or__17332__auto__;
} else {
var or__17332__auto____$1 = (cljs.core._assoc_BANG_["_"]);
if(or__17332__auto____$1){
return or__17332__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientAssociative.-assoc!",tcoll);
}
}
})().call(null,tcoll,key,val);
}
});


cljs.core.ITransientMap = (function (){var obj19249 = {};
return obj19249;
})();

cljs.core._dissoc_BANG_ = (function _dissoc_BANG_(tcoll,key){
if((function (){var and__17320__auto__ = tcoll;
if(and__17320__auto__){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
} else {
return and__17320__auto__;
}
})()){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll,key);
} else {
var x__17976__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__17332__auto__ = (cljs.core._dissoc_BANG_[(function (){var G__19253 = x__17976__auto__;
return goog.typeOf(G__19253);
})()]);
if(or__17332__auto__){
return or__17332__auto__;
} else {
var or__17332__auto____$1 = (cljs.core._dissoc_BANG_["_"]);
if(or__17332__auto____$1){
return or__17332__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientMap.-dissoc!",tcoll);
}
}
})().call(null,tcoll,key);
}
});


cljs.core.ITransientVector = (function (){var obj19255 = {};
return obj19255;
})();

cljs.core._assoc_n_BANG_ = (function _assoc_n_BANG_(tcoll,n,val){
if((function (){var and__17320__auto__ = tcoll;
if(and__17320__auto__){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
} else {
return and__17320__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll,n,val);
} else {
var x__17976__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__17332__auto__ = (cljs.core._assoc_n_BANG_[(function (){var G__19259 = x__17976__auto__;
return goog.typeOf(G__19259);
})()]);
if(or__17332__auto__){
return or__17332__auto__;
} else {
var or__17332__auto____$1 = (cljs.core._assoc_n_BANG_["_"]);
if(or__17332__auto____$1){
return or__17332__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-assoc-n!",tcoll);
}
}
})().call(null,tcoll,n,val);
}
});

cljs.core._pop_BANG_ = (function _pop_BANG_(tcoll){
if((function (){var and__17320__auto__ = tcoll;
if(and__17320__auto__){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
} else {
return and__17320__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
} else {
var x__17976__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__17332__auto__ = (cljs.core._pop_BANG_[(function (){var G__19263 = x__17976__auto__;
return goog.typeOf(G__19263);
})()]);
if(or__17332__auto__){
return or__17332__auto__;
} else {
var or__17332__auto____$1 = (cljs.core._pop_BANG_["_"]);
if(or__17332__auto____$1){
return or__17332__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-pop!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientSet = (function (){var obj19265 = {};
return obj19265;
})();

cljs.core._disjoin_BANG_ = (function _disjoin_BANG_(tcoll,v){
if((function (){var and__17320__auto__ = tcoll;
if(and__17320__auto__){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
} else {
return and__17320__auto__;
}
})()){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll,v);
} else {
var x__17976__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__17332__auto__ = (cljs.core._disjoin_BANG_[(function (){var G__19269 = x__17976__auto__;
return goog.typeOf(G__19269);
})()]);
if(or__17332__auto__){
return or__17332__auto__;
} else {
var or__17332__auto____$1 = (cljs.core._disjoin_BANG_["_"]);
if(or__17332__auto____$1){
return or__17332__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientSet.-disjoin!",tcoll);
}
}
})().call(null,tcoll,v);
}
});


cljs.core.IComparable = (function (){var obj19271 = {};
return obj19271;
})();

cljs.core._compare = (function _compare(x,y){
if((function (){var and__17320__auto__ = x;
if(and__17320__auto__){
return x.cljs$core$IComparable$_compare$arity$2;
} else {
return and__17320__auto__;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(x,y);
} else {
var x__17976__auto__ = (((x == null))?null:x);
return (function (){var or__17332__auto__ = (cljs.core._compare[(function (){var G__19275 = x__17976__auto__;
return goog.typeOf(G__19275);
})()]);
if(or__17332__auto__){
return or__17332__auto__;
} else {
var or__17332__auto____$1 = (cljs.core._compare["_"]);
if(or__17332__auto____$1){
return or__17332__auto____$1;
} else {
throw cljs.core.missing_protocol("IComparable.-compare",x);
}
}
})().call(null,x,y);
}
});


cljs.core.IChunk = (function (){var obj19277 = {};
return obj19277;
})();

cljs.core._drop_first = (function _drop_first(coll){
if((function (){var and__17320__auto__ = coll;
if(and__17320__auto__){
return coll.cljs$core$IChunk$_drop_first$arity$1;
} else {
return and__17320__auto__;
}
})()){
return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
} else {
var x__17976__auto__ = (((coll == null))?null:coll);
return (function (){var or__17332__auto__ = (cljs.core._drop_first[(function (){var G__19281 = x__17976__auto__;
return goog.typeOf(G__19281);
})()]);
if(or__17332__auto__){
return or__17332__auto__;
} else {
var or__17332__auto____$1 = (cljs.core._drop_first["_"]);
if(or__17332__auto____$1){
return or__17332__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunk.-drop-first",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedSeq = (function (){var obj19283 = {};
return obj19283;
})();

cljs.core._chunked_first = (function _chunked_first(coll){
if((function (){var and__17320__auto__ = coll;
if(and__17320__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
} else {
return and__17320__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
} else {
var x__17976__auto__ = (((coll == null))?null:coll);
return (function (){var or__17332__auto__ = (cljs.core._chunked_first[(function (){var G__19287 = x__17976__auto__;
return goog.typeOf(G__19287);
})()]);
if(or__17332__auto__){
return or__17332__auto__;
} else {
var or__17332__auto____$1 = (cljs.core._chunked_first["_"]);
if(or__17332__auto____$1){
return or__17332__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._chunked_rest = (function _chunked_rest(coll){
if((function (){var and__17320__auto__ = coll;
if(and__17320__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
} else {
return and__17320__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
} else {
var x__17976__auto__ = (((coll == null))?null:coll);
return (function (){var or__17332__auto__ = (cljs.core._chunked_rest[(function (){var G__19291 = x__17976__auto__;
return goog.typeOf(G__19291);
})()]);
if(or__17332__auto__){
return or__17332__auto__;
} else {
var or__17332__auto____$1 = (cljs.core._chunked_rest["_"]);
if(or__17332__auto____$1){
return or__17332__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedNext = (function (){var obj19293 = {};
return obj19293;
})();

cljs.core._chunked_next = (function _chunked_next(coll){
if((function (){var and__17320__auto__ = coll;
if(and__17320__auto__){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
} else {
return and__17320__auto__;
}
})()){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
} else {
var x__17976__auto__ = (((coll == null))?null:coll);
return (function (){var or__17332__auto__ = (cljs.core._chunked_next[(function (){var G__19297 = x__17976__auto__;
return goog.typeOf(G__19297);
})()]);
if(or__17332__auto__){
return or__17332__auto__;
} else {
var or__17332__auto____$1 = (cljs.core._chunked_next["_"]);
if(or__17332__auto____$1){
return or__17332__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedNext.-chunked-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INamed = (function (){var obj19299 = {};
return obj19299;
})();

cljs.core._name = (function _name(x){
if((function (){var and__17320__auto__ = x;
if(and__17320__auto__){
return x.cljs$core$INamed$_name$arity$1;
} else {
return and__17320__auto__;
}
})()){
return x.cljs$core$INamed$_name$arity$1(x);
} else {
var x__17976__auto__ = (((x == null))?null:x);
return (function (){var or__17332__auto__ = (cljs.core._name[(function (){var G__19303 = x__17976__auto__;
return goog.typeOf(G__19303);
})()]);
if(or__17332__auto__){
return or__17332__auto__;
} else {
var or__17332__auto____$1 = (cljs.core._name["_"]);
if(or__17332__auto____$1){
return or__17332__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-name",x);
}
}
})().call(null,x);
}
});

cljs.core._namespace = (function _namespace(x){
if((function (){var and__17320__auto__ = x;
if(and__17320__auto__){
return x.cljs$core$INamed$_namespace$arity$1;
} else {
return and__17320__auto__;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(x);
} else {
var x__17976__auto__ = (((x == null))?null:x);
return (function (){var or__17332__auto__ = (cljs.core._namespace[(function (){var G__19307 = x__17976__auto__;
return goog.typeOf(G__19307);
})()]);
if(or__17332__auto__){
return or__17332__auto__;
} else {
var or__17332__auto____$1 = (cljs.core._namespace["_"]);
if(or__17332__auto____$1){
return or__17332__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-namespace",x);
}
}
})().call(null,x);
}
});


cljs.core.IAtom = (function (){var obj19309 = {};
return obj19309;
})();


cljs.core.IReset = (function (){var obj19311 = {};
return obj19311;
})();

cljs.core._reset_BANG_ = (function _reset_BANG_(o,new_value){
if((function (){var and__17320__auto__ = o;
if(and__17320__auto__){
return o.cljs$core$IReset$_reset_BANG_$arity$2;
} else {
return and__17320__auto__;
}
})()){
return o.cljs$core$IReset$_reset_BANG_$arity$2(o,new_value);
} else {
var x__17976__auto__ = (((o == null))?null:o);
return (function (){var or__17332__auto__ = (cljs.core._reset_BANG_[(function (){var G__19315 = x__17976__auto__;
return goog.typeOf(G__19315);
})()]);
if(or__17332__auto__){
return or__17332__auto__;
} else {
var or__17332__auto____$1 = (cljs.core._reset_BANG_["_"]);
if(or__17332__auto____$1){
return or__17332__auto____$1;
} else {
throw cljs.core.missing_protocol("IReset.-reset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.ISwap = (function (){var obj19317 = {};
return obj19317;
})();

cljs.core._swap_BANG_ = (function() {
var _swap_BANG_ = null;
var _swap_BANG___2 = (function (o,f){
if((function (){var and__17320__auto__ = o;
if(and__17320__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$2;
} else {
return and__17320__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$2(o,f);
} else {
var x__17976__auto__ = (((o == null))?null:o);
return (function (){var or__17332__auto__ = (cljs.core._swap_BANG_[(function (){var G__19327 = x__17976__auto__;
return goog.typeOf(G__19327);
})()]);
if(or__17332__auto__){
return or__17332__auto__;
} else {
var or__17332__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__17332__auto____$1){
return or__17332__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f);
}
});
var _swap_BANG___3 = (function (o,f,a){
if((function (){var and__17320__auto__ = o;
if(and__17320__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$3;
} else {
return and__17320__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$3(o,f,a);
} else {
var x__17976__auto__ = (((o == null))?null:o);
return (function (){var or__17332__auto__ = (cljs.core._swap_BANG_[(function (){var G__19329 = x__17976__auto__;
return goog.typeOf(G__19329);
})()]);
if(or__17332__auto__){
return or__17332__auto__;
} else {
var or__17332__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__17332__auto____$1){
return or__17332__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a);
}
});
var _swap_BANG___4 = (function (o,f,a,b){
if((function (){var and__17320__auto__ = o;
if(and__17320__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$4;
} else {
return and__17320__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$4(o,f,a,b);
} else {
var x__17976__auto__ = (((o == null))?null:o);
return (function (){var or__17332__auto__ = (cljs.core._swap_BANG_[(function (){var G__19331 = x__17976__auto__;
return goog.typeOf(G__19331);
})()]);
if(or__17332__auto__){
return or__17332__auto__;
} else {
var or__17332__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__17332__auto____$1){
return or__17332__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b);
}
});
var _swap_BANG___5 = (function (o,f,a,b,xs){
if((function (){var and__17320__auto__ = o;
if(and__17320__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$5;
} else {
return and__17320__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$5(o,f,a,b,xs);
} else {
var x__17976__auto__ = (((o == null))?null:o);
return (function (){var or__17332__auto__ = (cljs.core._swap_BANG_[(function (){var G__19333 = x__17976__auto__;
return goog.typeOf(G__19333);
})()]);
if(or__17332__auto__){
return or__17332__auto__;
} else {
var or__17332__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__17332__auto____$1){
return or__17332__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b,xs);
}
});
_swap_BANG_ = function(o,f,a,b,xs){
switch(arguments.length){
case 2:
return _swap_BANG___2.call(this,o,f);
case 3:
return _swap_BANG___3.call(this,o,f,a);
case 4:
return _swap_BANG___4.call(this,o,f,a,b);
case 5:
return _swap_BANG___5.call(this,o,f,a,b,xs);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
_swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
_swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
_swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
return _swap_BANG_;
})()
;


cljs.core.IVolatile = (function (){var obj19335 = {};
return obj19335;
})();

cljs.core._vreset_BANG_ = (function _vreset_BANG_(o,new_value){
if((function (){var and__17320__auto__ = o;
if(and__17320__auto__){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
} else {
return and__17320__auto__;
}
})()){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o,new_value);
} else {
var x__17976__auto__ = (((o == null))?null:o);
return (function (){var or__17332__auto__ = (cljs.core._vreset_BANG_[(function (){var G__19339 = x__17976__auto__;
return goog.typeOf(G__19339);
})()]);
if(or__17332__auto__){
return or__17332__auto__;
} else {
var or__17332__auto____$1 = (cljs.core._vreset_BANG_["_"]);
if(or__17332__auto____$1){
return or__17332__auto____$1;
} else {
throw cljs.core.missing_protocol("IVolatile.-vreset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.IIterable = (function (){var obj19341 = {};
return obj19341;
})();

cljs.core._iterator = (function _iterator(coll){
if((function (){var and__17320__auto__ = coll;
if(and__17320__auto__){
return coll.cljs$core$IIterable$_iterator$arity$1;
} else {
return and__17320__auto__;
}
})()){
return coll.cljs$core$IIterable$_iterator$arity$1(coll);
} else {
var x__17976__auto__ = (((coll == null))?null:coll);
return (function (){var or__17332__auto__ = (cljs.core._iterator[(function (){var G__19345 = x__17976__auto__;
return goog.typeOf(G__19345);
})()]);
if(or__17332__auto__){
return or__17332__auto__;
} else {
var or__17332__auto____$1 = (cljs.core._iterator["_"]);
if(or__17332__auto____$1){
return or__17332__auto____$1;
} else {
throw cljs.core.missing_protocol("IIterable.-iterator",coll);
}
}
})().call(null,coll);
}
});


/**
* @constructor
*/
cljs.core.StringBufferWriter = (function (sb){
this.sb = sb;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 1073741824;
})
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,s){
var self__ = this;
var ___$1 = this;
return self__.sb.append(s);
});

cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return null;
});

cljs.core.StringBufferWriter.cljs$lang$type = true;

cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";

cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = (function (this__17919__auto__,writer__17920__auto__,opt__17921__auto__){
return cljs.core._write(writer__17920__auto__,"cljs.core/StringBufferWriter");
});

cljs.core.__GT_StringBufferWriter = (function __GT_StringBufferWriter(sb){
return (new cljs.core.StringBufferWriter(sb));
});

/**
* Support so that collections can implement toString without
* loading all the printing machinery.
*/
cljs.core.pr_str_STAR_ = (function pr_str_STAR_(obj){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,cljs.core.pr_opts());

writer.cljs$core$IWriter$_flush$arity$1(null);

return [cljs.core.str(sb)].join('');
});
cljs.core.int_rotate_left = (function int_rotate_left(x,n){
return ((x << n) | (x >>> (- n)));
});
if((typeof Math.imul !== 'undefined') && (!(((function (){var G__19348 = (4294967295);
var G__19349 = (5);
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__19348,G__19349) : Math.imul.call(null,G__19348,G__19349));
})() === (0))))){
cljs.core.imul = (function imul(a,b){
var G__19352 = a;
var G__19353 = b;
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__19352,G__19353) : Math.imul.call(null,G__19352,G__19353));
});
} else {
cljs.core.imul = (function imul(a,b){
var ah = ((a >>> (16)) & (65535));
var al = (a & (65535));
var bh = ((b >>> (16)) & (65535));
var bl = (b & (65535));
return (((al * bl) + ((((ah * bl) + (al * bh)) << (16)) >>> (0))) | (0));
});
}
cljs.core.m3_seed = (0);
cljs.core.m3_C1 = (3432918353);
cljs.core.m3_C2 = (461845907);
cljs.core.m3_mix_K1 = (function m3_mix_K1(k1){
return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1,cljs.core.m3_C1),(15)),cljs.core.m3_C2);
});
cljs.core.m3_mix_H1 = (function m3_mix_H1(h1,k1){
return (cljs.core.imul(cljs.core.int_rotate_left((h1 ^ k1),(13)),(5)) + (3864292196));
});
cljs.core.m3_fmix = (function m3_fmix(h1,len){
var h1__$1 = h1;
var h1__$2 = (h1__$1 ^ len);
var h1__$3 = (h1__$2 ^ (h1__$2 >>> (16)));
var h1__$4 = cljs.core.imul(h1__$3,(2246822507));
var h1__$5 = (h1__$4 ^ (h1__$4 >>> (13)));
var h1__$6 = cljs.core.imul(h1__$5,(3266489909));
var h1__$7 = (h1__$6 ^ (h1__$6 >>> (16)));
return h1__$7;
});
cljs.core.m3_hash_int = (function m3_hash_int(in$){
if((in$ === (0))){
return in$;
} else {
var k1 = cljs.core.m3_mix_K1(in$);
var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed,k1);
return cljs.core.m3_fmix(h1,(4));
}
});
cljs.core.m3_hash_unencoded_chars = (function m3_hash_unencoded_chars(in$){
var h1 = (function (){var i = (1);
var h1 = cljs.core.m3_seed;
while(true){
if((i < in$.length)){
var G__19354 = (i + (2));
var G__19355 = cljs.core.m3_mix_H1(h1,cljs.core.m3_mix_K1((in$.charCodeAt((i - (1))) | (in$.charCodeAt(i) << (16)))));
i = G__19354;
h1 = G__19355;
continue;
} else {
return h1;
}
break;
}
})();
var h1__$1 = ((((in$.length & (1)) === (1)))?(h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt((in$.length - (1))))):h1);
return cljs.core.m3_fmix(h1__$1,cljs.core.imul((2),in$.length));
});



cljs.core.string_hash_cache = (function (){var obj19357 = {};
return obj19357;
})();
cljs.core.string_hash_cache_count = (0);
cljs.core.hash_string_STAR_ = (function hash_string_STAR_(s){
if(!((s == null))){
var len = s.length;
if((len > (0))){
var i = (0);
var hash = (0);
while(true){
if((i < len)){
var G__19358 = (i + (1));
var G__19359 = (cljs.core.imul((31),hash) + s.charCodeAt(i));
i = G__19358;
hash = G__19359;
continue;
} else {
return hash;
}
break;
}
} else {
return (0);
}
} else {
return (0);
}
});
cljs.core.add_to_string_hash_cache = (function add_to_string_hash_cache(k){
var h = cljs.core.hash_string_STAR_(k);
(cljs.core.string_hash_cache[k] = h);

cljs.core.string_hash_cache_count = (cljs.core.string_hash_cache_count + (1));

return h;
});
cljs.core.hash_string = (function hash_string(k){
if((cljs.core.string_hash_cache_count > (255))){
cljs.core.string_hash_cache = (function (){var obj19363 = {};
return obj19363;
})();

cljs.core.string_hash_cache_count = (0);
} else {
}

var h = (cljs.core.string_hash_cache[k]);
if(typeof h === 'number'){
return h;
} else {
return cljs.core.add_to_string_hash_cache(k);
}
});
cljs.core.hash = (function hash(o){
if((function (){var G__19366 = o;
if(G__19366){
var bit__18006__auto__ = (G__19366.cljs$lang$protocol_mask$partition0$ & (4194304));
if((bit__18006__auto__) || (G__19366.cljs$core$IHash$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(null);
} else {
if(typeof o === 'number'){
return ((function (){var G__19367 = o;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__19367) : Math.floor.call(null,G__19367));
})() % (2147483647));
} else {
if(o === true){
return (1);
} else {
if(o === false){
return (0);
} else {
if(typeof o === 'string'){
return cljs.core.m3_hash_int(cljs.core.hash_string(o));
} else {
if((o instanceof Date)){
return o.valueOf();
} else {
if((o == null)){
return (0);
} else {
return cljs.core._hash(o);

}
}
}
}
}
}
}
});
cljs.core.hash_combine = (function hash_combine(seed,hash){
return (seed ^ (((hash + (2654435769)) + (seed << (6))) + (seed >> (2))));
});
cljs.core.instance_QMARK_ = (function instance_QMARK_(t,o){
return (o instanceof t);
});
cljs.core.symbol_QMARK_ = (function symbol_QMARK_(x){
return (x instanceof cljs.core.Symbol);
});
cljs.core.hash_symbol = (function hash_symbol(sym){
return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name),cljs.core.hash_string(sym.ns));
});
cljs.core.compare_symbols = (function compare_symbols(a,b){
if((a.str === b.str)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__17320__auto__ = cljs.core.not(a.ns);
if(and__17320__auto__){
return b.ns;
} else {
return and__17320__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__19374 = a.ns;
var G__19375 = b.ns;
return goog.array.defaultCompare(G__19374,G__19375);
})();
if(((0) === nsc)){
var G__19376 = a.name;
var G__19377 = b.name;
return goog.array.defaultCompare(G__19376,G__19377);
} else {
return nsc;
}
}
} else {
var G__19378 = a.name;
var G__19379 = b.name;
return goog.array.defaultCompare(G__19378,G__19379);

}
}
}
});

/**
* @constructor
*/
cljs.core.Symbol = (function (ns,name,str,_hash,_meta){
this.ns = ns;
this.name = name;
this.str = str;
this._hash = _hash;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 2154168321;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,self__.str);
});

cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = (function (sym){
var self__ = this;
var sym__$1 = this;
var h__17753__auto__ = self__._hash;
if(!((h__17753__auto__ == null))){
return h__17753__auto__;
} else {
var h__17753__auto____$1 = cljs.core.hash_symbol(sym__$1);
self__._hash = h__17753__auto____$1;

return h__17753__auto____$1;
}
});

cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Symbol(self__.ns,self__.name,self__.str,self__._hash,new_meta));
});

cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Symbol.prototype.call = (function() {
var G__19381 = null;
var G__19381__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});
var G__19381__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});
G__19381 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__19381__2.call(this,self__,coll);
case 3:
return G__19381__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__19381.cljs$core$IFn$_invoke$arity$2 = G__19381__2;
G__19381.cljs$core$IFn$_invoke$arity$3 = G__19381__3;
return G__19381;
})()
;

cljs.core.Symbol.prototype.apply = (function (self__,args19380){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args19380)));
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});

cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Symbol)){
return (self__.str === other.str);
} else {
return false;
}
});

cljs.core.Symbol.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.str;
});

cljs.core.Symbol.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Symbol.cljs$lang$type = true;

cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";

cljs.core.Symbol.cljs$lang$ctorPrWriter = (function (this__17919__auto__,writer__17920__auto__,opt__17921__auto__){
return cljs.core._write(writer__17920__auto__,"cljs.core/Symbol");
});

cljs.core.__GT_Symbol = (function __GT_Symbol(ns,name,str,_hash,_meta){
return (new cljs.core.Symbol(ns,name,str,_hash,_meta));
});

cljs.core.symbol = (function() {
var symbol = null;
var symbol__1 = (function (name){
if((name instanceof cljs.core.Symbol)){
return name;
} else {
return symbol.cljs$core$IFn$_invoke$arity$2(null,name);
}
});
var symbol__2 = (function (ns,name){
var sym_str = ((!((ns == null)))?[cljs.core.str(ns),cljs.core.str("/"),cljs.core.str(name)].join(''):name);
return (new cljs.core.Symbol(ns,name,sym_str,null,null));
});
symbol = function(ns,name){
switch(arguments.length){
case 1:
return symbol__1.call(this,ns);
case 2:
return symbol__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
return symbol;
})()
;

/**
* @constructor
*/
cljs.core.Var = (function (val,sym,_meta){
this.val = val;
this.sym = sym;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 163841;
})
cljs.core.Var.prototype.call = (function() {
var G__19429 = null;
var G__19429__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});
var G__19429__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});
var G__19429__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});
var G__19429__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});
var G__19429__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});
var G__19429__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});
var G__19429__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});
var G__19429__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});
var G__19429__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});
var G__19429__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});
var G__19429__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});
var G__19429__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});
var G__19429__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});
var G__19429__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});
var G__19429__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});
var G__19429__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});
var G__19429__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});
var G__19429__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});
var G__19429__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});
var G__19429__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});
var G__19429__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});
var G__19429__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19385 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__19386 = a;
var G__19387 = b;
var G__19388 = c;
var G__19389 = d;
var G__19390 = e;
var G__19391 = f;
var G__19392 = g;
var G__19393 = h;
var G__19394 = i;
var G__19395 = j;
var G__19396 = k;
var G__19397 = l;
var G__19398 = m;
var G__19399 = n;
var G__19400 = o;
var G__19401 = p;
var G__19402 = q;
var G__19403 = r;
var G__19404 = s;
var G__19405 = t;
var G__19406 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__19385,G__19386,G__19387,G__19388,G__19389,G__19390,G__19391,G__19392,G__19393,G__19394,G__19395,G__19396,G__19397,G__19398,G__19399,G__19400,G__19401,G__19402,G__19403,G__19404,G__19405,G__19406) : cljs.core.apply.call(null,G__19385,G__19386,G__19387,G__19388,G__19389,G__19390,G__19391,G__19392,G__19393,G__19394,G__19395,G__19396,G__19397,G__19398,G__19399,G__19400,G__19401,G__19402,G__19403,G__19404,G__19405,G__19406));
});
G__19429 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__19429__1.call(this,self__);
case 2:
return G__19429__2.call(this,self__,a);
case 3:
return G__19429__3.call(this,self__,a,b);
case 4:
return G__19429__4.call(this,self__,a,b,c);
case 5:
return G__19429__5.call(this,self__,a,b,c,d);
case 6:
return G__19429__6.call(this,self__,a,b,c,d,e);
case 7:
return G__19429__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__19429__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__19429__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__19429__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__19429__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__19429__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__19429__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__19429__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__19429__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__19429__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__19429__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__19429__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__19429__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__19429__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__19429__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__19429__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__19429.cljs$core$IFn$_invoke$arity$1 = G__19429__1;
G__19429.cljs$core$IFn$_invoke$arity$2 = G__19429__2;
G__19429.cljs$core$IFn$_invoke$arity$3 = G__19429__3;
G__19429.cljs$core$IFn$_invoke$arity$4 = G__19429__4;
G__19429.cljs$core$IFn$_invoke$arity$5 = G__19429__5;
G__19429.cljs$core$IFn$_invoke$arity$6 = G__19429__6;
G__19429.cljs$core$IFn$_invoke$arity$7 = G__19429__7;
G__19429.cljs$core$IFn$_invoke$arity$8 = G__19429__8;
G__19429.cljs$core$IFn$_invoke$arity$9 = G__19429__9;
G__19429.cljs$core$IFn$_invoke$arity$10 = G__19429__10;
G__19429.cljs$core$IFn$_invoke$arity$11 = G__19429__11;
G__19429.cljs$core$IFn$_invoke$arity$12 = G__19429__12;
G__19429.cljs$core$IFn$_invoke$arity$13 = G__19429__13;
G__19429.cljs$core$IFn$_invoke$arity$14 = G__19429__14;
G__19429.cljs$core$IFn$_invoke$arity$15 = G__19429__15;
G__19429.cljs$core$IFn$_invoke$arity$16 = G__19429__16;
G__19429.cljs$core$IFn$_invoke$arity$17 = G__19429__17;
G__19429.cljs$core$IFn$_invoke$arity$18 = G__19429__18;
G__19429.cljs$core$IFn$_invoke$arity$19 = G__19429__19;
G__19429.cljs$core$IFn$_invoke$arity$20 = G__19429__20;
G__19429.cljs$core$IFn$_invoke$arity$21 = G__19429__21;
G__19429.cljs$core$IFn$_invoke$arity$22 = G__19429__22;
return G__19429;
})()
;

cljs.core.Var.prototype.apply = (function (self__,args19384){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args19384)));
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__19407 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__19408 = a;
var G__19409 = b;
var G__19410 = c;
var G__19411 = d;
var G__19412 = e;
var G__19413 = f;
var G__19414 = g;
var G__19415 = h;
var G__19416 = i;
var G__19417 = j;
var G__19418 = k;
var G__19419 = l;
var G__19420 = m;
var G__19421 = n;
var G__19422 = o;
var G__19423 = p;
var G__19424 = q;
var G__19425 = r;
var G__19426 = s;
var G__19427 = t;
var G__19428 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__19407,G__19408,G__19409,G__19410,G__19411,G__19412,G__19413,G__19414,G__19415,G__19416,G__19417,G__19418,G__19419,G__19420,G__19421,G__19422,G__19423,G__19424,G__19425,G__19426,G__19427,G__19428) : cljs.core.apply.call(null,G__19407,G__19408,G__19409,G__19410,G__19411,G__19412,G__19413,G__19414,G__19415,G__19416,G__19417,G__19418,G__19419,G__19420,G__19421,G__19422,G__19423,G__19424,G__19425,G__19426,G__19427,G__19428));
});

cljs.core.Var.prototype.cljs$core$Fn$ = true;

cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
});

cljs.core.Var.cljs$lang$type = true;

cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";

cljs.core.Var.cljs$lang$ctorPrWriter = (function (this__17919__auto__,writer__17920__auto__,opt__17921__auto__){
return cljs.core._write(writer__17920__auto__,"cljs.core/Var");
});

cljs.core.__GT_Var = (function __GT_Var(val,sym,_meta){
return (new cljs.core.Var(val,sym,_meta));
});



cljs.core.iterable_QMARK_ = (function iterable_QMARK_(x){
var G__19431 = x;
if(G__19431){
var bit__18013__auto__ = null;
if(cljs.core.truth_((function (){var or__17332__auto__ = bit__18013__auto__;
if(cljs.core.truth_(or__17332__auto__)){
return or__17332__auto__;
} else {
return G__19431.cljs$core$IIterable$;
}
})())){
return true;
} else {
if((!G__19431.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__19431);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__19431);
}
});
cljs.core.clone = (function clone(value){
return cljs.core._clone(value);
});
cljs.core.cloneable_QMARK_ = (function cloneable_QMARK_(value){
var G__19433 = value;
if(G__19433){
var bit__18013__auto__ = (G__19433.cljs$lang$protocol_mask$partition1$ & (8192));
if((bit__18013__auto__) || (G__19433.cljs$core$ICloneable$)){
return true;
} else {
if((!G__19433.cljs$lang$protocol_mask$partition1$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__19433);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__19433);
}
});
/**
* Returns a seq on the collection. If the collection is
* empty, returns nil.  (seq nil) returns nil. seq also works on
* Strings.
*/
cljs.core.seq = (function seq(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__19435 = coll;
if(G__19435){
var bit__18006__auto__ = (G__19435.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__18006__auto__) || (G__19435.cljs$core$ISeqable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeqable$_seq$arity$1(null);
} else {
if(coll instanceof Array){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(typeof coll === 'string'){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,coll)){
return cljs.core._seq(coll);
} else {
throw (new Error([cljs.core.str(coll),cljs.core.str(" is not ISeqable")].join('')));

}
}
}
}
}
});
/**
* Returns the first item in the collection. Calls seq on its
* argument. If coll is nil, returns nil.
*/
cljs.core.first = (function first(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__19437 = coll;
if(G__19437){
var bit__18006__auto__ = (G__19437.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__18006__auto__) || (G__19437.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if((s == null)){
return null;
} else {
return cljs.core._first(s);
}
}
}
});
/**
* Returns a possibly empty seq of the items after the first. Calls seq on its
* argument.
*/
cljs.core.rest = (function rest(coll){
if(!((coll == null))){
if((function (){var G__19439 = coll;
if(G__19439){
var bit__18006__auto__ = (G__19439.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__18006__auto__) || (G__19439.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if(s){
return cljs.core._rest(s);
} else {
return cljs.core.List.EMPTY;
}
}
} else {
return cljs.core.List.EMPTY;
}
});
/**
* Returns a seq of the items after the first. Calls seq on its
* argument.  If there are no more items, returns nil
*/
cljs.core.next = (function next(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__19441 = coll;
if(G__19441){
var bit__18006__auto__ = (G__19441.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__18006__auto__) || (G__19441.cljs$core$INext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$INext$_next$arity$1(null);
} else {
return cljs.core.seq(cljs.core.rest(coll));
}
}
});
/**
* Equality. Returns true if x equals y, false if not. Compares
* numbers and collections in a type-independent manner.  Clojure's immutable data
* structures define -equiv (and thus =) as a value, not an identity,
* comparison.
* @param {...*} var_args
*/
cljs.core._EQ_ = (function() {
var _EQ_ = null;
var _EQ___1 = (function (x){
return true;
});
var _EQ___2 = (function (x,y){
if((x == null)){
return (y == null);
} else {
return ((x === y)) || (cljs.core._equiv(x,y));
}
});
var _EQ___3 = (function() { 
var G__19446__delegate = function (x,y,more){
while(true){
if(_EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__19447 = y;
var G__19448 = cljs.core.first(more);
var G__19449 = cljs.core.next(more);
x = G__19447;
y = G__19448;
more = G__19449;
continue;
} else {
return _EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__19446 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19450__i = 0, G__19450__a = new Array(arguments.length -  2);
while (G__19450__i < G__19450__a.length) {G__19450__a[G__19450__i] = arguments[G__19450__i + 2]; ++G__19450__i;}
  more = new cljs.core.IndexedSeq(G__19450__a,0);
} 
return G__19446__delegate.call(this,x,y,more);};
G__19446.cljs$lang$maxFixedArity = 2;
G__19446.cljs$lang$applyTo = (function (arglist__19451){
var x = cljs.core.first(arglist__19451);
arglist__19451 = cljs.core.next(arglist__19451);
var y = cljs.core.first(arglist__19451);
var more = cljs.core.rest(arglist__19451);
return G__19446__delegate(x,y,more);
});
G__19446.cljs$core$IFn$_invoke$arity$variadic = G__19446__delegate;
return G__19446;
})()
;
_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ___1.call(this,x);
case 2:
return _EQ___2.call(this,x,y);
default:
var G__19452 = null;
if (arguments.length > 2) {
var G__19453__i = 0, G__19453__a = new Array(arguments.length -  2);
while (G__19453__i < G__19453__a.length) {G__19453__a[G__19453__i] = arguments[G__19453__i + 2]; ++G__19453__i;}
G__19452 = new cljs.core.IndexedSeq(G__19453__a,0);
}
return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19452);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ_.cljs$lang$maxFixedArity = 2;
_EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
_EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
_EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
_EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ_;
})()
;

/**
* @constructor
*/
cljs.core.ES6Iterator = (function (s){
this.s = s;
})
cljs.core.ES6Iterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": x};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6Iterator.cljs$lang$type = true;

cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";

cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = (function (this__17919__auto__,writer__17920__auto__,opt__17921__auto__){
return cljs.core._write(writer__17920__auto__,"cljs.core/ES6Iterator");
});

cljs.core.__GT_ES6Iterator = (function __GT_ES6Iterator(s){
return (new cljs.core.ES6Iterator(s));
});

cljs.core.es6_iterator = (function es6_iterator(coll){
return (new cljs.core.ES6Iterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6IteratorSeq = (function (value,iter,_rest){
this.value = value;
this.iter = iter;
this._rest = _rest;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 8388672;
})
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.value;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if((self__._rest == null)){
self__._rest = (function (){var G__19454 = self__.iter;
return (cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__19454) : cljs.core.es6_iterator_seq.call(null,G__19454));
})();
} else {
}

return self__._rest;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ES6IteratorSeq.cljs$lang$type = true;

cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";

cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = (function (this__17919__auto__,writer__17920__auto__,opt__17921__auto__){
return cljs.core._write(writer__17920__auto__,"cljs.core/ES6IteratorSeq");
});

cljs.core.__GT_ES6IteratorSeq = (function __GT_ES6IteratorSeq(value,iter,_rest){
return (new cljs.core.ES6IteratorSeq(value,iter,_rest));
});

cljs.core.es6_iterator_seq = (function es6_iterator_seq(iter){
var v = iter.next();
if(cljs.core.truth_(v.done)){
return cljs.core.List.EMPTY;
} else {
return (new cljs.core.ES6IteratorSeq(v.value,iter,null));
}
});
/**
* Mix final collection hash for ordered or unordered collections.
* hash-basis is the combined collection hash, count is the number
* of elements included in the basis. Note this is the hash code
* consistent with =, different from .hashCode.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.mix_collection_hash = (function mix_collection_hash(hash_basis,count){
var h1 = cljs.core.m3_seed;
var k1 = cljs.core.m3_mix_K1(hash_basis);
var h1__$1 = cljs.core.m3_mix_H1(h1,k1);
return cljs.core.m3_fmix(h1__$1,count);
});
/**
* Returns the hash code, consistent with =, for an external ordered
* collection implementing Iterable.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_ordered_coll = (function hash_ordered_coll(coll){
var n = (0);
var hash_code = (1);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__19455 = (n + (1));
var G__19456 = ((cljs.core.imul((31),hash_code) + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__19457 = cljs.core.next(coll__$1);
n = G__19455;
hash_code = G__19456;
coll__$1 = G__19457;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash((1),(0));
/**
* Returns the hash code, consistent with =, for an external unordered
* collection implementing Iterable. For maps, the iterator should
* return map entries whose hash is computed as
* (hash-ordered-coll [k v]).
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_unordered_coll = (function hash_unordered_coll(coll){
var n = (0);
var hash_code = (0);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__19458 = (n + (1));
var G__19459 = ((hash_code + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__19460 = cljs.core.next(coll__$1);
n = G__19458;
hash_code = G__19459;
coll__$1 = G__19460;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash((0),(0));


(cljs.core.ICounted["null"] = true);

(cljs.core._count["null"] = (function (_){
return (0);
}));
Date.prototype.cljs$core$IEquiv$ = true;

Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var o__$1 = this;
return ((other instanceof Date)) && ((o__$1.toString() === other.toString()));
});
(cljs.core.IEquiv["number"] = true);

(cljs.core._equiv["number"] = (function (x,o){
return (x === o);
}));
(cljs.core.IMeta["function"] = true);

(cljs.core._meta["function"] = (function (_){
return null;
}));

(cljs.core.Fn["function"] = true);
(cljs.core.IHash["_"] = true);

(cljs.core._hash["_"] = (function (o){
var G__19461 = o;
return goog.getUid(G__19461);
}));
/**
* Returns a number one greater than num.
*/
cljs.core.inc = (function inc(x){
return (x + (1));
});

/**
* @constructor
*/
cljs.core.Reduced = (function (val){
this.val = val;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = (function (o){
var self__ = this;
var o__$1 = this;
return self__.val;
});

cljs.core.Reduced.cljs$lang$type = true;

cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";

cljs.core.Reduced.cljs$lang$ctorPrWriter = (function (this__17919__auto__,writer__17920__auto__,opt__17921__auto__){
return cljs.core._write(writer__17920__auto__,"cljs.core/Reduced");
});

cljs.core.__GT_Reduced = (function __GT_Reduced(val){
return (new cljs.core.Reduced(val));
});

/**
* Wraps x in a way such that a reduce will terminate with the value x
*/
cljs.core.reduced = (function reduced(x){
return (new cljs.core.Reduced(x));
});
/**
* Returns true if x is the result of a call to reduced
*/
cljs.core.reduced_QMARK_ = (function reduced_QMARK_(r){
return (r instanceof cljs.core.Reduced);
});
/**
* If x is already reduced?, returns it, else returns (reduced x)
*/
cljs.core.ensure_reduced = (function ensure_reduced(x){
if(cljs.core.reduced_QMARK_(x)){
return x;
} else {
return cljs.core.reduced(x);
}
});
/**
* If x is reduced?, returns (deref x), else returns x
*/
cljs.core.unreduced = (function unreduced(x){
if(cljs.core.reduced_QMARK_(x)){
var G__19463 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__19463) : cljs.core.deref.call(null,G__19463));
} else {
return x;
}
});
cljs.core.deref = (function deref(o){
return cljs.core._deref(o);
});
/**
* Accepts any collection which satisfies the ICount and IIndexed protocols and
* reduces them without incurring seq initialization
*/
cljs.core.ci_reduce = (function() {
var ci_reduce = null;
var ci_reduce__2 = (function (cicoll,f){
var cnt = cljs.core._count(cicoll);
if((cnt === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,(0));
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__19470 = val;
var G__19471 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19470,G__19471) : f.call(null,G__19470,G__19471));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__19476 = nval;
var G__19477 = (n + (1));
val = G__19476;
n = G__19477;
continue;
}
} else {
return val;
}
break;
}
}
});
var ci_reduce__3 = (function (cicoll,f,val){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__19472 = val__$1;
var G__19473 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19472,G__19473) : f.call(null,G__19472,G__19473));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__19478 = nval;
var G__19479 = (n + (1));
val__$1 = G__19478;
n = G__19479;
continue;
}
} else {
return val__$1;
}
break;
}
});
var ci_reduce__4 = (function (cicoll,f,val,idx){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__19474 = val__$1;
var G__19475 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19474,G__19475) : f.call(null,G__19474,G__19475));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__19480 = nval;
var G__19481 = (n + (1));
val__$1 = G__19480;
n = G__19481;
continue;
}
} else {
return val__$1;
}
break;
}
});
ci_reduce = function(cicoll,f,val,idx){
switch(arguments.length){
case 2:
return ci_reduce__2.call(this,cicoll,f);
case 3:
return ci_reduce__3.call(this,cicoll,f,val);
case 4:
return ci_reduce__4.call(this,cicoll,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
return ci_reduce;
})()
;
cljs.core.array_reduce = (function() {
var array_reduce = null;
var array_reduce__2 = (function (arr,f){
var cnt = arr.length;
if((arr.length === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = (arr[(0)]);
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__19488 = val;
var G__19489 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19488,G__19489) : f.call(null,G__19488,G__19489));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__19494 = nval;
var G__19495 = (n + (1));
val = G__19494;
n = G__19495;
continue;
}
} else {
return val;
}
break;
}
}
});
var array_reduce__3 = (function (arr,f,val){
var cnt = arr.length;
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__19490 = val__$1;
var G__19491 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19490,G__19491) : f.call(null,G__19490,G__19491));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__19496 = nval;
var G__19497 = (n + (1));
val__$1 = G__19496;
n = G__19497;
continue;
}
} else {
return val__$1;
}
break;
}
});
var array_reduce__4 = (function (arr,f,val,idx){
var cnt = arr.length;
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__19492 = val__$1;
var G__19493 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19492,G__19493) : f.call(null,G__19492,G__19493));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__19498 = nval;
var G__19499 = (n + (1));
val__$1 = G__19498;
n = G__19499;
continue;
}
} else {
return val__$1;
}
break;
}
});
array_reduce = function(arr,f,val,idx){
switch(arguments.length){
case 2:
return array_reduce__2.call(this,arr,f);
case 3:
return array_reduce__3.call(this,arr,f,val);
case 4:
return array_reduce__4.call(this,arr,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
return array_reduce;
})()
;



/**
* Returns true if coll implements count in constant time
*/
cljs.core.counted_QMARK_ = (function counted_QMARK_(x){
var G__19501 = x;
if(G__19501){
var bit__18013__auto__ = (G__19501.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__18013__auto__) || (G__19501.cljs$core$ICounted$)){
return true;
} else {
if((!G__19501.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__19501);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__19501);
}
});
/**
* Returns true if coll implements nth in constant time
*/
cljs.core.indexed_QMARK_ = (function indexed_QMARK_(x){
var G__19503 = x;
if(G__19503){
var bit__18013__auto__ = (G__19503.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__18013__auto__) || (G__19503.cljs$core$IIndexed$)){
return true;
} else {
if((!G__19503.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__19503);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__19503);
}
});

/**
* @constructor
*/
cljs.core.IndexedSeqIterator = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.IndexedSeqIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.IndexedSeqIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.IndexedSeqIterator.cljs$lang$type = true;

cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";

cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = (function (this__17919__auto__,writer__17920__auto__,opt__17921__auto__){
return cljs.core._write(writer__17920__auto__,"cljs.core/IndexedSeqIterator");
});

cljs.core.__GT_IndexedSeqIterator = (function __GT_IndexedSeqIterator(arr,i){
return (new cljs.core.IndexedSeqIterator(arr,i));
});


/**
* @constructor
*/
cljs.core.IndexedSeq = (function (arr,i){
this.arr = arr;
this.i = i;
this.cljs$lang$protocol_mask$partition0$ = 166199550;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.IndexedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.IndexedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return not_found;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.IndexedSeqIterator(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.IndexedSeq(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr.length - self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var c = cljs.core._count(coll__$1);
if((c > (0))){
return (new cljs.core.RSeq(coll__$1,(c - (1)),null));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__19504 = coll__$1;
var G__19505 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__19504,G__19505) : cljs.core.equiv_sequential.call(null,G__19504,G__19505));
});

cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.i]),(self__.i + (1)));
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr[self__.i]);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__19506 = o;
var G__19507 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__19506,G__19507) : cljs.core.cons.call(null,G__19506,G__19507));
});

cljs.core.IndexedSeq.cljs$lang$type = true;

cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";

cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = (function (this__17919__auto__,writer__17920__auto__,opt__17921__auto__){
return cljs.core._write(writer__17920__auto__,"cljs.core/IndexedSeq");
});

cljs.core.__GT_IndexedSeq = (function __GT_IndexedSeq(arr,i){
return (new cljs.core.IndexedSeq(arr,i));
});

(cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18310__auto__ = this;
return cljs.core.es6_iterator(this__18310__auto__);
}));
cljs.core.prim_seq = (function() {
var prim_seq = null;
var prim_seq__1 = (function (prim){
return prim_seq.cljs$core$IFn$_invoke$arity$2(prim,(0));
});
var prim_seq__2 = (function (prim,i){
if((i < prim.length)){
return (new cljs.core.IndexedSeq(prim,i));
} else {
return null;
}
});
prim_seq = function(prim,i){
switch(arguments.length){
case 1:
return prim_seq__1.call(this,prim);
case 2:
return prim_seq__2.call(this,prim,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
return prim_seq;
})()
;
cljs.core.array_seq = (function() {
var array_seq = null;
var array_seq__1 = (function (array){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,(0));
});
var array_seq__2 = (function (array,i){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,i);
});
array_seq = function(array,i){
switch(arguments.length){
case 1:
return array_seq__1.call(this,array);
case 2:
return array_seq__2.call(this,array,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
return array_seq;
})()
;


/**
* @constructor
*/
cljs.core.RSeq = (function (ci,i,meta){
this.ci = ci;
this.i = i;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.RSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.RSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,self__.meta));
});

cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return null;
}
});

cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.i + (1));
});

cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__19510 = coll__$1;
var G__19511 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__19510,G__19511) : cljs.core.equiv_sequential.call(null,G__19510,G__19511));
});

cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__19512 = cljs.core.List.EMPTY;
var G__19513 = self__.meta;
return (cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__19512,G__19513) : cljs.core.with_meta.call(null,G__19512,G__19513));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (col,f){
var self__ = this;
var col__$1 = this;
var G__19514 = f;
var G__19515 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__19514,G__19515) : cljs.core.seq_reduce.call(null,G__19514,G__19515));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (col,f,start){
var self__ = this;
var col__$1 = this;
var G__19516 = f;
var G__19517 = start;
var G__19518 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__19516,G__19517,G__19518) : cljs.core.seq_reduce.call(null,G__19516,G__19517,G__19518));
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci,self__.i);
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,new_meta));
});

cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__19519 = o;
var G__19520 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__19519,G__19520) : cljs.core.cons.call(null,G__19519,G__19520));
});

cljs.core.RSeq.cljs$lang$type = true;

cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";

cljs.core.RSeq.cljs$lang$ctorPrWriter = (function (this__17919__auto__,writer__17920__auto__,opt__17921__auto__){
return cljs.core._write(writer__17920__auto__,"cljs.core/RSeq");
});

cljs.core.__GT_RSeq = (function __GT_RSeq(ci,i,meta){
return (new cljs.core.RSeq(ci,i,meta));
});

(cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18310__auto__ = this;
return cljs.core.es6_iterator(this__18310__auto__);
}));
/**
* Same as (first (next x))
*/
cljs.core.second = (function second(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (first (first x))
*/
cljs.core.ffirst = (function ffirst(coll){
return cljs.core.first(cljs.core.first(coll));
});
/**
* Same as (next (first x))
*/
cljs.core.nfirst = (function nfirst(coll){
return cljs.core.next(cljs.core.first(coll));
});
/**
* Same as (first (next x))
*/
cljs.core.fnext = (function fnext(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (next (next x))
*/
cljs.core.nnext = (function nnext(coll){
return cljs.core.next(cljs.core.next(coll));
});
/**
* Return the last item in coll, in linear time
*/
cljs.core.last = (function last(s){
while(true){
var sn = cljs.core.next(s);
if(!((sn == null))){
var G__19521 = sn;
s = G__19521;
continue;
} else {
return cljs.core.first(s);
}
break;
}
});
(cljs.core.IEquiv["_"] = true);

(cljs.core._equiv["_"] = (function (x,o){
return (x === o);
}));
/**
* conj[oin]. Returns a new collection with the xs
* 'added'. (conj nil item) returns (item).  The 'addition' may
* happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj = (function() {
var conj = null;
var conj__0 = (function (){
return cljs.core.PersistentVector.EMPTY;
});
var conj__1 = (function (coll){
return coll;
});
var conj__2 = (function (coll,x){
if(!((coll == null))){
return cljs.core._conj(coll,x);
} else {
return cljs.core._conj(cljs.core.List.EMPTY,x);
}
});
var conj__3 = (function() { 
var G__19526__delegate = function (coll,x,xs){
while(true){
if(cljs.core.truth_(xs)){
var G__19527 = conj.cljs$core$IFn$_invoke$arity$2(coll,x);
var G__19528 = cljs.core.first(xs);
var G__19529 = cljs.core.next(xs);
coll = G__19527;
x = G__19528;
xs = G__19529;
continue;
} else {
return conj.cljs$core$IFn$_invoke$arity$2(coll,x);
}
break;
}
};
var G__19526 = function (coll,x,var_args){
var xs = null;
if (arguments.length > 2) {
var G__19530__i = 0, G__19530__a = new Array(arguments.length -  2);
while (G__19530__i < G__19530__a.length) {G__19530__a[G__19530__i] = arguments[G__19530__i + 2]; ++G__19530__i;}
  xs = new cljs.core.IndexedSeq(G__19530__a,0);
} 
return G__19526__delegate.call(this,coll,x,xs);};
G__19526.cljs$lang$maxFixedArity = 2;
G__19526.cljs$lang$applyTo = (function (arglist__19531){
var coll = cljs.core.first(arglist__19531);
arglist__19531 = cljs.core.next(arglist__19531);
var x = cljs.core.first(arglist__19531);
var xs = cljs.core.rest(arglist__19531);
return G__19526__delegate(coll,x,xs);
});
G__19526.cljs$core$IFn$_invoke$arity$variadic = G__19526__delegate;
return G__19526;
})()
;
conj = function(coll,x,var_args){
var xs = var_args;
switch(arguments.length){
case 0:
return conj__0.call(this);
case 1:
return conj__1.call(this,coll);
case 2:
return conj__2.call(this,coll,x);
default:
var G__19532 = null;
if (arguments.length > 2) {
var G__19533__i = 0, G__19533__a = new Array(arguments.length -  2);
while (G__19533__i < G__19533__a.length) {G__19533__a[G__19533__i] = arguments[G__19533__i + 2]; ++G__19533__i;}
G__19532 = new cljs.core.IndexedSeq(G__19533__a,0);
}
return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll,x, G__19532);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj.cljs$lang$maxFixedArity = 2;
conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
return conj;
})()
;
/**
* Returns an empty collection of the same category as coll, or nil
*/
cljs.core.empty = (function empty(coll){
if((coll == null)){
return null;
} else {
return cljs.core._empty(coll);
}
});
cljs.core.accumulating_seq_count = (function accumulating_seq_count(coll){
var s = cljs.core.seq(coll);
var acc = (0);
while(true){
if(cljs.core.counted_QMARK_(s)){
return (acc + cljs.core._count(s));
} else {
var G__19534 = cljs.core.next(s);
var G__19535 = (acc + (1));
s = G__19534;
acc = G__19535;
continue;
}
break;
}
});
/**
* Returns the number of items in the collection. (count nil) returns
* 0.  Also works on strings, arrays, and Maps
*/
cljs.core.count = (function count(coll){
if(!((coll == null))){
if((function (){var G__19537 = coll;
if(G__19537){
var bit__18006__auto__ = (G__19537.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__18006__auto__) || (G__19537.cljs$core$ICounted$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(null);
} else {
if(coll instanceof Array){
return coll.length;
} else {
if(typeof coll === 'string'){
return coll.length;
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,coll)){
return cljs.core._count(coll);
} else {
return cljs.core.accumulating_seq_count(coll);

}
}
}
}
} else {
return (0);
}
});
cljs.core.linear_traversal_nth = (function() {
var linear_traversal_nth = null;
var linear_traversal_nth__2 = (function (coll,n){
while(true){
if((coll == null)){
throw (new Error("Index out of bounds"));
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
throw (new Error("Index out of bounds"));
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if(cljs.core.seq(coll)){
var G__19538 = cljs.core.next(coll);
var G__19539 = (n - (1));
coll = G__19538;
n = G__19539;
continue;
} else {
throw (new Error("Index out of bounds"));

}
}
}
}
break;
}
});
var linear_traversal_nth__3 = (function (coll,n,not_found){
while(true){
if((coll == null)){
return not_found;
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
return not_found;
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
if(cljs.core.seq(coll)){
var G__19540 = cljs.core.next(coll);
var G__19541 = (n - (1));
var G__19542 = not_found;
coll = G__19540;
n = G__19541;
not_found = G__19542;
continue;
} else {
return not_found;

}
}
}
}
break;
}
});
linear_traversal_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return linear_traversal_nth__2.call(this,coll,n);
case 3:
return linear_traversal_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
return linear_traversal_nth;
})()
;
/**
* Returns the value at the index. get returns nil if index out of
* bounds, nth throws an exception unless not-found is supplied.  nth
* also works for strings, arrays, regex Matchers and Lists, and,
* in O(n) time, for sequences.
*/
cljs.core.nth = (function() {
var nth = null;
var nth__2 = (function (coll,n){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number"));
} else {
if((coll == null)){
return coll;
} else {
if((function (){var G__19547 = coll;
if(G__19547){
var bit__18006__auto__ = (G__19547.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__18006__auto__) || (G__19547.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(null,n);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__19548 = coll;
if(G__19548){
var bit__18013__auto__ = (G__19548.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__18013__auto__) || (G__19548.cljs$core$ISeq$)){
return true;
} else {
if((!G__19548.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__19548);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__19548);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
var nth__3 = (function (coll,n,not_found){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number."));
} else {
if((coll == null)){
return not_found;
} else {
if((function (){var G__19549 = coll;
if(G__19549){
var bit__18006__auto__ = (G__19549.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__18006__auto__) || (G__19549.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(null,n,not_found);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__19550 = coll;
if(G__19550){
var bit__18013__auto__ = (G__19550.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__18013__auto__) || (G__19550.cljs$core$ISeq$)){
return true;
} else {
if((!G__19550.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__19550);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__19550);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return nth__2.call(this,coll,n);
case 3:
return nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
return nth;
})()
;
/**
* Returns the nth rest of coll, coll when n is 0.
*/
cljs.core.nthrest = (function nthrest(coll,n){
var n__$1 = n;
var xs = coll;
while(true){
if(((n__$1 > (0))) && (cljs.core.seq(xs))){
var G__19551 = (n__$1 - (1));
var G__19552 = cljs.core.rest(xs);
n__$1 = G__19551;
xs = G__19552;
continue;
} else {
return xs;
}
break;
}
});
/**
* Returns the value mapped to key, not-found or nil if key not present.
*/
cljs.core.get = (function() {
var get = null;
var get__2 = (function (o,k){
if((o == null)){
return null;
} else {
if((function (){var G__19555 = o;
if(G__19555){
var bit__18006__auto__ = (G__19555.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__18006__auto__) || (G__19555.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(null,k);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o,k);
} else {
return null;

}
}
}
}
}
});
var get__3 = (function (o,k,not_found){
if(!((o == null))){
if((function (){var G__19556 = o;
if(G__19556){
var bit__18006__auto__ = (G__19556.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__18006__auto__) || (G__19556.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o,k,not_found);
} else {
return not_found;

}
}
}
}
} else {
return not_found;
}
});
get = function(o,k,not_found){
switch(arguments.length){
case 2:
return get__2.call(this,o,k);
case 3:
return get__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get.cljs$core$IFn$_invoke$arity$2 = get__2;
get.cljs$core$IFn$_invoke$arity$3 = get__3;
return get;
})()
;
/**
* assoc[iate]. When applied to a map, returns a new map of the
* same (hashed/sorted) type, that contains the mapping of key(s) to
* val(s). When applied to a vector, returns a new vector that
* contains val at index.
* @param {...*} var_args
*/
cljs.core.assoc = (function() {
var assoc = null;
var assoc__3 = (function (coll,k,v){
if(!((coll == null))){
return cljs.core._assoc(coll,k,v);
} else {
return cljs.core.PersistentHashMap.fromArrays([k],[v]);
}
});
var assoc__4 = (function() { 
var G__19560__delegate = function (coll,k,v,kvs){
while(true){
var ret = assoc.cljs$core$IFn$_invoke$arity$3(coll,k,v);
if(cljs.core.truth_(kvs)){
var G__19561 = ret;
var G__19562 = cljs.core.first(kvs);
var G__19563 = cljs.core.second(kvs);
var G__19564 = cljs.core.nnext(kvs);
coll = G__19561;
k = G__19562;
v = G__19563;
kvs = G__19564;
continue;
} else {
return ret;
}
break;
}
};
var G__19560 = function (coll,k,v,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__19565__i = 0, G__19565__a = new Array(arguments.length -  3);
while (G__19565__i < G__19565__a.length) {G__19565__a[G__19565__i] = arguments[G__19565__i + 3]; ++G__19565__i;}
  kvs = new cljs.core.IndexedSeq(G__19565__a,0);
} 
return G__19560__delegate.call(this,coll,k,v,kvs);};
G__19560.cljs$lang$maxFixedArity = 3;
G__19560.cljs$lang$applyTo = (function (arglist__19566){
var coll = cljs.core.first(arglist__19566);
arglist__19566 = cljs.core.next(arglist__19566);
var k = cljs.core.first(arglist__19566);
arglist__19566 = cljs.core.next(arglist__19566);
var v = cljs.core.first(arglist__19566);
var kvs = cljs.core.rest(arglist__19566);
return G__19560__delegate(coll,k,v,kvs);
});
G__19560.cljs$core$IFn$_invoke$arity$variadic = G__19560__delegate;
return G__19560;
})()
;
assoc = function(coll,k,v,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc__3.call(this,coll,k,v);
default:
var G__19567 = null;
if (arguments.length > 3) {
var G__19568__i = 0, G__19568__a = new Array(arguments.length -  3);
while (G__19568__i < G__19568__a.length) {G__19568__a[G__19568__i] = arguments[G__19568__i + 3]; ++G__19568__i;}
G__19567 = new cljs.core.IndexedSeq(G__19568__a,0);
}
return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll,k,v, G__19567);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc.cljs$lang$maxFixedArity = 3;
assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
return assoc;
})()
;
/**
* dissoc[iate]. Returns a new map of the same (hashed/sorted) type,
* that does not contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc = (function() {
var dissoc = null;
var dissoc__1 = (function (coll){
return coll;
});
var dissoc__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._dissoc(coll,k);
}
});
var dissoc__3 = (function() { 
var G__19571__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = dissoc.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__19572 = ret;
var G__19573 = cljs.core.first(ks);
var G__19574 = cljs.core.next(ks);
coll = G__19572;
k = G__19573;
ks = G__19574;
continue;
} else {
return ret;
}
}
break;
}
};
var G__19571 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__19575__i = 0, G__19575__a = new Array(arguments.length -  2);
while (G__19575__i < G__19575__a.length) {G__19575__a[G__19575__i] = arguments[G__19575__i + 2]; ++G__19575__i;}
  ks = new cljs.core.IndexedSeq(G__19575__a,0);
} 
return G__19571__delegate.call(this,coll,k,ks);};
G__19571.cljs$lang$maxFixedArity = 2;
G__19571.cljs$lang$applyTo = (function (arglist__19576){
var coll = cljs.core.first(arglist__19576);
arglist__19576 = cljs.core.next(arglist__19576);
var k = cljs.core.first(arglist__19576);
var ks = cljs.core.rest(arglist__19576);
return G__19571__delegate(coll,k,ks);
});
G__19571.cljs$core$IFn$_invoke$arity$variadic = G__19571__delegate;
return G__19571;
})()
;
dissoc = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return dissoc__1.call(this,coll);
case 2:
return dissoc__2.call(this,coll,k);
default:
var G__19577 = null;
if (arguments.length > 2) {
var G__19578__i = 0, G__19578__a = new Array(arguments.length -  2);
while (G__19578__i < G__19578__a.length) {G__19578__a[G__19578__i] = arguments[G__19578__i + 2]; ++G__19578__i;}
G__19577 = new cljs.core.IndexedSeq(G__19578__a,0);
}
return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__19577);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc.cljs$lang$maxFixedArity = 2;
dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc;
})()
;
cljs.core.fn_QMARK_ = (function fn_QMARK_(f){
var or__17332__auto__ = (function (){var G__19583 = f;
return goog.isFunction(G__19583);
})();
if(cljs.core.truth_(or__17332__auto__)){
return or__17332__auto__;
} else {
var G__19584 = f;
if(G__19584){
var bit__18013__auto__ = null;
if(cljs.core.truth_((function (){var or__17332__auto____$1 = bit__18013__auto__;
if(cljs.core.truth_(or__17332__auto____$1)){
return or__17332__auto____$1;
} else {
return G__19584.cljs$core$Fn$;
}
})())){
return true;
} else {
if((!G__19584.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__19584);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__19584);
}
}
});

/**
* @constructor
*/
cljs.core.MetaFn = (function (afn,meta){
this.afn = afn;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393217;
})
cljs.core.MetaFn.prototype.call = (function() {
var G__20050 = null;
var G__20050__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});
var G__20050__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19586 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__19586) : self__.afn.call(null,G__19586));
});
var G__20050__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19587 = a;
var G__19588 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__19587,G__19588) : self__.afn.call(null,G__19587,G__19588));
});
var G__20050__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19589 = a;
var G__19590 = b;
var G__19591 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__19589,G__19590,G__19591) : self__.afn.call(null,G__19589,G__19590,G__19591));
});
var G__20050__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19592 = a;
var G__19593 = b;
var G__19594 = c;
var G__19595 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__19592,G__19593,G__19594,G__19595) : self__.afn.call(null,G__19592,G__19593,G__19594,G__19595));
});
var G__20050__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19596 = a;
var G__19597 = b;
var G__19598 = c;
var G__19599 = d;
var G__19600 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__19596,G__19597,G__19598,G__19599,G__19600) : self__.afn.call(null,G__19596,G__19597,G__19598,G__19599,G__19600));
});
var G__20050__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19601 = a;
var G__19602 = b;
var G__19603 = c;
var G__19604 = d;
var G__19605 = e;
var G__19606 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__19601,G__19602,G__19603,G__19604,G__19605,G__19606) : self__.afn.call(null,G__19601,G__19602,G__19603,G__19604,G__19605,G__19606));
});
var G__20050__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19607 = a;
var G__19608 = b;
var G__19609 = c;
var G__19610 = d;
var G__19611 = e;
var G__19612 = f;
var G__19613 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__19607,G__19608,G__19609,G__19610,G__19611,G__19612,G__19613) : self__.afn.call(null,G__19607,G__19608,G__19609,G__19610,G__19611,G__19612,G__19613));
});
var G__20050__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19614 = a;
var G__19615 = b;
var G__19616 = c;
var G__19617 = d;
var G__19618 = e;
var G__19619 = f;
var G__19620 = g;
var G__19621 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__19614,G__19615,G__19616,G__19617,G__19618,G__19619,G__19620,G__19621) : self__.afn.call(null,G__19614,G__19615,G__19616,G__19617,G__19618,G__19619,G__19620,G__19621));
});
var G__20050__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19622 = a;
var G__19623 = b;
var G__19624 = c;
var G__19625 = d;
var G__19626 = e;
var G__19627 = f;
var G__19628 = g;
var G__19629 = h;
var G__19630 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__19622,G__19623,G__19624,G__19625,G__19626,G__19627,G__19628,G__19629,G__19630) : self__.afn.call(null,G__19622,G__19623,G__19624,G__19625,G__19626,G__19627,G__19628,G__19629,G__19630));
});
var G__20050__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19631 = a;
var G__19632 = b;
var G__19633 = c;
var G__19634 = d;
var G__19635 = e;
var G__19636 = f;
var G__19637 = g;
var G__19638 = h;
var G__19639 = i;
var G__19640 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__19631,G__19632,G__19633,G__19634,G__19635,G__19636,G__19637,G__19638,G__19639,G__19640) : self__.afn.call(null,G__19631,G__19632,G__19633,G__19634,G__19635,G__19636,G__19637,G__19638,G__19639,G__19640));
});
var G__20050__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19641 = a;
var G__19642 = b;
var G__19643 = c;
var G__19644 = d;
var G__19645 = e;
var G__19646 = f;
var G__19647 = g;
var G__19648 = h;
var G__19649 = i;
var G__19650 = j;
var G__19651 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__19641,G__19642,G__19643,G__19644,G__19645,G__19646,G__19647,G__19648,G__19649,G__19650,G__19651) : self__.afn.call(null,G__19641,G__19642,G__19643,G__19644,G__19645,G__19646,G__19647,G__19648,G__19649,G__19650,G__19651));
});
var G__20050__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19652 = a;
var G__19653 = b;
var G__19654 = c;
var G__19655 = d;
var G__19656 = e;
var G__19657 = f;
var G__19658 = g;
var G__19659 = h;
var G__19660 = i;
var G__19661 = j;
var G__19662 = k;
var G__19663 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__19652,G__19653,G__19654,G__19655,G__19656,G__19657,G__19658,G__19659,G__19660,G__19661,G__19662,G__19663) : self__.afn.call(null,G__19652,G__19653,G__19654,G__19655,G__19656,G__19657,G__19658,G__19659,G__19660,G__19661,G__19662,G__19663));
});
var G__20050__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19664 = a;
var G__19665 = b;
var G__19666 = c;
var G__19667 = d;
var G__19668 = e;
var G__19669 = f;
var G__19670 = g;
var G__19671 = h;
var G__19672 = i;
var G__19673 = j;
var G__19674 = k;
var G__19675 = l;
var G__19676 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__19664,G__19665,G__19666,G__19667,G__19668,G__19669,G__19670,G__19671,G__19672,G__19673,G__19674,G__19675,G__19676) : self__.afn.call(null,G__19664,G__19665,G__19666,G__19667,G__19668,G__19669,G__19670,G__19671,G__19672,G__19673,G__19674,G__19675,G__19676));
});
var G__20050__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19677 = a;
var G__19678 = b;
var G__19679 = c;
var G__19680 = d;
var G__19681 = e;
var G__19682 = f;
var G__19683 = g;
var G__19684 = h;
var G__19685 = i;
var G__19686 = j;
var G__19687 = k;
var G__19688 = l;
var G__19689 = m;
var G__19690 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__19677,G__19678,G__19679,G__19680,G__19681,G__19682,G__19683,G__19684,G__19685,G__19686,G__19687,G__19688,G__19689,G__19690) : self__.afn.call(null,G__19677,G__19678,G__19679,G__19680,G__19681,G__19682,G__19683,G__19684,G__19685,G__19686,G__19687,G__19688,G__19689,G__19690));
});
var G__20050__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19691 = a;
var G__19692 = b;
var G__19693 = c;
var G__19694 = d;
var G__19695 = e;
var G__19696 = f;
var G__19697 = g;
var G__19698 = h;
var G__19699 = i;
var G__19700 = j;
var G__19701 = k;
var G__19702 = l;
var G__19703 = m;
var G__19704 = n;
var G__19705 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__19691,G__19692,G__19693,G__19694,G__19695,G__19696,G__19697,G__19698,G__19699,G__19700,G__19701,G__19702,G__19703,G__19704,G__19705) : self__.afn.call(null,G__19691,G__19692,G__19693,G__19694,G__19695,G__19696,G__19697,G__19698,G__19699,G__19700,G__19701,G__19702,G__19703,G__19704,G__19705));
});
var G__20050__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19706 = a;
var G__19707 = b;
var G__19708 = c;
var G__19709 = d;
var G__19710 = e;
var G__19711 = f;
var G__19712 = g;
var G__19713 = h;
var G__19714 = i;
var G__19715 = j;
var G__19716 = k;
var G__19717 = l;
var G__19718 = m;
var G__19719 = n;
var G__19720 = o;
var G__19721 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__19706,G__19707,G__19708,G__19709,G__19710,G__19711,G__19712,G__19713,G__19714,G__19715,G__19716,G__19717,G__19718,G__19719,G__19720,G__19721) : self__.afn.call(null,G__19706,G__19707,G__19708,G__19709,G__19710,G__19711,G__19712,G__19713,G__19714,G__19715,G__19716,G__19717,G__19718,G__19719,G__19720,G__19721));
});
var G__20050__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19722 = a;
var G__19723 = b;
var G__19724 = c;
var G__19725 = d;
var G__19726 = e;
var G__19727 = f;
var G__19728 = g;
var G__19729 = h;
var G__19730 = i;
var G__19731 = j;
var G__19732 = k;
var G__19733 = l;
var G__19734 = m;
var G__19735 = n;
var G__19736 = o;
var G__19737 = p;
var G__19738 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__19722,G__19723,G__19724,G__19725,G__19726,G__19727,G__19728,G__19729,G__19730,G__19731,G__19732,G__19733,G__19734,G__19735,G__19736,G__19737,G__19738) : self__.afn.call(null,G__19722,G__19723,G__19724,G__19725,G__19726,G__19727,G__19728,G__19729,G__19730,G__19731,G__19732,G__19733,G__19734,G__19735,G__19736,G__19737,G__19738));
});
var G__20050__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19739 = a;
var G__19740 = b;
var G__19741 = c;
var G__19742 = d;
var G__19743 = e;
var G__19744 = f;
var G__19745 = g;
var G__19746 = h;
var G__19747 = i;
var G__19748 = j;
var G__19749 = k;
var G__19750 = l;
var G__19751 = m;
var G__19752 = n;
var G__19753 = o;
var G__19754 = p;
var G__19755 = q;
var G__19756 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__19739,G__19740,G__19741,G__19742,G__19743,G__19744,G__19745,G__19746,G__19747,G__19748,G__19749,G__19750,G__19751,G__19752,G__19753,G__19754,G__19755,G__19756) : self__.afn.call(null,G__19739,G__19740,G__19741,G__19742,G__19743,G__19744,G__19745,G__19746,G__19747,G__19748,G__19749,G__19750,G__19751,G__19752,G__19753,G__19754,G__19755,G__19756));
});
var G__20050__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19757 = a;
var G__19758 = b;
var G__19759 = c;
var G__19760 = d;
var G__19761 = e;
var G__19762 = f;
var G__19763 = g;
var G__19764 = h;
var G__19765 = i;
var G__19766 = j;
var G__19767 = k;
var G__19768 = l;
var G__19769 = m;
var G__19770 = n;
var G__19771 = o;
var G__19772 = p;
var G__19773 = q;
var G__19774 = r;
var G__19775 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__19757,G__19758,G__19759,G__19760,G__19761,G__19762,G__19763,G__19764,G__19765,G__19766,G__19767,G__19768,G__19769,G__19770,G__19771,G__19772,G__19773,G__19774,G__19775) : self__.afn.call(null,G__19757,G__19758,G__19759,G__19760,G__19761,G__19762,G__19763,G__19764,G__19765,G__19766,G__19767,G__19768,G__19769,G__19770,G__19771,G__19772,G__19773,G__19774,G__19775));
});
var G__20050__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19776 = a;
var G__19777 = b;
var G__19778 = c;
var G__19779 = d;
var G__19780 = e;
var G__19781 = f;
var G__19782 = g;
var G__19783 = h;
var G__19784 = i;
var G__19785 = j;
var G__19786 = k;
var G__19787 = l;
var G__19788 = m;
var G__19789 = n;
var G__19790 = o;
var G__19791 = p;
var G__19792 = q;
var G__19793 = r;
var G__19794 = s;
var G__19795 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__19776,G__19777,G__19778,G__19779,G__19780,G__19781,G__19782,G__19783,G__19784,G__19785,G__19786,G__19787,G__19788,G__19789,G__19790,G__19791,G__19792,G__19793,G__19794,G__19795) : self__.afn.call(null,G__19776,G__19777,G__19778,G__19779,G__19780,G__19781,G__19782,G__19783,G__19784,G__19785,G__19786,G__19787,G__19788,G__19789,G__19790,G__19791,G__19792,G__19793,G__19794,G__19795));
});
var G__20050__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19796 = self__.afn;
var G__19797 = a;
var G__19798 = b;
var G__19799 = c;
var G__19800 = d;
var G__19801 = e;
var G__19802 = f;
var G__19803 = g;
var G__19804 = h;
var G__19805 = i;
var G__19806 = j;
var G__19807 = k;
var G__19808 = l;
var G__19809 = m;
var G__19810 = n;
var G__19811 = o;
var G__19812 = p;
var G__19813 = q;
var G__19814 = r;
var G__19815 = s;
var G__19816 = t;
var G__19817 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__19796,G__19797,G__19798,G__19799,G__19800,G__19801,G__19802,G__19803,G__19804,G__19805,G__19806,G__19807,G__19808,G__19809,G__19810,G__19811,G__19812,G__19813,G__19814,G__19815,G__19816,G__19817) : cljs.core.apply.call(null,G__19796,G__19797,G__19798,G__19799,G__19800,G__19801,G__19802,G__19803,G__19804,G__19805,G__19806,G__19807,G__19808,G__19809,G__19810,G__19811,G__19812,G__19813,G__19814,G__19815,G__19816,G__19817));
});
G__20050 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__20050__1.call(this,self__);
case 2:
return G__20050__2.call(this,self__,a);
case 3:
return G__20050__3.call(this,self__,a,b);
case 4:
return G__20050__4.call(this,self__,a,b,c);
case 5:
return G__20050__5.call(this,self__,a,b,c,d);
case 6:
return G__20050__6.call(this,self__,a,b,c,d,e);
case 7:
return G__20050__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__20050__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__20050__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__20050__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__20050__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__20050__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__20050__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__20050__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__20050__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__20050__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__20050__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__20050__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__20050__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__20050__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__20050__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__20050__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__20050.cljs$core$IFn$_invoke$arity$1 = G__20050__1;
G__20050.cljs$core$IFn$_invoke$arity$2 = G__20050__2;
G__20050.cljs$core$IFn$_invoke$arity$3 = G__20050__3;
G__20050.cljs$core$IFn$_invoke$arity$4 = G__20050__4;
G__20050.cljs$core$IFn$_invoke$arity$5 = G__20050__5;
G__20050.cljs$core$IFn$_invoke$arity$6 = G__20050__6;
G__20050.cljs$core$IFn$_invoke$arity$7 = G__20050__7;
G__20050.cljs$core$IFn$_invoke$arity$8 = G__20050__8;
G__20050.cljs$core$IFn$_invoke$arity$9 = G__20050__9;
G__20050.cljs$core$IFn$_invoke$arity$10 = G__20050__10;
G__20050.cljs$core$IFn$_invoke$arity$11 = G__20050__11;
G__20050.cljs$core$IFn$_invoke$arity$12 = G__20050__12;
G__20050.cljs$core$IFn$_invoke$arity$13 = G__20050__13;
G__20050.cljs$core$IFn$_invoke$arity$14 = G__20050__14;
G__20050.cljs$core$IFn$_invoke$arity$15 = G__20050__15;
G__20050.cljs$core$IFn$_invoke$arity$16 = G__20050__16;
G__20050.cljs$core$IFn$_invoke$arity$17 = G__20050__17;
G__20050.cljs$core$IFn$_invoke$arity$18 = G__20050__18;
G__20050.cljs$core$IFn$_invoke$arity$19 = G__20050__19;
G__20050.cljs$core$IFn$_invoke$arity$20 = G__20050__20;
G__20050.cljs$core$IFn$_invoke$arity$21 = G__20050__21;
G__20050.cljs$core$IFn$_invoke$arity$22 = G__20050__22;
return G__20050;
})()
;

cljs.core.MetaFn.prototype.apply = (function (self__,args19585){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args19585)));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
var G__19818 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__19818) : self__.afn.call(null,G__19818));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
var G__19819 = a;
var G__19820 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__19819,G__19820) : self__.afn.call(null,G__19819,G__19820));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
var G__19821 = a;
var G__19822 = b;
var G__19823 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__19821,G__19822,G__19823) : self__.afn.call(null,G__19821,G__19822,G__19823));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
var G__19824 = a;
var G__19825 = b;
var G__19826 = c;
var G__19827 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__19824,G__19825,G__19826,G__19827) : self__.afn.call(null,G__19824,G__19825,G__19826,G__19827));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
var G__19828 = a;
var G__19829 = b;
var G__19830 = c;
var G__19831 = d;
var G__19832 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__19828,G__19829,G__19830,G__19831,G__19832) : self__.afn.call(null,G__19828,G__19829,G__19830,G__19831,G__19832));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
var G__19833 = a;
var G__19834 = b;
var G__19835 = c;
var G__19836 = d;
var G__19837 = e;
var G__19838 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__19833,G__19834,G__19835,G__19836,G__19837,G__19838) : self__.afn.call(null,G__19833,G__19834,G__19835,G__19836,G__19837,G__19838));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
var G__19839 = a;
var G__19840 = b;
var G__19841 = c;
var G__19842 = d;
var G__19843 = e;
var G__19844 = f;
var G__19845 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__19839,G__19840,G__19841,G__19842,G__19843,G__19844,G__19845) : self__.afn.call(null,G__19839,G__19840,G__19841,G__19842,G__19843,G__19844,G__19845));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
var G__19846 = a;
var G__19847 = b;
var G__19848 = c;
var G__19849 = d;
var G__19850 = e;
var G__19851 = f;
var G__19852 = g;
var G__19853 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__19846,G__19847,G__19848,G__19849,G__19850,G__19851,G__19852,G__19853) : self__.afn.call(null,G__19846,G__19847,G__19848,G__19849,G__19850,G__19851,G__19852,G__19853));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
var G__19854 = a;
var G__19855 = b;
var G__19856 = c;
var G__19857 = d;
var G__19858 = e;
var G__19859 = f;
var G__19860 = g;
var G__19861 = h;
var G__19862 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__19854,G__19855,G__19856,G__19857,G__19858,G__19859,G__19860,G__19861,G__19862) : self__.afn.call(null,G__19854,G__19855,G__19856,G__19857,G__19858,G__19859,G__19860,G__19861,G__19862));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
var G__19863 = a;
var G__19864 = b;
var G__19865 = c;
var G__19866 = d;
var G__19867 = e;
var G__19868 = f;
var G__19869 = g;
var G__19870 = h;
var G__19871 = i;
var G__19872 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__19863,G__19864,G__19865,G__19866,G__19867,G__19868,G__19869,G__19870,G__19871,G__19872) : self__.afn.call(null,G__19863,G__19864,G__19865,G__19866,G__19867,G__19868,G__19869,G__19870,G__19871,G__19872));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
var G__19873 = a;
var G__19874 = b;
var G__19875 = c;
var G__19876 = d;
var G__19877 = e;
var G__19878 = f;
var G__19879 = g;
var G__19880 = h;
var G__19881 = i;
var G__19882 = j;
var G__19883 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__19873,G__19874,G__19875,G__19876,G__19877,G__19878,G__19879,G__19880,G__19881,G__19882,G__19883) : self__.afn.call(null,G__19873,G__19874,G__19875,G__19876,G__19877,G__19878,G__19879,G__19880,G__19881,G__19882,G__19883));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
var G__19884 = a;
var G__19885 = b;
var G__19886 = c;
var G__19887 = d;
var G__19888 = e;
var G__19889 = f;
var G__19890 = g;
var G__19891 = h;
var G__19892 = i;
var G__19893 = j;
var G__19894 = k;
var G__19895 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__19884,G__19885,G__19886,G__19887,G__19888,G__19889,G__19890,G__19891,G__19892,G__19893,G__19894,G__19895) : self__.afn.call(null,G__19884,G__19885,G__19886,G__19887,G__19888,G__19889,G__19890,G__19891,G__19892,G__19893,G__19894,G__19895));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
var G__19896 = a;
var G__19897 = b;
var G__19898 = c;
var G__19899 = d;
var G__19900 = e;
var G__19901 = f;
var G__19902 = g;
var G__19903 = h;
var G__19904 = i;
var G__19905 = j;
var G__19906 = k;
var G__19907 = l;
var G__19908 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__19896,G__19897,G__19898,G__19899,G__19900,G__19901,G__19902,G__19903,G__19904,G__19905,G__19906,G__19907,G__19908) : self__.afn.call(null,G__19896,G__19897,G__19898,G__19899,G__19900,G__19901,G__19902,G__19903,G__19904,G__19905,G__19906,G__19907,G__19908));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
var G__19909 = a;
var G__19910 = b;
var G__19911 = c;
var G__19912 = d;
var G__19913 = e;
var G__19914 = f;
var G__19915 = g;
var G__19916 = h;
var G__19917 = i;
var G__19918 = j;
var G__19919 = k;
var G__19920 = l;
var G__19921 = m;
var G__19922 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__19909,G__19910,G__19911,G__19912,G__19913,G__19914,G__19915,G__19916,G__19917,G__19918,G__19919,G__19920,G__19921,G__19922) : self__.afn.call(null,G__19909,G__19910,G__19911,G__19912,G__19913,G__19914,G__19915,G__19916,G__19917,G__19918,G__19919,G__19920,G__19921,G__19922));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
var G__19923 = a;
var G__19924 = b;
var G__19925 = c;
var G__19926 = d;
var G__19927 = e;
var G__19928 = f;
var G__19929 = g;
var G__19930 = h;
var G__19931 = i;
var G__19932 = j;
var G__19933 = k;
var G__19934 = l;
var G__19935 = m;
var G__19936 = n;
var G__19937 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__19923,G__19924,G__19925,G__19926,G__19927,G__19928,G__19929,G__19930,G__19931,G__19932,G__19933,G__19934,G__19935,G__19936,G__19937) : self__.afn.call(null,G__19923,G__19924,G__19925,G__19926,G__19927,G__19928,G__19929,G__19930,G__19931,G__19932,G__19933,G__19934,G__19935,G__19936,G__19937));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
var G__19938 = a;
var G__19939 = b;
var G__19940 = c;
var G__19941 = d;
var G__19942 = e;
var G__19943 = f;
var G__19944 = g;
var G__19945 = h;
var G__19946 = i;
var G__19947 = j;
var G__19948 = k;
var G__19949 = l;
var G__19950 = m;
var G__19951 = n;
var G__19952 = o;
var G__19953 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__19938,G__19939,G__19940,G__19941,G__19942,G__19943,G__19944,G__19945,G__19946,G__19947,G__19948,G__19949,G__19950,G__19951,G__19952,G__19953) : self__.afn.call(null,G__19938,G__19939,G__19940,G__19941,G__19942,G__19943,G__19944,G__19945,G__19946,G__19947,G__19948,G__19949,G__19950,G__19951,G__19952,G__19953));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
var G__19954 = a;
var G__19955 = b;
var G__19956 = c;
var G__19957 = d;
var G__19958 = e;
var G__19959 = f;
var G__19960 = g;
var G__19961 = h;
var G__19962 = i;
var G__19963 = j;
var G__19964 = k;
var G__19965 = l;
var G__19966 = m;
var G__19967 = n;
var G__19968 = o;
var G__19969 = p;
var G__19970 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__19954,G__19955,G__19956,G__19957,G__19958,G__19959,G__19960,G__19961,G__19962,G__19963,G__19964,G__19965,G__19966,G__19967,G__19968,G__19969,G__19970) : self__.afn.call(null,G__19954,G__19955,G__19956,G__19957,G__19958,G__19959,G__19960,G__19961,G__19962,G__19963,G__19964,G__19965,G__19966,G__19967,G__19968,G__19969,G__19970));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
var G__19971 = a;
var G__19972 = b;
var G__19973 = c;
var G__19974 = d;
var G__19975 = e;
var G__19976 = f;
var G__19977 = g;
var G__19978 = h;
var G__19979 = i;
var G__19980 = j;
var G__19981 = k;
var G__19982 = l;
var G__19983 = m;
var G__19984 = n;
var G__19985 = o;
var G__19986 = p;
var G__19987 = q;
var G__19988 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__19971,G__19972,G__19973,G__19974,G__19975,G__19976,G__19977,G__19978,G__19979,G__19980,G__19981,G__19982,G__19983,G__19984,G__19985,G__19986,G__19987,G__19988) : self__.afn.call(null,G__19971,G__19972,G__19973,G__19974,G__19975,G__19976,G__19977,G__19978,G__19979,G__19980,G__19981,G__19982,G__19983,G__19984,G__19985,G__19986,G__19987,G__19988));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
var G__19989 = a;
var G__19990 = b;
var G__19991 = c;
var G__19992 = d;
var G__19993 = e;
var G__19994 = f;
var G__19995 = g;
var G__19996 = h;
var G__19997 = i;
var G__19998 = j;
var G__19999 = k;
var G__20000 = l;
var G__20001 = m;
var G__20002 = n;
var G__20003 = o;
var G__20004 = p;
var G__20005 = q;
var G__20006 = r;
var G__20007 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__19989,G__19990,G__19991,G__19992,G__19993,G__19994,G__19995,G__19996,G__19997,G__19998,G__19999,G__20000,G__20001,G__20002,G__20003,G__20004,G__20005,G__20006,G__20007) : self__.afn.call(null,G__19989,G__19990,G__19991,G__19992,G__19993,G__19994,G__19995,G__19996,G__19997,G__19998,G__19999,G__20000,G__20001,G__20002,G__20003,G__20004,G__20005,G__20006,G__20007));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
var G__20008 = a;
var G__20009 = b;
var G__20010 = c;
var G__20011 = d;
var G__20012 = e;
var G__20013 = f;
var G__20014 = g;
var G__20015 = h;
var G__20016 = i;
var G__20017 = j;
var G__20018 = k;
var G__20019 = l;
var G__20020 = m;
var G__20021 = n;
var G__20022 = o;
var G__20023 = p;
var G__20024 = q;
var G__20025 = r;
var G__20026 = s;
var G__20027 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__20008,G__20009,G__20010,G__20011,G__20012,G__20013,G__20014,G__20015,G__20016,G__20017,G__20018,G__20019,G__20020,G__20021,G__20022,G__20023,G__20024,G__20025,G__20026,G__20027) : self__.afn.call(null,G__20008,G__20009,G__20010,G__20011,G__20012,G__20013,G__20014,G__20015,G__20016,G__20017,G__20018,G__20019,G__20020,G__20021,G__20022,G__20023,G__20024,G__20025,G__20026,G__20027));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__20028 = self__.afn;
var G__20029 = a;
var G__20030 = b;
var G__20031 = c;
var G__20032 = d;
var G__20033 = e;
var G__20034 = f;
var G__20035 = g;
var G__20036 = h;
var G__20037 = i;
var G__20038 = j;
var G__20039 = k;
var G__20040 = l;
var G__20041 = m;
var G__20042 = n;
var G__20043 = o;
var G__20044 = p;
var G__20045 = q;
var G__20046 = r;
var G__20047 = s;
var G__20048 = t;
var G__20049 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__20028,G__20029,G__20030,G__20031,G__20032,G__20033,G__20034,G__20035,G__20036,G__20037,G__20038,G__20039,G__20040,G__20041,G__20042,G__20043,G__20044,G__20045,G__20046,G__20047,G__20048,G__20049) : cljs.core.apply.call(null,G__20028,G__20029,G__20030,G__20031,G__20032,G__20033,G__20034,G__20035,G__20036,G__20037,G__20038,G__20039,G__20040,G__20041,G__20042,G__20043,G__20044,G__20045,G__20046,G__20047,G__20048,G__20049));
});

cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;

cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.MetaFn(self__.afn,new_meta));
});

cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.MetaFn.cljs$lang$type = true;

cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";

cljs.core.MetaFn.cljs$lang$ctorPrWriter = (function (this__17919__auto__,writer__17920__auto__,opt__17921__auto__){
return cljs.core._write(writer__17920__auto__,"cljs.core/MetaFn");
});

cljs.core.__GT_MetaFn = (function __GT_MetaFn(afn,meta){
return (new cljs.core.MetaFn(afn,meta));
});

/**
* Returns an object of the same type and value as obj, with
* map m as its metadata.
*/
cljs.core.with_meta = (function with_meta(o,meta){
if((cljs.core.fn_QMARK_(o)) && (!((function (){var G__20054 = o;
if(G__20054){
var bit__18013__auto__ = (G__20054.cljs$lang$protocol_mask$partition0$ & (262144));
if((bit__18013__auto__) || (G__20054.cljs$core$IWithMeta$)){
return true;
} else {
if((!G__20054.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__20054);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__20054);
}
})()))){
return (new cljs.core.MetaFn(o,meta));
} else {
if((o == null)){
return null;
} else {
return cljs.core._with_meta(o,meta);
}
}
});
/**
* Returns the metadata of obj, returns nil if there is no metadata.
*/
cljs.core.meta = (function meta(o){
if((function (){var and__17320__auto__ = !((o == null));
if(and__17320__auto__){
var G__20058 = o;
if(G__20058){
var bit__18013__auto__ = (G__20058.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__18013__auto__) || (G__20058.cljs$core$IMeta$)){
return true;
} else {
if((!G__20058.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__20058);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__20058);
}
} else {
return and__17320__auto__;
}
})()){
return cljs.core._meta(o);
} else {
return null;
}
});
/**
* For a list or queue, same as first, for a vector, same as, but much
* more efficient than, last. If the collection is empty, returns nil.
*/
cljs.core.peek = (function peek(coll){
if((coll == null)){
return null;
} else {
return cljs.core._peek(coll);
}
});
/**
* For a list or queue, returns a new list/queue without the first
* item, for a vector, returns a new vector without the last item.
* Note - not the same as next/butlast.
*/
cljs.core.pop = (function pop(coll){
if((coll == null)){
return null;
} else {
return cljs.core._pop(coll);
}
});
/**
* disj[oin]. Returns a new set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj = (function() {
var disj = null;
var disj__1 = (function (coll){
return coll;
});
var disj__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._disjoin(coll,k);
}
});
var disj__3 = (function() { 
var G__20061__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = disj.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__20062 = ret;
var G__20063 = cljs.core.first(ks);
var G__20064 = cljs.core.next(ks);
coll = G__20062;
k = G__20063;
ks = G__20064;
continue;
} else {
return ret;
}
}
break;
}
};
var G__20061 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__20065__i = 0, G__20065__a = new Array(arguments.length -  2);
while (G__20065__i < G__20065__a.length) {G__20065__a[G__20065__i] = arguments[G__20065__i + 2]; ++G__20065__i;}
  ks = new cljs.core.IndexedSeq(G__20065__a,0);
} 
return G__20061__delegate.call(this,coll,k,ks);};
G__20061.cljs$lang$maxFixedArity = 2;
G__20061.cljs$lang$applyTo = (function (arglist__20066){
var coll = cljs.core.first(arglist__20066);
arglist__20066 = cljs.core.next(arglist__20066);
var k = cljs.core.first(arglist__20066);
var ks = cljs.core.rest(arglist__20066);
return G__20061__delegate(coll,k,ks);
});
G__20061.cljs$core$IFn$_invoke$arity$variadic = G__20061__delegate;
return G__20061;
})()
;
disj = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return disj__1.call(this,coll);
case 2:
return disj__2.call(this,coll,k);
default:
var G__20067 = null;
if (arguments.length > 2) {
var G__20068__i = 0, G__20068__a = new Array(arguments.length -  2);
while (G__20068__i < G__20068__a.length) {G__20068__a[G__20068__i] = arguments[G__20068__i + 2]; ++G__20068__i;}
G__20067 = new cljs.core.IndexedSeq(G__20068__a,0);
}
return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__20067);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj.cljs$lang$maxFixedArity = 2;
disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
return disj;
})()
;
/**
* Returns true if coll has no items - same as (not (seq coll)).
* Please use the idiom (seq x) rather than (not (empty? x))
*/
cljs.core.empty_QMARK_ = (function empty_QMARK_(coll){
return ((coll == null)) || (cljs.core.not(cljs.core.seq(coll)));
});
/**
* Returns true if x satisfies ICollection
*/
cljs.core.coll_QMARK_ = (function coll_QMARK_(x){
if((x == null)){
return false;
} else {
var G__20070 = x;
if(G__20070){
var bit__18013__auto__ = (G__20070.cljs$lang$protocol_mask$partition0$ & (8));
if((bit__18013__auto__) || (G__20070.cljs$core$ICollection$)){
return true;
} else {
if((!G__20070.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__20070);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__20070);
}
}
});
/**
* Returns true if x satisfies ISet
*/
cljs.core.set_QMARK_ = (function set_QMARK_(x){
if((x == null)){
return false;
} else {
var G__20072 = x;
if(G__20072){
var bit__18013__auto__ = (G__20072.cljs$lang$protocol_mask$partition0$ & (4096));
if((bit__18013__auto__) || (G__20072.cljs$core$ISet$)){
return true;
} else {
if((!G__20072.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__20072);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__20072);
}
}
});
/**
* Returns true if coll implements Associative
*/
cljs.core.associative_QMARK_ = (function associative_QMARK_(x){
var G__20074 = x;
if(G__20074){
var bit__18013__auto__ = (G__20074.cljs$lang$protocol_mask$partition0$ & (512));
if((bit__18013__auto__) || (G__20074.cljs$core$IAssociative$)){
return true;
} else {
if((!G__20074.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__20074);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__20074);
}
});
/**
* Returns true if coll satisfies ISequential
*/
cljs.core.sequential_QMARK_ = (function sequential_QMARK_(x){
var G__20076 = x;
if(G__20076){
var bit__18013__auto__ = (G__20076.cljs$lang$protocol_mask$partition0$ & (16777216));
if((bit__18013__auto__) || (G__20076.cljs$core$ISequential$)){
return true;
} else {
if((!G__20076.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__20076);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__20076);
}
});
/**
* Returns true if coll satisfies ISorted
*/
cljs.core.sorted_QMARK_ = (function sorted_QMARK_(x){
var G__20078 = x;
if(G__20078){
var bit__18013__auto__ = (G__20078.cljs$lang$protocol_mask$partition0$ & (268435456));
if((bit__18013__auto__) || (G__20078.cljs$core$ISorted$)){
return true;
} else {
if((!G__20078.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__20078);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__20078);
}
});
/**
* Returns true if coll satisfies IReduce
*/
cljs.core.reduceable_QMARK_ = (function reduceable_QMARK_(x){
var G__20080 = x;
if(G__20080){
var bit__18013__auto__ = (G__20080.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__18013__auto__) || (G__20080.cljs$core$IReduce$)){
return true;
} else {
if((!G__20080.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__20080);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__20080);
}
});
/**
* Return true if x satisfies IMap
*/
cljs.core.map_QMARK_ = (function map_QMARK_(x){
if((x == null)){
return false;
} else {
var G__20082 = x;
if(G__20082){
var bit__18013__auto__ = (G__20082.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__18013__auto__) || (G__20082.cljs$core$IMap$)){
return true;
} else {
if((!G__20082.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__20082);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__20082);
}
}
});
/**
* Return true if x satisfies IVector
*/
cljs.core.vector_QMARK_ = (function vector_QMARK_(x){
var G__20084 = x;
if(G__20084){
var bit__18013__auto__ = (G__20084.cljs$lang$protocol_mask$partition0$ & (16384));
if((bit__18013__auto__) || (G__20084.cljs$core$IVector$)){
return true;
} else {
if((!G__20084.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__20084);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__20084);
}
});

cljs.core.chunked_seq_QMARK_ = (function chunked_seq_QMARK_(x){
var G__20086 = x;
if(G__20086){
var bit__18006__auto__ = (G__20086.cljs$lang$protocol_mask$partition1$ & (512));
if((bit__18006__auto__) || (G__20086.cljs$core$IChunkedSeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
});
/**
* @param {...*} var_args
*/
cljs.core.js_obj = (function() {
var js_obj = null;
var js_obj__0 = (function (){
var obj20092 = {};
return obj20092;
});
var js_obj__1 = (function() { 
var G__20095__delegate = function (keyvals){
var G__20093 = goog.object.create;
var G__20094 = keyvals;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__20093,G__20094) : cljs.core.apply.call(null,G__20093,G__20094));
};
var G__20095 = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__20096__i = 0, G__20096__a = new Array(arguments.length -  0);
while (G__20096__i < G__20096__a.length) {G__20096__a[G__20096__i] = arguments[G__20096__i + 0]; ++G__20096__i;}
  keyvals = new cljs.core.IndexedSeq(G__20096__a,0);
} 
return G__20095__delegate.call(this,keyvals);};
G__20095.cljs$lang$maxFixedArity = 0;
G__20095.cljs$lang$applyTo = (function (arglist__20097){
var keyvals = cljs.core.seq(arglist__20097);
return G__20095__delegate(keyvals);
});
G__20095.cljs$core$IFn$_invoke$arity$variadic = G__20095__delegate;
return G__20095;
})()
;
js_obj = function(var_args){
var keyvals = var_args;
switch(arguments.length){
case 0:
return js_obj__0.call(this);
default:
var G__20098 = null;
if (arguments.length > 0) {
var G__20099__i = 0, G__20099__a = new Array(arguments.length -  0);
while (G__20099__i < G__20099__a.length) {G__20099__a[G__20099__i] = arguments[G__20099__i + 0]; ++G__20099__i;}
G__20098 = new cljs.core.IndexedSeq(G__20099__a,0);
}
return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__20098);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js_obj.cljs$lang$maxFixedArity = 0;
js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
return js_obj;
})()
;
cljs.core.js_keys = (function js_keys(obj){
var keys = [];
var G__20102_20104 = obj;
var G__20103_20105 = ((function (G__20102_20104,keys){
return (function (val,key,obj__$1){
return keys.push(key);
});})(G__20102_20104,keys))
;
goog.object.forEach(G__20102_20104,G__20103_20105);

return keys;
});
cljs.core.js_delete = (function js_delete(obj,key){
return delete obj[key];
});
cljs.core.array_copy = (function array_copy(from,i,to,j,len){
var i__$1 = i;
var j__$1 = j;
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__20106 = (i__$1 + (1));
var G__20107 = (j__$1 + (1));
var G__20108 = (len__$1 - (1));
i__$1 = G__20106;
j__$1 = G__20107;
len__$1 = G__20108;
continue;
}
break;
}
});
cljs.core.array_copy_downward = (function array_copy_downward(from,i,to,j,len){
var i__$1 = (i + (len - (1)));
var j__$1 = (j + (len - (1)));
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__20109 = (i__$1 - (1));
var G__20110 = (j__$1 - (1));
var G__20111 = (len__$1 - (1));
i__$1 = G__20109;
j__$1 = G__20110;
len__$1 = G__20111;
continue;
}
break;
}
});
cljs.core.lookup_sentinel = (function (){var obj20113 = {};
return obj20113;
})();
/**
* Returns true if x is the value false, false otherwise.
*/
cljs.core.false_QMARK_ = (function false_QMARK_(x){
return x === false;
});
/**
* Returns true if x is the value true, false otherwise.
*/
cljs.core.true_QMARK_ = (function true_QMARK_(x){
return x === true;
});
cljs.core.undefined_QMARK_ = (function undefined_QMARK_(x){
return (void 0 === x);
});
/**
* Return true if s satisfies ISeq
*/
cljs.core.seq_QMARK_ = (function seq_QMARK_(s){
if((s == null)){
return false;
} else {
var G__20115 = s;
if(G__20115){
var bit__18013__auto__ = (G__20115.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__18013__auto__) || (G__20115.cljs$core$ISeq$)){
return true;
} else {
if((!G__20115.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__20115);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__20115);
}
}
});
/**
* Return true if s satisfies ISeqable
*/
cljs.core.seqable_QMARK_ = (function seqable_QMARK_(s){
var G__20117 = s;
if(G__20117){
var bit__18013__auto__ = (G__20117.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__18013__auto__) || (G__20117.cljs$core$ISeqable$)){
return true;
} else {
if((!G__20117.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__20117);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__20117);
}
});
cljs.core.boolean$ = (function boolean$(x){
if(cljs.core.truth_(x)){
return true;
} else {
return false;
}
});
cljs.core.ifn_QMARK_ = (function ifn_QMARK_(f){
var or__17332__auto__ = cljs.core.fn_QMARK_(f);
if(or__17332__auto__){
return or__17332__auto__;
} else {
var G__20121 = f;
if(G__20121){
var bit__18013__auto__ = (G__20121.cljs$lang$protocol_mask$partition0$ & (1));
if((bit__18013__auto__) || (G__20121.cljs$core$IFn$)){
return true;
} else {
if((!G__20121.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__20121);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__20121);
}
}
});
/**
* Returns true if n is an integer.
*/
cljs.core.integer_QMARK_ = (function integer_QMARK_(n){
return (typeof n === 'number') && (cljs.core.not((function (){var G__20134 = n;
return isNaN(G__20134);
})())) && (!((n === Infinity))) && (((function (){var G__20135 = n;
return parseFloat(G__20135);
})() === (function (){var G__20136 = n;
var G__20137 = (10);
return parseInt(G__20136,G__20137);
})()));
});
/**
* Returns true if key is present in the given collection, otherwise
* returns false.  Note that for numerically indexed collections like
* vectors and arrays, this tests if the numeric key is within the
* range of indexes. 'contains?' operates constant or logarithmic time;
* it will not perform a linear search for a value.  See also 'some'.
*/
cljs.core.contains_QMARK_ = (function contains_QMARK_(coll,v){
if((cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return false;
} else {
return true;
}
});
/**
* Returns the map entry for key, or nil if key not present.
*/
cljs.core.find = (function find(coll,k){
if((!((coll == null))) && (cljs.core.associative_QMARK_(coll)) && (cljs.core.contains_QMARK_(coll,k))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,k)], null);
} else {
return null;
}
});
/**
* Returns true if no two of the arguments are =
* @param {...*} var_args
*/
cljs.core.distinct_QMARK_ = (function() {
var distinct_QMARK_ = null;
var distinct_QMARK___1 = (function (x){
return true;
});
var distinct_QMARK___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var distinct_QMARK___3 = (function() { 
var G__20138__delegate = function (x,y,more){
if(!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y))){
var s = cljs.core.PersistentHashSet.fromArray([x,y], true);
var xs = more;
while(true){
var x__$1 = cljs.core.first(xs);
var etc = cljs.core.next(xs);
if(cljs.core.truth_(xs)){
if(cljs.core.contains_QMARK_(s,x__$1)){
return false;
} else {
var G__20139 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,x__$1);
var G__20140 = etc;
s = G__20139;
xs = G__20140;
continue;
}
} else {
return true;
}
break;
}
} else {
return false;
}
};
var G__20138 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__20141__i = 0, G__20141__a = new Array(arguments.length -  2);
while (G__20141__i < G__20141__a.length) {G__20141__a[G__20141__i] = arguments[G__20141__i + 2]; ++G__20141__i;}
  more = new cljs.core.IndexedSeq(G__20141__a,0);
} 
return G__20138__delegate.call(this,x,y,more);};
G__20138.cljs$lang$maxFixedArity = 2;
G__20138.cljs$lang$applyTo = (function (arglist__20142){
var x = cljs.core.first(arglist__20142);
arglist__20142 = cljs.core.next(arglist__20142);
var y = cljs.core.first(arglist__20142);
var more = cljs.core.rest(arglist__20142);
return G__20138__delegate(x,y,more);
});
G__20138.cljs$core$IFn$_invoke$arity$variadic = G__20138__delegate;
return G__20138;
})()
;
distinct_QMARK_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return distinct_QMARK___1.call(this,x);
case 2:
return distinct_QMARK___2.call(this,x,y);
default:
var G__20143 = null;
if (arguments.length > 2) {
var G__20144__i = 0, G__20144__a = new Array(arguments.length -  2);
while (G__20144__i < G__20144__a.length) {G__20144__a[G__20144__i] = arguments[G__20144__i + 2]; ++G__20144__i;}
G__20143 = new cljs.core.IndexedSeq(G__20144__a,0);
}
return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__20143);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct_QMARK_.cljs$lang$maxFixedArity = 2;
distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
return distinct_QMARK_;
})()
;
/**
* Comparator. Returns a negative number, zero, or a positive number
* when x is logically 'less than', 'equal to', or 'greater than'
* y. Uses IComparable if available and google.array.defaultCompare for objects
* of the same type and special-cases nil to be less than any other object.
*/
cljs.core.compare = (function compare(x,y){
if((x === y)){
return (0);
} else {
if((x == null)){
return (-1);
} else {
if((y == null)){
return (1);
} else {
if((cljs.core.type(x) === cljs.core.type(y))){
if((function (){var G__20148 = x;
if(G__20148){
var bit__18006__auto__ = (G__20148.cljs$lang$protocol_mask$partition1$ & (2048));
if((bit__18006__auto__) || (G__20148.cljs$core$IComparable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(null,y);
} else {
var G__20149 = x;
var G__20150 = y;
return goog.array.defaultCompare(G__20149,G__20150);
}
} else {
throw (new Error("compare on non-nil objects of different types"));

}
}
}
}
});
/**
* Compare indexed collection.
*/
cljs.core.compare_indexed = (function() {
var compare_indexed = null;
var compare_indexed__2 = (function (xs,ys){
var xl = cljs.core.count(xs);
var yl = cljs.core.count(ys);
if((xl < yl)){
return (-1);
} else {
if((xl > yl)){
return (1);
} else {
return compare_indexed.cljs$core$IFn$_invoke$arity$4(xs,ys,xl,(0));

}
}
});
var compare_indexed__4 = (function (xs,ys,len,n){
while(true){
var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs,n),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys,n));
if(((d === (0))) && (((n + (1)) < len))){
var G__20155 = xs;
var G__20156 = ys;
var G__20157 = len;
var G__20158 = (n + (1));
xs = G__20155;
ys = G__20156;
len = G__20157;
n = G__20158;
continue;
} else {
return d;
}
break;
}
});
compare_indexed = function(xs,ys,len,n){
switch(arguments.length){
case 2:
return compare_indexed__2.call(this,xs,ys);
case 4:
return compare_indexed__4.call(this,xs,ys,len,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
return compare_indexed;
})()
;
/**
* Given a fn that might be boolean valued or a comparator,
* return a fn that is a comparator.
*/
cljs.core.fn__GT_comparator = (function fn__GT_comparator(f){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f,cljs.core.compare)){
return cljs.core.compare;
} else {
return (function (x,y){
var r = (function (){var G__20163 = x;
var G__20164 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20163,G__20164) : f.call(null,G__20163,G__20164));
})();
if(typeof r === 'number'){
return r;
} else {
if(cljs.core.truth_(r)){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__20165 = y;
var G__20166 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20165,G__20166) : f.call(null,G__20165,G__20166));
})())){
return (1);
} else {
return (0);
}
}
}
});
}
});
/**
* Returns a sorted sequence of the items in coll. Comp can be
* boolean-valued comparison function, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort = (function() {
var sort = null;
var sort__1 = (function (coll){
return sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,coll);
});
var sort__2 = (function (comp,coll){
if(cljs.core.seq(coll)){
var a = (function (){var G__20172 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__20172) : cljs.core.to_array.call(null,G__20172));
})();
var G__20173_20175 = a;
var G__20174_20176 = cljs.core.fn__GT_comparator(comp);
goog.array.stableSort(G__20173_20175,G__20174_20176);

return cljs.core.seq(a);
} else {
return cljs.core.List.EMPTY;
}
});
sort = function(comp,coll){
switch(arguments.length){
case 1:
return sort__1.call(this,comp);
case 2:
return sort__2.call(this,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
return sort;
})()
;
/**
* Returns a sorted sequence of the items in coll, where the sort
* order is determined by comparing (keyfn item).  Comp can be
* boolean-valued comparison funcion, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort_by = (function() {
var sort_by = null;
var sort_by__2 = (function (keyfn,coll){
return sort_by.cljs$core$IFn$_invoke$arity$3(keyfn,cljs.core.compare,coll);
});
var sort_by__3 = (function (keyfn,comp,coll){
return cljs.core.sort.cljs$core$IFn$_invoke$arity$2((function (x,y){
return cljs.core.fn__GT_comparator(comp).call(null,(function (){var G__20182 = x;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__20182) : keyfn.call(null,G__20182));
})(),(function (){var G__20183 = y;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__20183) : keyfn.call(null,G__20183));
})());
}),coll);
});
sort_by = function(keyfn,comp,coll){
switch(arguments.length){
case 2:
return sort_by__2.call(this,keyfn,comp);
case 3:
return sort_by__3.call(this,keyfn,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
return sort_by;
})()
;
cljs.core.seq_reduce = (function() {
var seq_reduce = null;
var seq_reduce__2 = (function (f,coll){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
var G__20189 = f;
var G__20190 = cljs.core.first(s);
var G__20191 = cljs.core.next(s);
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__20189,G__20190,G__20191) : cljs.core.reduce.call(null,G__20189,G__20190,G__20191));
} else {
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
}
});
var seq_reduce__3 = (function (f,val,coll){
var val__$1 = val;
var coll__$1 = cljs.core.seq(coll);
while(true){
if(coll__$1){
var nval = (function (){var G__20192 = val__$1;
var G__20193 = cljs.core.first(coll__$1);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20192,G__20193) : f.call(null,G__20192,G__20193));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__20194 = nval;
var G__20195 = cljs.core.next(coll__$1);
val__$1 = G__20194;
coll__$1 = G__20195;
continue;
}
} else {
return val__$1;
}
break;
}
});
seq_reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return seq_reduce__2.call(this,f,val);
case 3:
return seq_reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
return seq_reduce;
})()
;
/**
* Return a random permutation of coll
*/
cljs.core.shuffle = (function shuffle(coll){
var a = (function (){var G__20199 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__20199) : cljs.core.to_array.call(null,G__20199));
})();
var G__20200_20202 = a;
goog.array.shuffle(G__20200_20202);

var G__20201 = a;
return (cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__20201) : cljs.core.vec.call(null,G__20201));
});
/**
* f should be a function of 2 arguments. If val is not supplied,
* returns the result of applying f to the first 2 items in coll, then
* applying f to that result and the 3rd item, etc. If coll contains no
* items, f must accept no arguments as well, and reduce returns the
* result of calling f with no arguments.  If coll has only 1 item, it
* is returned and f is not called.  If val is supplied, returns the
* result of applying f to val and the first item in coll, then
* applying f to that result and the 2nd item, etc. If coll contains no
* items, returns val and f is not called.
*/
cljs.core.reduce = (function() {
var reduce = null;
var reduce__2 = (function (f,coll){
if((function (){var G__20205 = coll;
if(G__20205){
var bit__18006__auto__ = (G__20205.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__18006__auto__) || (G__20205.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(null,f);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll);

}
}
}
}
});
var reduce__3 = (function (f,val,coll){
if((function (){var G__20206 = coll;
if(G__20206){
var bit__18006__auto__ = (G__20206.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__18006__auto__) || (G__20206.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(null,f,val);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,val,coll);

}
}
}
}
});
reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return reduce__2.call(this,f,val);
case 3:
return reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
return reduce;
})()
;
/**
* Reduces an associative collection. f should be a function of 3
* arguments. Returns the result of applying f to init, the first key
* and the first value in coll, then applying f to that result and the
* 2nd key and value, etc. If coll contains no entries, returns init
* and f is not called. Note that reduce-kv is supported on vectors,
* where the keys will be the ordinals.
*/
cljs.core.reduce_kv = (function reduce_kv(f,init,coll){
if(!((coll == null))){
return cljs.core._kv_reduce(coll,f,init);
} else {
return init;
}
});
cljs.core.identity = (function identity(x){
return x;
});
cljs.core.completing = (function() {
var completing = null;
var completing__1 = (function (f){
return completing.cljs$core$IFn$_invoke$arity$2(f,cljs.core.identity);
});
var completing__2 = (function (f,cf){
return (function() {
var G__20215 = null;
var G__20215__0 = (function (){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
});
var G__20215__1 = (function (x){
var G__20212 = x;
return (cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__20212) : cf.call(null,G__20212));
});
var G__20215__2 = (function (x,y){
var G__20213 = x;
var G__20214 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20213,G__20214) : f.call(null,G__20213,G__20214));
});
G__20215 = function(x,y){
switch(arguments.length){
case 0:
return G__20215__0.call(this);
case 1:
return G__20215__1.call(this,x);
case 2:
return G__20215__2.call(this,x,y);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__20215.cljs$core$IFn$_invoke$arity$0 = G__20215__0;
G__20215.cljs$core$IFn$_invoke$arity$1 = G__20215__1;
G__20215.cljs$core$IFn$_invoke$arity$2 = G__20215__2;
return G__20215;
})()
});
completing = function(f,cf){
switch(arguments.length){
case 1:
return completing__1.call(this,f);
case 2:
return completing__2.call(this,f,cf);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
return completing;
})()
;
/**
* reduce with a transformation of f (xf). If init is not
* supplied, (f) will be called to produce it. f should be a reducing
* step function that accepts both 1 and 2 arguments, if it accepts
* only 2 you can add the arity-1 with 'completing'. Returns the result
* of applying (the transformed) xf to init and the first item in coll,
* then applying xf to that result and the 2nd item, etc. If coll
* contains no items, returns init and f is not called. Note that
* certain transforms may inject or skip items.
*/
cljs.core.transduce = (function() {
var transduce = null;
var transduce__3 = (function (xform,f,coll){
return transduce.cljs$core$IFn$_invoke$arity$4(xform,f,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),coll);
});
var transduce__4 = (function (xform,f,init,coll){
var f__$1 = (function (){var G__20222 = f;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__20222) : xform.call(null,G__20222));
})();
var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1,init,coll);
var G__20223 = ret;
return (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__20223) : f__$1.call(null,G__20223));
});
transduce = function(xform,f,init,coll){
switch(arguments.length){
case 3:
return transduce__3.call(this,xform,f,init);
case 4:
return transduce__4.call(this,xform,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
return transduce;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core._PLUS_ = (function() {
var _PLUS_ = null;
var _PLUS___0 = (function (){
return (0);
});
var _PLUS___1 = (function (x){
return x;
});
var _PLUS___2 = (function (x,y){
return (x + y);
});
var _PLUS___3 = (function() { 
var G__20224__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_PLUS_,(x + y),more);
};
var G__20224 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__20225__i = 0, G__20225__a = new Array(arguments.length -  2);
while (G__20225__i < G__20225__a.length) {G__20225__a[G__20225__i] = arguments[G__20225__i + 2]; ++G__20225__i;}
  more = new cljs.core.IndexedSeq(G__20225__a,0);
} 
return G__20224__delegate.call(this,x,y,more);};
G__20224.cljs$lang$maxFixedArity = 2;
G__20224.cljs$lang$applyTo = (function (arglist__20226){
var x = cljs.core.first(arglist__20226);
arglist__20226 = cljs.core.next(arglist__20226);
var y = cljs.core.first(arglist__20226);
var more = cljs.core.rest(arglist__20226);
return G__20224__delegate(x,y,more);
});
G__20224.cljs$core$IFn$_invoke$arity$variadic = G__20224__delegate;
return G__20224;
})()
;
_PLUS_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _PLUS___0.call(this);
case 1:
return _PLUS___1.call(this,x);
case 2:
return _PLUS___2.call(this,x,y);
default:
var G__20227 = null;
if (arguments.length > 2) {
var G__20228__i = 0, G__20228__a = new Array(arguments.length -  2);
while (G__20228__i < G__20228__a.length) {G__20228__a[G__20228__i] = arguments[G__20228__i + 2]; ++G__20228__i;}
G__20227 = new cljs.core.IndexedSeq(G__20228__a,0);
}
return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__20227);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_PLUS_.cljs$lang$maxFixedArity = 2;
_PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
_PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
_PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
_PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
_PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
return _PLUS_;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core._ = (function() {
var _ = null;
var ___1 = (function (x){
return (- x);
});
var ___2 = (function (x,y){
return (x - y);
});
var ___3 = (function() { 
var G__20229__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_,(x - y),more);
};
var G__20229 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__20230__i = 0, G__20230__a = new Array(arguments.length -  2);
while (G__20230__i < G__20230__a.length) {G__20230__a[G__20230__i] = arguments[G__20230__i + 2]; ++G__20230__i;}
  more = new cljs.core.IndexedSeq(G__20230__a,0);
} 
return G__20229__delegate.call(this,x,y,more);};
G__20229.cljs$lang$maxFixedArity = 2;
G__20229.cljs$lang$applyTo = (function (arglist__20231){
var x = cljs.core.first(arglist__20231);
arglist__20231 = cljs.core.next(arglist__20231);
var y = cljs.core.first(arglist__20231);
var more = cljs.core.rest(arglist__20231);
return G__20229__delegate(x,y,more);
});
G__20229.cljs$core$IFn$_invoke$arity$variadic = G__20229__delegate;
return G__20229;
})()
;
_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return ___1.call(this,x);
case 2:
return ___2.call(this,x,y);
default:
var G__20232 = null;
if (arguments.length > 2) {
var G__20233__i = 0, G__20233__a = new Array(arguments.length -  2);
while (G__20233__i < G__20233__a.length) {G__20233__a[G__20233__i] = arguments[G__20233__i + 2]; ++G__20233__i;}
G__20232 = new cljs.core.IndexedSeq(G__20233__a,0);
}
return ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__20232);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_.cljs$lang$maxFixedArity = 2;
_.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
_.cljs$core$IFn$_invoke$arity$1 = ___1;
_.cljs$core$IFn$_invoke$arity$2 = ___2;
_.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
return _;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core._STAR_ = (function() {
var _STAR_ = null;
var _STAR___0 = (function (){
return (1);
});
var _STAR___1 = (function (x){
return x;
});
var _STAR___2 = (function (x,y){
return (x * y);
});
var _STAR___3 = (function() { 
var G__20234__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_,(x * y),more);
};
var G__20234 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__20235__i = 0, G__20235__a = new Array(arguments.length -  2);
while (G__20235__i < G__20235__a.length) {G__20235__a[G__20235__i] = arguments[G__20235__i + 2]; ++G__20235__i;}
  more = new cljs.core.IndexedSeq(G__20235__a,0);
} 
return G__20234__delegate.call(this,x,y,more);};
G__20234.cljs$lang$maxFixedArity = 2;
G__20234.cljs$lang$applyTo = (function (arglist__20236){
var x = cljs.core.first(arglist__20236);
arglist__20236 = cljs.core.next(arglist__20236);
var y = cljs.core.first(arglist__20236);
var more = cljs.core.rest(arglist__20236);
return G__20234__delegate(x,y,more);
});
G__20234.cljs$core$IFn$_invoke$arity$variadic = G__20234__delegate;
return G__20234;
})()
;
_STAR_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _STAR___0.call(this);
case 1:
return _STAR___1.call(this,x);
case 2:
return _STAR___2.call(this,x,y);
default:
var G__20237 = null;
if (arguments.length > 2) {
var G__20238__i = 0, G__20238__a = new Array(arguments.length -  2);
while (G__20238__i < G__20238__a.length) {G__20238__a[G__20238__i] = arguments[G__20238__i + 2]; ++G__20238__i;}
G__20237 = new cljs.core.IndexedSeq(G__20238__a,0);
}
return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__20237);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_STAR_.cljs$lang$maxFixedArity = 2;
_STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
_STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
_STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
_STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
_STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
return _STAR_;
})()
;
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core._SLASH_ = (function() {
var _SLASH_ = null;
var _SLASH___1 = (function (x){
return _SLASH_.cljs$core$IFn$_invoke$arity$2((1),x);
});
var _SLASH___2 = (function (x,y){
return (x / y);
});
var _SLASH___3 = (function() { 
var G__20243__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_SLASH_,_SLASH_.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__20243 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__20244__i = 0, G__20244__a = new Array(arguments.length -  2);
while (G__20244__i < G__20244__a.length) {G__20244__a[G__20244__i] = arguments[G__20244__i + 2]; ++G__20244__i;}
  more = new cljs.core.IndexedSeq(G__20244__a,0);
} 
return G__20243__delegate.call(this,x,y,more);};
G__20243.cljs$lang$maxFixedArity = 2;
G__20243.cljs$lang$applyTo = (function (arglist__20245){
var x = cljs.core.first(arglist__20245);
arglist__20245 = cljs.core.next(arglist__20245);
var y = cljs.core.first(arglist__20245);
var more = cljs.core.rest(arglist__20245);
return G__20243__delegate(x,y,more);
});
G__20243.cljs$core$IFn$_invoke$arity$variadic = G__20243__delegate;
return G__20243;
})()
;
_SLASH_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _SLASH___1.call(this,x);
case 2:
return _SLASH___2.call(this,x,y);
default:
var G__20246 = null;
if (arguments.length > 2) {
var G__20247__i = 0, G__20247__a = new Array(arguments.length -  2);
while (G__20247__i < G__20247__a.length) {G__20247__a[G__20247__i] = arguments[G__20247__i + 2]; ++G__20247__i;}
G__20246 = new cljs.core.IndexedSeq(G__20247__a,0);
}
return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__20246);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_SLASH_.cljs$lang$maxFixedArity = 2;
_SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
_SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
_SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
_SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
return _SLASH_;
})()
;
/**
* Returns non-nil if nums are in monotonically increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT_ = (function() {
var _LT_ = null;
var _LT___1 = (function (x){
return true;
});
var _LT___2 = (function (x,y){
return (x < y);
});
var _LT___3 = (function() { 
var G__20248__delegate = function (x,y,more){
while(true){
if((x < y)){
if(cljs.core.next(more)){
var G__20249 = y;
var G__20250 = cljs.core.first(more);
var G__20251 = cljs.core.next(more);
x = G__20249;
y = G__20250;
more = G__20251;
continue;
} else {
return (y < cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__20248 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__20252__i = 0, G__20252__a = new Array(arguments.length -  2);
while (G__20252__i < G__20252__a.length) {G__20252__a[G__20252__i] = arguments[G__20252__i + 2]; ++G__20252__i;}
  more = new cljs.core.IndexedSeq(G__20252__a,0);
} 
return G__20248__delegate.call(this,x,y,more);};
G__20248.cljs$lang$maxFixedArity = 2;
G__20248.cljs$lang$applyTo = (function (arglist__20253){
var x = cljs.core.first(arglist__20253);
arglist__20253 = cljs.core.next(arglist__20253);
var y = cljs.core.first(arglist__20253);
var more = cljs.core.rest(arglist__20253);
return G__20248__delegate(x,y,more);
});
G__20248.cljs$core$IFn$_invoke$arity$variadic = G__20248__delegate;
return G__20248;
})()
;
_LT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT___1.call(this,x);
case 2:
return _LT___2.call(this,x,y);
default:
var G__20254 = null;
if (arguments.length > 2) {
var G__20255__i = 0, G__20255__a = new Array(arguments.length -  2);
while (G__20255__i < G__20255__a.length) {G__20255__a[G__20255__i] = arguments[G__20255__i + 2]; ++G__20255__i;}
G__20254 = new cljs.core.IndexedSeq(G__20255__a,0);
}
return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__20254);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT_.cljs$lang$maxFixedArity = 2;
_LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
_LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
_LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
_LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT__EQ_ = (function() {
var _LT__EQ_ = null;
var _LT__EQ___1 = (function (x){
return true;
});
var _LT__EQ___2 = (function (x,y){
return (x <= y);
});
var _LT__EQ___3 = (function() { 
var G__20256__delegate = function (x,y,more){
while(true){
if((x <= y)){
if(cljs.core.next(more)){
var G__20257 = y;
var G__20258 = cljs.core.first(more);
var G__20259 = cljs.core.next(more);
x = G__20257;
y = G__20258;
more = G__20259;
continue;
} else {
return (y <= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__20256 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__20260__i = 0, G__20260__a = new Array(arguments.length -  2);
while (G__20260__i < G__20260__a.length) {G__20260__a[G__20260__i] = arguments[G__20260__i + 2]; ++G__20260__i;}
  more = new cljs.core.IndexedSeq(G__20260__a,0);
} 
return G__20256__delegate.call(this,x,y,more);};
G__20256.cljs$lang$maxFixedArity = 2;
G__20256.cljs$lang$applyTo = (function (arglist__20261){
var x = cljs.core.first(arglist__20261);
arglist__20261 = cljs.core.next(arglist__20261);
var y = cljs.core.first(arglist__20261);
var more = cljs.core.rest(arglist__20261);
return G__20256__delegate(x,y,more);
});
G__20256.cljs$core$IFn$_invoke$arity$variadic = G__20256__delegate;
return G__20256;
})()
;
_LT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT__EQ___1.call(this,x);
case 2:
return _LT__EQ___2.call(this,x,y);
default:
var G__20262 = null;
if (arguments.length > 2) {
var G__20263__i = 0, G__20263__a = new Array(arguments.length -  2);
while (G__20263__i < G__20263__a.length) {G__20263__a[G__20263__i] = arguments[G__20263__i + 2]; ++G__20263__i;}
G__20262 = new cljs.core.IndexedSeq(G__20263__a,0);
}
return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__20262);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT__EQ_.cljs$lang$maxFixedArity = 2;
_LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
_LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
_LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
_LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT__EQ_;
})()
;
/**
* Returns non-nil if nums are in monotonically decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT_ = (function() {
var _GT_ = null;
var _GT___1 = (function (x){
return true;
});
var _GT___2 = (function (x,y){
return (x > y);
});
var _GT___3 = (function() { 
var G__20264__delegate = function (x,y,more){
while(true){
if((x > y)){
if(cljs.core.next(more)){
var G__20265 = y;
var G__20266 = cljs.core.first(more);
var G__20267 = cljs.core.next(more);
x = G__20265;
y = G__20266;
more = G__20267;
continue;
} else {
return (y > cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__20264 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__20268__i = 0, G__20268__a = new Array(arguments.length -  2);
while (G__20268__i < G__20268__a.length) {G__20268__a[G__20268__i] = arguments[G__20268__i + 2]; ++G__20268__i;}
  more = new cljs.core.IndexedSeq(G__20268__a,0);
} 
return G__20264__delegate.call(this,x,y,more);};
G__20264.cljs$lang$maxFixedArity = 2;
G__20264.cljs$lang$applyTo = (function (arglist__20269){
var x = cljs.core.first(arglist__20269);
arglist__20269 = cljs.core.next(arglist__20269);
var y = cljs.core.first(arglist__20269);
var more = cljs.core.rest(arglist__20269);
return G__20264__delegate(x,y,more);
});
G__20264.cljs$core$IFn$_invoke$arity$variadic = G__20264__delegate;
return G__20264;
})()
;
_GT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT___1.call(this,x);
case 2:
return _GT___2.call(this,x,y);
default:
var G__20270 = null;
if (arguments.length > 2) {
var G__20271__i = 0, G__20271__a = new Array(arguments.length -  2);
while (G__20271__i < G__20271__a.length) {G__20271__a[G__20271__i] = arguments[G__20271__i + 2]; ++G__20271__i;}
G__20270 = new cljs.core.IndexedSeq(G__20271__a,0);
}
return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__20270);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT_.cljs$lang$maxFixedArity = 2;
_GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
_GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
_GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
_GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT__EQ_ = (function() {
var _GT__EQ_ = null;
var _GT__EQ___1 = (function (x){
return true;
});
var _GT__EQ___2 = (function (x,y){
return (x >= y);
});
var _GT__EQ___3 = (function() { 
var G__20272__delegate = function (x,y,more){
while(true){
if((x >= y)){
if(cljs.core.next(more)){
var G__20273 = y;
var G__20274 = cljs.core.first(more);
var G__20275 = cljs.core.next(more);
x = G__20273;
y = G__20274;
more = G__20275;
continue;
} else {
return (y >= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__20272 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__20276__i = 0, G__20276__a = new Array(arguments.length -  2);
while (G__20276__i < G__20276__a.length) {G__20276__a[G__20276__i] = arguments[G__20276__i + 2]; ++G__20276__i;}
  more = new cljs.core.IndexedSeq(G__20276__a,0);
} 
return G__20272__delegate.call(this,x,y,more);};
G__20272.cljs$lang$maxFixedArity = 2;
G__20272.cljs$lang$applyTo = (function (arglist__20277){
var x = cljs.core.first(arglist__20277);
arglist__20277 = cljs.core.next(arglist__20277);
var y = cljs.core.first(arglist__20277);
var more = cljs.core.rest(arglist__20277);
return G__20272__delegate(x,y,more);
});
G__20272.cljs$core$IFn$_invoke$arity$variadic = G__20272__delegate;
return G__20272;
})()
;
_GT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT__EQ___1.call(this,x);
case 2:
return _GT__EQ___2.call(this,x,y);
default:
var G__20278 = null;
if (arguments.length > 2) {
var G__20279__i = 0, G__20279__a = new Array(arguments.length -  2);
while (G__20279__i < G__20279__a.length) {G__20279__a[G__20279__i] = arguments[G__20279__i + 2]; ++G__20279__i;}
G__20278 = new cljs.core.IndexedSeq(G__20279__a,0);
}
return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__20278);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT__EQ_.cljs$lang$maxFixedArity = 2;
_GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
_GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
_GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
_GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT__EQ_;
})()
;
/**
* Returns a number one less than num.
*/
cljs.core.dec = (function dec(x){
return (x - (1));
});
/**
* Returns the greatest of the nums.
* @param {...*} var_args
*/
cljs.core.max = (function() {
var max = null;
var max__1 = (function (x){
return x;
});
var max__2 = (function (x,y){
var x__17649__auto__ = x;
var y__17650__auto__ = y;
return ((x__17649__auto__ > y__17650__auto__) ? x__17649__auto__ : y__17650__auto__);
});
var max__3 = (function() { 
var G__20280__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(max,(function (){var x__17649__auto__ = x;
var y__17650__auto__ = y;
return ((x__17649__auto__ > y__17650__auto__) ? x__17649__auto__ : y__17650__auto__);
})(),more);
};
var G__20280 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__20281__i = 0, G__20281__a = new Array(arguments.length -  2);
while (G__20281__i < G__20281__a.length) {G__20281__a[G__20281__i] = arguments[G__20281__i + 2]; ++G__20281__i;}
  more = new cljs.core.IndexedSeq(G__20281__a,0);
} 
return G__20280__delegate.call(this,x,y,more);};
G__20280.cljs$lang$maxFixedArity = 2;
G__20280.cljs$lang$applyTo = (function (arglist__20282){
var x = cljs.core.first(arglist__20282);
arglist__20282 = cljs.core.next(arglist__20282);
var y = cljs.core.first(arglist__20282);
var more = cljs.core.rest(arglist__20282);
return G__20280__delegate(x,y,more);
});
G__20280.cljs$core$IFn$_invoke$arity$variadic = G__20280__delegate;
return G__20280;
})()
;
max = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return max__1.call(this,x);
case 2:
return max__2.call(this,x,y);
default:
var G__20283 = null;
if (arguments.length > 2) {
var G__20284__i = 0, G__20284__a = new Array(arguments.length -  2);
while (G__20284__i < G__20284__a.length) {G__20284__a[G__20284__i] = arguments[G__20284__i + 2]; ++G__20284__i;}
G__20283 = new cljs.core.IndexedSeq(G__20284__a,0);
}
return max__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__20283);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max.cljs$lang$maxFixedArity = 2;
max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
max.cljs$core$IFn$_invoke$arity$1 = max__1;
max.cljs$core$IFn$_invoke$arity$2 = max__2;
max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
return max;
})()
;
/**
* Returns the least of the nums.
* @param {...*} var_args
*/
cljs.core.min = (function() {
var min = null;
var min__1 = (function (x){
return x;
});
var min__2 = (function (x,y){
var x__17656__auto__ = x;
var y__17657__auto__ = y;
return ((x__17656__auto__ < y__17657__auto__) ? x__17656__auto__ : y__17657__auto__);
});
var min__3 = (function() { 
var G__20285__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(min,(function (){var x__17656__auto__ = x;
var y__17657__auto__ = y;
return ((x__17656__auto__ < y__17657__auto__) ? x__17656__auto__ : y__17657__auto__);
})(),more);
};
var G__20285 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__20286__i = 0, G__20286__a = new Array(arguments.length -  2);
while (G__20286__i < G__20286__a.length) {G__20286__a[G__20286__i] = arguments[G__20286__i + 2]; ++G__20286__i;}
  more = new cljs.core.IndexedSeq(G__20286__a,0);
} 
return G__20285__delegate.call(this,x,y,more);};
G__20285.cljs$lang$maxFixedArity = 2;
G__20285.cljs$lang$applyTo = (function (arglist__20287){
var x = cljs.core.first(arglist__20287);
arglist__20287 = cljs.core.next(arglist__20287);
var y = cljs.core.first(arglist__20287);
var more = cljs.core.rest(arglist__20287);
return G__20285__delegate(x,y,more);
});
G__20285.cljs$core$IFn$_invoke$arity$variadic = G__20285__delegate;
return G__20285;
})()
;
min = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return min__1.call(this,x);
case 2:
return min__2.call(this,x,y);
default:
var G__20288 = null;
if (arguments.length > 2) {
var G__20289__i = 0, G__20289__a = new Array(arguments.length -  2);
while (G__20289__i < G__20289__a.length) {G__20289__a[G__20289__i] = arguments[G__20289__i + 2]; ++G__20289__i;}
G__20288 = new cljs.core.IndexedSeq(G__20289__a,0);
}
return min__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__20288);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min.cljs$lang$maxFixedArity = 2;
min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
min.cljs$core$IFn$_invoke$arity$1 = min__1;
min.cljs$core$IFn$_invoke$arity$2 = min__2;
min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
return min;
})()
;
cljs.core.byte$ = (function byte$(x){
return x;
});
/**
* Coerce to char
*/
cljs.core.char$ = (function char$(x){
if(typeof x === 'number'){
return String.fromCharCode(x);
} else {
if((typeof x === 'string') && ((x.length === (1)))){
return x;
} else {
throw (new Error("Argument to char must be a character or number"));

}
}
});
cljs.core.short$ = (function short$(x){
return x;
});
cljs.core.float$ = (function float$(x){
return x;
});
cljs.core.double$ = (function double$(x){
return x;
});
cljs.core.unchecked_byte = (function unchecked_byte(x){
return x;
});
cljs.core.unchecked_char = (function unchecked_char(x){
return x;
});
cljs.core.unchecked_short = (function unchecked_short(x){
return x;
});
cljs.core.unchecked_float = (function unchecked_float(x){
return x;
});
cljs.core.unchecked_double = (function unchecked_double(x){
return x;
});
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add = (function() {
var unchecked_add = null;
var unchecked_add__0 = (function (){
return (0);
});
var unchecked_add__1 = (function (x){
return x;
});
var unchecked_add__2 = (function (x,y){
return (x + y);
});
var unchecked_add__3 = (function() { 
var G__20290__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add,(x + y),more);
};
var G__20290 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__20291__i = 0, G__20291__a = new Array(arguments.length -  2);
while (G__20291__i < G__20291__a.length) {G__20291__a[G__20291__i] = arguments[G__20291__i + 2]; ++G__20291__i;}
  more = new cljs.core.IndexedSeq(G__20291__a,0);
} 
return G__20290__delegate.call(this,x,y,more);};
G__20290.cljs$lang$maxFixedArity = 2;
G__20290.cljs$lang$applyTo = (function (arglist__20292){
var x = cljs.core.first(arglist__20292);
arglist__20292 = cljs.core.next(arglist__20292);
var y = cljs.core.first(arglist__20292);
var more = cljs.core.rest(arglist__20292);
return G__20290__delegate(x,y,more);
});
G__20290.cljs$core$IFn$_invoke$arity$variadic = G__20290__delegate;
return G__20290;
})()
;
unchecked_add = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add__0.call(this);
case 1:
return unchecked_add__1.call(this,x);
case 2:
return unchecked_add__2.call(this,x,y);
default:
var G__20293 = null;
if (arguments.length > 2) {
var G__20294__i = 0, G__20294__a = new Array(arguments.length -  2);
while (G__20294__i < G__20294__a.length) {G__20294__a[G__20294__i] = arguments[G__20294__i + 2]; ++G__20294__i;}
G__20293 = new cljs.core.IndexedSeq(G__20294__a,0);
}
return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__20293);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add.cljs$lang$maxFixedArity = 2;
unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add_int = (function() {
var unchecked_add_int = null;
var unchecked_add_int__0 = (function (){
return (0);
});
var unchecked_add_int__1 = (function (x){
return x;
});
var unchecked_add_int__2 = (function (x,y){
return (x + y);
});
var unchecked_add_int__3 = (function() { 
var G__20295__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add_int,(x + y),more);
};
var G__20295 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__20296__i = 0, G__20296__a = new Array(arguments.length -  2);
while (G__20296__i < G__20296__a.length) {G__20296__a[G__20296__i] = arguments[G__20296__i + 2]; ++G__20296__i;}
  more = new cljs.core.IndexedSeq(G__20296__a,0);
} 
return G__20295__delegate.call(this,x,y,more);};
G__20295.cljs$lang$maxFixedArity = 2;
G__20295.cljs$lang$applyTo = (function (arglist__20297){
var x = cljs.core.first(arglist__20297);
arglist__20297 = cljs.core.next(arglist__20297);
var y = cljs.core.first(arglist__20297);
var more = cljs.core.rest(arglist__20297);
return G__20295__delegate(x,y,more);
});
G__20295.cljs$core$IFn$_invoke$arity$variadic = G__20295__delegate;
return G__20295;
})()
;
unchecked_add_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add_int__0.call(this);
case 1:
return unchecked_add_int__1.call(this,x);
case 2:
return unchecked_add_int__2.call(this,x,y);
default:
var G__20298 = null;
if (arguments.length > 2) {
var G__20299__i = 0, G__20299__a = new Array(arguments.length -  2);
while (G__20299__i < G__20299__a.length) {G__20299__a[G__20299__i] = arguments[G__20299__i + 2]; ++G__20299__i;}
G__20298 = new cljs.core.IndexedSeq(G__20299__a,0);
}
return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__20298);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add_int.cljs$lang$maxFixedArity = 2;
unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add_int;
})()
;
cljs.core.unchecked_dec = (function unchecked_dec(x){
return (x - (1));
});
cljs.core.unchecked_dec_int = (function unchecked_dec_int(x){
return (x - (1));
});
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core.unchecked_divide_int = (function() {
var unchecked_divide_int = null;
var unchecked_divide_int__1 = (function (x){
return unchecked_divide_int.cljs$core$IFn$_invoke$arity$2((1),x);
});
var unchecked_divide_int__2 = (function (x,y){
return (x / y);
});
var unchecked_divide_int__3 = (function() { 
var G__20304__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_divide_int,unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__20304 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__20305__i = 0, G__20305__a = new Array(arguments.length -  2);
while (G__20305__i < G__20305__a.length) {G__20305__a[G__20305__i] = arguments[G__20305__i + 2]; ++G__20305__i;}
  more = new cljs.core.IndexedSeq(G__20305__a,0);
} 
return G__20304__delegate.call(this,x,y,more);};
G__20304.cljs$lang$maxFixedArity = 2;
G__20304.cljs$lang$applyTo = (function (arglist__20306){
var x = cljs.core.first(arglist__20306);
arglist__20306 = cljs.core.next(arglist__20306);
var y = cljs.core.first(arglist__20306);
var more = cljs.core.rest(arglist__20306);
return G__20304__delegate(x,y,more);
});
G__20304.cljs$core$IFn$_invoke$arity$variadic = G__20304__delegate;
return G__20304;
})()
;
unchecked_divide_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_divide_int__1.call(this,x);
case 2:
return unchecked_divide_int__2.call(this,x,y);
default:
var G__20307 = null;
if (arguments.length > 2) {
var G__20308__i = 0, G__20308__a = new Array(arguments.length -  2);
while (G__20308__i < G__20308__a.length) {G__20308__a[G__20308__i] = arguments[G__20308__i + 2]; ++G__20308__i;}
G__20307 = new cljs.core.IndexedSeq(G__20308__a,0);
}
return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__20307);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_divide_int.cljs$lang$maxFixedArity = 2;
unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_divide_int;
})()
;
cljs.core.unchecked_inc = (function unchecked_inc(x){
return (x + (1));
});
cljs.core.unchecked_inc_int = (function unchecked_inc_int(x){
return (x + (1));
});
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply = (function() {
var unchecked_multiply = null;
var unchecked_multiply__0 = (function (){
return (1);
});
var unchecked_multiply__1 = (function (x){
return x;
});
var unchecked_multiply__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply__3 = (function() { 
var G__20309__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply,(x * y),more);
};
var G__20309 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__20310__i = 0, G__20310__a = new Array(arguments.length -  2);
while (G__20310__i < G__20310__a.length) {G__20310__a[G__20310__i] = arguments[G__20310__i + 2]; ++G__20310__i;}
  more = new cljs.core.IndexedSeq(G__20310__a,0);
} 
return G__20309__delegate.call(this,x,y,more);};
G__20309.cljs$lang$maxFixedArity = 2;
G__20309.cljs$lang$applyTo = (function (arglist__20311){
var x = cljs.core.first(arglist__20311);
arglist__20311 = cljs.core.next(arglist__20311);
var y = cljs.core.first(arglist__20311);
var more = cljs.core.rest(arglist__20311);
return G__20309__delegate(x,y,more);
});
G__20309.cljs$core$IFn$_invoke$arity$variadic = G__20309__delegate;
return G__20309;
})()
;
unchecked_multiply = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply__0.call(this);
case 1:
return unchecked_multiply__1.call(this,x);
case 2:
return unchecked_multiply__2.call(this,x,y);
default:
var G__20312 = null;
if (arguments.length > 2) {
var G__20313__i = 0, G__20313__a = new Array(arguments.length -  2);
while (G__20313__i < G__20313__a.length) {G__20313__a[G__20313__i] = arguments[G__20313__i + 2]; ++G__20313__i;}
G__20312 = new cljs.core.IndexedSeq(G__20313__a,0);
}
return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__20312);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply.cljs$lang$maxFixedArity = 2;
unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply_int = (function() {
var unchecked_multiply_int = null;
var unchecked_multiply_int__0 = (function (){
return (1);
});
var unchecked_multiply_int__1 = (function (x){
return x;
});
var unchecked_multiply_int__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply_int__3 = (function() { 
var G__20314__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply_int,(x * y),more);
};
var G__20314 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__20315__i = 0, G__20315__a = new Array(arguments.length -  2);
while (G__20315__i < G__20315__a.length) {G__20315__a[G__20315__i] = arguments[G__20315__i + 2]; ++G__20315__i;}
  more = new cljs.core.IndexedSeq(G__20315__a,0);
} 
return G__20314__delegate.call(this,x,y,more);};
G__20314.cljs$lang$maxFixedArity = 2;
G__20314.cljs$lang$applyTo = (function (arglist__20316){
var x = cljs.core.first(arglist__20316);
arglist__20316 = cljs.core.next(arglist__20316);
var y = cljs.core.first(arglist__20316);
var more = cljs.core.rest(arglist__20316);
return G__20314__delegate(x,y,more);
});
G__20314.cljs$core$IFn$_invoke$arity$variadic = G__20314__delegate;
return G__20314;
})()
;
unchecked_multiply_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply_int__0.call(this);
case 1:
return unchecked_multiply_int__1.call(this,x);
case 2:
return unchecked_multiply_int__2.call(this,x,y);
default:
var G__20317 = null;
if (arguments.length > 2) {
var G__20318__i = 0, G__20318__a = new Array(arguments.length -  2);
while (G__20318__i < G__20318__a.length) {G__20318__a[G__20318__i] = arguments[G__20318__i + 2]; ++G__20318__i;}
G__20317 = new cljs.core.IndexedSeq(G__20318__a,0);
}
return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__20317);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply_int;
})()
;
cljs.core.unchecked_negate = (function unchecked_negate(x){
return (- x);
});
cljs.core.unchecked_negate_int = (function unchecked_negate_int(x){
return (- x);
});
cljs.core.unchecked_remainder_int = (function unchecked_remainder_int(x,n){
var G__20321 = x;
var G__20322 = n;
return (cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__20321,G__20322) : cljs.core.mod.call(null,G__20321,G__20322));
});
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract = (function() {
var unchecked_subtract = null;
var unchecked_subtract__1 = (function (x){
return (- x);
});
var unchecked_subtract__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract__3 = (function() { 
var G__20323__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract,(x - y),more);
};
var G__20323 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__20324__i = 0, G__20324__a = new Array(arguments.length -  2);
while (G__20324__i < G__20324__a.length) {G__20324__a[G__20324__i] = arguments[G__20324__i + 2]; ++G__20324__i;}
  more = new cljs.core.IndexedSeq(G__20324__a,0);
} 
return G__20323__delegate.call(this,x,y,more);};
G__20323.cljs$lang$maxFixedArity = 2;
G__20323.cljs$lang$applyTo = (function (arglist__20325){
var x = cljs.core.first(arglist__20325);
arglist__20325 = cljs.core.next(arglist__20325);
var y = cljs.core.first(arglist__20325);
var more = cljs.core.rest(arglist__20325);
return G__20323__delegate(x,y,more);
});
G__20323.cljs$core$IFn$_invoke$arity$variadic = G__20323__delegate;
return G__20323;
})()
;
unchecked_subtract = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract__1.call(this,x);
case 2:
return unchecked_subtract__2.call(this,x,y);
default:
var G__20326 = null;
if (arguments.length > 2) {
var G__20327__i = 0, G__20327__a = new Array(arguments.length -  2);
while (G__20327__i < G__20327__a.length) {G__20327__a[G__20327__i] = arguments[G__20327__i + 2]; ++G__20327__i;}
G__20326 = new cljs.core.IndexedSeq(G__20327__a,0);
}
return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__20326);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract.cljs$lang$maxFixedArity = 2;
unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract_int = (function() {
var unchecked_subtract_int = null;
var unchecked_subtract_int__1 = (function (x){
return (- x);
});
var unchecked_subtract_int__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract_int__3 = (function() { 
var G__20328__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract_int,(x - y),more);
};
var G__20328 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__20329__i = 0, G__20329__a = new Array(arguments.length -  2);
while (G__20329__i < G__20329__a.length) {G__20329__a[G__20329__i] = arguments[G__20329__i + 2]; ++G__20329__i;}
  more = new cljs.core.IndexedSeq(G__20329__a,0);
} 
return G__20328__delegate.call(this,x,y,more);};
G__20328.cljs$lang$maxFixedArity = 2;
G__20328.cljs$lang$applyTo = (function (arglist__20330){
var x = cljs.core.first(arglist__20330);
arglist__20330 = cljs.core.next(arglist__20330);
var y = cljs.core.first(arglist__20330);
var more = cljs.core.rest(arglist__20330);
return G__20328__delegate(x,y,more);
});
G__20328.cljs$core$IFn$_invoke$arity$variadic = G__20328__delegate;
return G__20328;
})()
;
unchecked_subtract_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract_int__1.call(this,x);
case 2:
return unchecked_subtract_int__2.call(this,x,y);
default:
var G__20331 = null;
if (arguments.length > 2) {
var G__20332__i = 0, G__20332__a = new Array(arguments.length -  2);
while (G__20332__i < G__20332__a.length) {G__20332__a[G__20332__i] = arguments[G__20332__i + 2]; ++G__20332__i;}
G__20331 = new cljs.core.IndexedSeq(G__20332__a,0);
}
return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__20331);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract_int;
})()
;
cljs.core.fix = (function fix(q){
if((q >= (0))){
var G__20335 = q;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__20335) : Math.floor.call(null,G__20335));
} else {
var G__20336 = q;
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__20336) : Math.ceil.call(null,G__20336));
}
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.int$ = (function int$(x){
return (x | (0));
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.unchecked_int = (function unchecked_int(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.long$ = (function long$(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.unchecked_long = (function unchecked_long(x){
return cljs.core.fix(x);
});
cljs.core.booleans = (function booleans(x){
return x;
});
cljs.core.bytes = (function bytes(x){
return x;
});
cljs.core.chars = (function chars(x){
return x;
});
cljs.core.shorts = (function shorts(x){
return x;
});
cljs.core.ints = (function ints(x){
return x;
});
cljs.core.floats = (function floats(x){
return x;
});
cljs.core.doubles = (function doubles(x){
return x;
});
cljs.core.longs = (function longs(x){
return x;
});
/**
* Modulus of num and div with original javascript behavior. i.e. bug for negative numbers
*/
cljs.core.js_mod = (function js_mod(n,d){
return (n % d);
});
/**
* Modulus of num and div. Truncates toward negative infinity.
*/
cljs.core.mod = (function mod(n,d){
return (((n % d) + d) % d);
});
/**
* quot[ient] of dividing numerator by denominator.
*/
cljs.core.quot = (function quot(n,d){
var rem = (n % d);
return cljs.core.fix(((n - rem) / d));
});
/**
* remainder of dividing numerator by denominator.
*/
cljs.core.rem = (function rem(n,d){
var q = cljs.core.quot(n,d);
return (n - (d * q));
});
/**
* Bitwise exclusive or
* @param {...*} var_args
*/
cljs.core.bit_xor = (function() {
var bit_xor = null;
var bit_xor__2 = (function (x,y){
return (x ^ y);
});
var bit_xor__3 = (function() { 
var G__20337__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_xor,(x ^ y),more);
};
var G__20337 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__20338__i = 0, G__20338__a = new Array(arguments.length -  2);
while (G__20338__i < G__20338__a.length) {G__20338__a[G__20338__i] = arguments[G__20338__i + 2]; ++G__20338__i;}
  more = new cljs.core.IndexedSeq(G__20338__a,0);
} 
return G__20337__delegate.call(this,x,y,more);};
G__20337.cljs$lang$maxFixedArity = 2;
G__20337.cljs$lang$applyTo = (function (arglist__20339){
var x = cljs.core.first(arglist__20339);
arglist__20339 = cljs.core.next(arglist__20339);
var y = cljs.core.first(arglist__20339);
var more = cljs.core.rest(arglist__20339);
return G__20337__delegate(x,y,more);
});
G__20337.cljs$core$IFn$_invoke$arity$variadic = G__20337__delegate;
return G__20337;
})()
;
bit_xor = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_xor__2.call(this,x,y);
default:
var G__20340 = null;
if (arguments.length > 2) {
var G__20341__i = 0, G__20341__a = new Array(arguments.length -  2);
while (G__20341__i < G__20341__a.length) {G__20341__a[G__20341__i] = arguments[G__20341__i + 2]; ++G__20341__i;}
G__20340 = new cljs.core.IndexedSeq(G__20341__a,0);
}
return bit_xor__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__20340);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_xor.cljs$lang$maxFixedArity = 2;
bit_xor.cljs$lang$applyTo = bit_xor__3.cljs$lang$applyTo;
bit_xor.cljs$core$IFn$_invoke$arity$2 = bit_xor__2;
bit_xor.cljs$core$IFn$_invoke$arity$variadic = bit_xor__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_xor;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and = (function() {
var bit_and = null;
var bit_and__2 = (function (x,y){
return (x & y);
});
var bit_and__3 = (function() { 
var G__20342__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and,(x & y),more);
};
var G__20342 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__20343__i = 0, G__20343__a = new Array(arguments.length -  2);
while (G__20343__i < G__20343__a.length) {G__20343__a[G__20343__i] = arguments[G__20343__i + 2]; ++G__20343__i;}
  more = new cljs.core.IndexedSeq(G__20343__a,0);
} 
return G__20342__delegate.call(this,x,y,more);};
G__20342.cljs$lang$maxFixedArity = 2;
G__20342.cljs$lang$applyTo = (function (arglist__20344){
var x = cljs.core.first(arglist__20344);
arglist__20344 = cljs.core.next(arglist__20344);
var y = cljs.core.first(arglist__20344);
var more = cljs.core.rest(arglist__20344);
return G__20342__delegate(x,y,more);
});
G__20342.cljs$core$IFn$_invoke$arity$variadic = G__20342__delegate;
return G__20342;
})()
;
bit_and = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and__2.call(this,x,y);
default:
var G__20345 = null;
if (arguments.length > 2) {
var G__20346__i = 0, G__20346__a = new Array(arguments.length -  2);
while (G__20346__i < G__20346__a.length) {G__20346__a[G__20346__i] = arguments[G__20346__i + 2]; ++G__20346__i;}
G__20345 = new cljs.core.IndexedSeq(G__20346__a,0);
}
return bit_and__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__20345);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and.cljs$lang$maxFixedArity = 2;
bit_and.cljs$lang$applyTo = bit_and__3.cljs$lang$applyTo;
bit_and.cljs$core$IFn$_invoke$arity$2 = bit_and__2;
bit_and.cljs$core$IFn$_invoke$arity$variadic = bit_and__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and;
})()
;
/**
* Bitwise or
* @param {...*} var_args
*/
cljs.core.bit_or = (function() {
var bit_or = null;
var bit_or__2 = (function (x,y){
return (x | y);
});
var bit_or__3 = (function() { 
var G__20347__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_or,(x | y),more);
};
var G__20347 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__20348__i = 0, G__20348__a = new Array(arguments.length -  2);
while (G__20348__i < G__20348__a.length) {G__20348__a[G__20348__i] = arguments[G__20348__i + 2]; ++G__20348__i;}
  more = new cljs.core.IndexedSeq(G__20348__a,0);
} 
return G__20347__delegate.call(this,x,y,more);};
G__20347.cljs$lang$maxFixedArity = 2;
G__20347.cljs$lang$applyTo = (function (arglist__20349){
var x = cljs.core.first(arglist__20349);
arglist__20349 = cljs.core.next(arglist__20349);
var y = cljs.core.first(arglist__20349);
var more = cljs.core.rest(arglist__20349);
return G__20347__delegate(x,y,more);
});
G__20347.cljs$core$IFn$_invoke$arity$variadic = G__20347__delegate;
return G__20347;
})()
;
bit_or = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_or__2.call(this,x,y);
default:
var G__20350 = null;
if (arguments.length > 2) {
var G__20351__i = 0, G__20351__a = new Array(arguments.length -  2);
while (G__20351__i < G__20351__a.length) {G__20351__a[G__20351__i] = arguments[G__20351__i + 2]; ++G__20351__i;}
G__20350 = new cljs.core.IndexedSeq(G__20351__a,0);
}
return bit_or__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__20350);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_or.cljs$lang$maxFixedArity = 2;
bit_or.cljs$lang$applyTo = bit_or__3.cljs$lang$applyTo;
bit_or.cljs$core$IFn$_invoke$arity$2 = bit_or__2;
bit_or.cljs$core$IFn$_invoke$arity$variadic = bit_or__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_or;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and_not = (function() {
var bit_and_not = null;
var bit_and_not__2 = (function (x,y){
return (x & ~y);
});
var bit_and_not__3 = (function() { 
var G__20352__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and_not,(x & ~y),more);
};
var G__20352 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__20353__i = 0, G__20353__a = new Array(arguments.length -  2);
while (G__20353__i < G__20353__a.length) {G__20353__a[G__20353__i] = arguments[G__20353__i + 2]; ++G__20353__i;}
  more = new cljs.core.IndexedSeq(G__20353__a,0);
} 
return G__20352__delegate.call(this,x,y,more);};
G__20352.cljs$lang$maxFixedArity = 2;
G__20352.cljs$lang$applyTo = (function (arglist__20354){
var x = cljs.core.first(arglist__20354);
arglist__20354 = cljs.core.next(arglist__20354);
var y = cljs.core.first(arglist__20354);
var more = cljs.core.rest(arglist__20354);
return G__20352__delegate(x,y,more);
});
G__20352.cljs$core$IFn$_invoke$arity$variadic = G__20352__delegate;
return G__20352;
})()
;
bit_and_not = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and_not__2.call(this,x,y);
default:
var G__20355 = null;
if (arguments.length > 2) {
var G__20356__i = 0, G__20356__a = new Array(arguments.length -  2);
while (G__20356__i < G__20356__a.length) {G__20356__a[G__20356__i] = arguments[G__20356__i + 2]; ++G__20356__i;}
G__20355 = new cljs.core.IndexedSeq(G__20356__a,0);
}
return bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__20355);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and_not.cljs$lang$maxFixedArity = 2;
bit_and_not.cljs$lang$applyTo = bit_and_not__3.cljs$lang$applyTo;
bit_and_not.cljs$core$IFn$_invoke$arity$2 = bit_and_not__2;
bit_and_not.cljs$core$IFn$_invoke$arity$variadic = bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and_not;
})()
;
/**
* Clear bit at index n
*/
cljs.core.bit_clear = (function bit_clear(x,n){
return (x & ~(1 << n));
});
/**
* Flip bit at index n
*/
cljs.core.bit_flip = (function bit_flip(x,n){
return (x ^ (1 << n));
});
/**
* Bitwise complement
*/
cljs.core.bit_not = (function bit_not(x){
return (~ x);
});
/**
* Set bit at index n
*/
cljs.core.bit_set = (function bit_set(x,n){
return (x | (1 << n));
});
/**
* Test bit at index n
*/
cljs.core.bit_test = (function bit_test(x,n){
return ((x & (1 << n)) != 0);
});
/**
* Bitwise shift left
*/
cljs.core.bit_shift_left = (function bit_shift_left(x,n){
return (x << n);
});
/**
* Bitwise shift right
*/
cljs.core.bit_shift_right = (function bit_shift_right(x,n){
return (x >> n);
});
/**
* DEPRECATED: Bitwise shift right with zero fill
*/
cljs.core.bit_shift_right_zero_fill = (function bit_shift_right_zero_fill(x,n){
return (x >>> n);
});
/**
* Bitwise shift right with zero fill
*/
cljs.core.unsigned_bit_shift_right = (function unsigned_bit_shift_right(x,n){
return (x >>> n);
});
/**
* Counts the number of bits set in n
*/
cljs.core.bit_count = (function bit_count(v){
var v__$1 = (v - ((v >> (1)) & (1431655765)));
var v__$2 = ((v__$1 & (858993459)) + ((v__$1 >> (2)) & (858993459)));
return ((((v__$2 + (v__$2 >> (4))) & (252645135)) * (16843009)) >> (24));
});
/**
* Returns non-nil if nums all have the equivalent
* value, otherwise false. Behavior on non nums is
* undefined.
* @param {...*} var_args
*/
cljs.core._EQ__EQ_ = (function() {
var _EQ__EQ_ = null;
var _EQ__EQ___1 = (function (x){
return true;
});
var _EQ__EQ___2 = (function (x,y){
return cljs.core._equiv(x,y);
});
var _EQ__EQ___3 = (function() { 
var G__20361__delegate = function (x,y,more){
while(true){
if(_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__20362 = y;
var G__20363 = cljs.core.first(more);
var G__20364 = cljs.core.next(more);
x = G__20362;
y = G__20363;
more = G__20364;
continue;
} else {
return _EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__20361 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__20365__i = 0, G__20365__a = new Array(arguments.length -  2);
while (G__20365__i < G__20365__a.length) {G__20365__a[G__20365__i] = arguments[G__20365__i + 2]; ++G__20365__i;}
  more = new cljs.core.IndexedSeq(G__20365__a,0);
} 
return G__20361__delegate.call(this,x,y,more);};
G__20361.cljs$lang$maxFixedArity = 2;
G__20361.cljs$lang$applyTo = (function (arglist__20366){
var x = cljs.core.first(arglist__20366);
arglist__20366 = cljs.core.next(arglist__20366);
var y = cljs.core.first(arglist__20366);
var more = cljs.core.rest(arglist__20366);
return G__20361__delegate(x,y,more);
});
G__20361.cljs$core$IFn$_invoke$arity$variadic = G__20361__delegate;
return G__20361;
})()
;
_EQ__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ__EQ___1.call(this,x);
case 2:
return _EQ__EQ___2.call(this,x,y);
default:
var G__20367 = null;
if (arguments.length > 2) {
var G__20368__i = 0, G__20368__a = new Array(arguments.length -  2);
while (G__20368__i < G__20368__a.length) {G__20368__a[G__20368__i] = arguments[G__20368__i + 2]; ++G__20368__i;}
G__20367 = new cljs.core.IndexedSeq(G__20368__a,0);
}
return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__20367);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ__EQ_.cljs$lang$maxFixedArity = 2;
_EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ__EQ_;
})()
;
/**
* Returns true if num is greater than zero, else false
*/
cljs.core.pos_QMARK_ = (function pos_QMARK_(n){
return (n > (0));
});
cljs.core.zero_QMARK_ = (function zero_QMARK_(n){
return (n === (0));
});
/**
* Returns true if num is less than zero, else false
*/
cljs.core.neg_QMARK_ = (function neg_QMARK_(x){
return (x < (0));
});
/**
* Returns the nth next of coll, (seq coll) when n is 0.
*/
cljs.core.nthnext = (function nthnext(coll,n){
var n__$1 = n;
var xs = cljs.core.seq(coll);
while(true){
if((xs) && ((n__$1 > (0)))){
var G__20369 = (n__$1 - (1));
var G__20370 = cljs.core.next(xs);
n__$1 = G__20369;
xs = G__20370;
continue;
} else {
return xs;
}
break;
}
});
/**
* With no args, returns the empty string. With one arg x, returns
* x.toString().  (str nil) returns the empty string. With more than
* one arg, returns the concatenation of the str values of the args.
* @param {...*} var_args
*/
cljs.core.str = (function() {
var str = null;
var str__0 = (function (){
return "";
});
var str__1 = (function (x){
if((x == null)){
return "";
} else {
var G__20374 = x;
return goog.string.buildString(G__20374);
}
});
var str__2 = (function() { 
var G__20375__delegate = function (x,ys){
var sb = (new goog.string.StringBuffer(str.cljs$core$IFn$_invoke$arity$1(x)));
var more = ys;
while(true){
if(cljs.core.truth_(more)){
var G__20376 = sb.append(str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
var G__20377 = cljs.core.next(more);
sb = G__20376;
more = G__20377;
continue;
} else {
return sb.toString();
}
break;
}
};
var G__20375 = function (x,var_args){
var ys = null;
if (arguments.length > 1) {
var G__20378__i = 0, G__20378__a = new Array(arguments.length -  1);
while (G__20378__i < G__20378__a.length) {G__20378__a[G__20378__i] = arguments[G__20378__i + 1]; ++G__20378__i;}
  ys = new cljs.core.IndexedSeq(G__20378__a,0);
} 
return G__20375__delegate.call(this,x,ys);};
G__20375.cljs$lang$maxFixedArity = 1;
G__20375.cljs$lang$applyTo = (function (arglist__20379){
var x = cljs.core.first(arglist__20379);
var ys = cljs.core.rest(arglist__20379);
return G__20375__delegate(x,ys);
});
G__20375.cljs$core$IFn$_invoke$arity$variadic = G__20375__delegate;
return G__20375;
})()
;
str = function(x,var_args){
var ys = var_args;
switch(arguments.length){
case 0:
return str__0.call(this);
case 1:
return str__1.call(this,x);
default:
var G__20380 = null;
if (arguments.length > 1) {
var G__20381__i = 0, G__20381__a = new Array(arguments.length -  1);
while (G__20381__i < G__20381__a.length) {G__20381__a[G__20381__i] = arguments[G__20381__i + 1]; ++G__20381__i;}
G__20380 = new cljs.core.IndexedSeq(G__20381__a,0);
}
return str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__20380);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
str.cljs$lang$maxFixedArity = 1;
str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
str.cljs$core$IFn$_invoke$arity$0 = str__0;
str.cljs$core$IFn$_invoke$arity$1 = str__1;
str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
return str;
})()
;
/**
* Returns the substring of s beginning at start inclusive, and ending
* at end (defaults to length of string), exclusive.
*/
cljs.core.subs = (function() {
var subs = null;
var subs__2 = (function (s,start){
return s.substring(start);
});
var subs__3 = (function (s,start,end){
return s.substring(start,end);
});
subs = function(s,start,end){
switch(arguments.length){
case 2:
return subs__2.call(this,s,start);
case 3:
return subs__3.call(this,s,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
return subs;
})()
;

/**
* Assumes x is sequential. Returns true if x equals y, otherwise
* returns false.
*/
cljs.core.equiv_sequential = (function equiv_sequential(x,y){
return cljs.core.boolean$(((cljs.core.sequential_QMARK_(y))?(((cljs.core.counted_QMARK_(x)) && (cljs.core.counted_QMARK_(y)) && (!((cljs.core.count(x) === cljs.core.count(y)))))?false:(function (){var xs = cljs.core.seq(x);
var ys = cljs.core.seq(y);
while(true){
if((xs == null)){
return (ys == null);
} else {
if((ys == null)){
return false;
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs),cljs.core.first(ys))){
var G__20382 = cljs.core.next(xs);
var G__20383 = cljs.core.next(ys);
xs = G__20382;
ys = G__20383;
continue;
} else {
return false;

}
}
}
break;
}
})()):null));
});
cljs.core.hash_coll = (function hash_coll(coll){
if(cljs.core.seq(coll)){
var res = cljs.core.hash(cljs.core.first(coll));
var s = cljs.core.next(coll);
while(true){
if((s == null)){
return res;
} else {
var G__20384 = cljs.core.hash_combine(res,cljs.core.hash(cljs.core.first(s)));
var G__20385 = cljs.core.next(s);
res = G__20384;
s = G__20385;
continue;
}
break;
}
} else {
return (0);
}
});

cljs.core.hash_imap = (function hash_imap(m){
var h = (0);
var s = cljs.core.seq(m);
while(true){
if(s){
var e = cljs.core.first(s);
var G__20390 = ((h + (cljs.core.hash((function (){var G__20388 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__20388) : cljs.core.key.call(null,G__20388));
})()) ^ cljs.core.hash((function (){var G__20389 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__20389) : cljs.core.val.call(null,G__20389));
})()))) % (4503599627370496));
var G__20391 = cljs.core.next(s);
h = G__20390;
s = G__20391;
continue;
} else {
return h;
}
break;
}
});
cljs.core.hash_iset = (function hash_iset(s){
var h = (0);
var s__$1 = cljs.core.seq(s);
while(true){
if(s__$1){
var e = cljs.core.first(s__$1);
var G__20392 = ((h + cljs.core.hash(e)) % (4503599627370496));
var G__20393 = cljs.core.next(s__$1);
h = G__20392;
s__$1 = G__20393;
continue;
} else {
return h;
}
break;
}
});


/**
* Takes a JavaScript object and a map of names to functions and
* attaches said functions as methods on the object.  Any references to
* JavaScript's implicit this (via the this-as macro) will resolve to the
* object that the function is attached.
*/
cljs.core.extend_object_BANG_ = (function extend_object_BANG_(obj,fn_map){
var seq__20404_20414 = cljs.core.seq(fn_map);
var chunk__20405_20415 = null;
var count__20406_20416 = (0);
var i__20407_20417 = (0);
while(true){
if((i__20407_20417 < count__20406_20416)){
var vec__20408_20418 = chunk__20405_20415.cljs$core$IIndexed$_nth$arity$2(null,i__20407_20417);
var key_name_20419 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20408_20418,(0),null);
var f_20420 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20408_20418,(1),null);
var str_name_20421 = (function (){var G__20409 = key_name_20419;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__20409) : cljs.core.name.call(null,G__20409));
})();
(obj[str_name_20421] = f_20420);

var G__20422 = seq__20404_20414;
var G__20423 = chunk__20405_20415;
var G__20424 = count__20406_20416;
var G__20425 = (i__20407_20417 + (1));
seq__20404_20414 = G__20422;
chunk__20405_20415 = G__20423;
count__20406_20416 = G__20424;
i__20407_20417 = G__20425;
continue;
} else {
var temp__4126__auto___20426 = cljs.core.seq(seq__20404_20414);
if(temp__4126__auto___20426){
var seq__20404_20427__$1 = temp__4126__auto___20426;
if(cljs.core.chunked_seq_QMARK_(seq__20404_20427__$1)){
var c__18119__auto___20428 = (function (){var G__20410 = seq__20404_20427__$1;
return (cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__20410) : cljs.core.chunk_first.call(null,G__20410));
})();
var G__20429 = (function (){var G__20411 = seq__20404_20427__$1;
return (cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__20411) : cljs.core.chunk_rest.call(null,G__20411));
})();
var G__20430 = c__18119__auto___20428;
var G__20431 = cljs.core.count(c__18119__auto___20428);
var G__20432 = (0);
seq__20404_20414 = G__20429;
chunk__20405_20415 = G__20430;
count__20406_20416 = G__20431;
i__20407_20417 = G__20432;
continue;
} else {
var vec__20412_20433 = cljs.core.first(seq__20404_20427__$1);
var key_name_20434 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20412_20433,(0),null);
var f_20435 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20412_20433,(1),null);
var str_name_20436 = (function (){var G__20413 = key_name_20434;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__20413) : cljs.core.name.call(null,G__20413));
})();
(obj[str_name_20436] = f_20435);

var G__20437 = cljs.core.next(seq__20404_20427__$1);
var G__20438 = null;
var G__20439 = (0);
var G__20440 = (0);
seq__20404_20414 = G__20437;
chunk__20405_20415 = G__20438;
count__20406_20416 = G__20439;
i__20407_20417 = G__20440;
continue;
}
} else {
}
}
break;
}

return obj;
});

/**
* @constructor
*/
cljs.core.List = (function (meta,first,rest,count,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.count = count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65937646;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.List.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.List.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.List(self__.meta,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return null;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._rest(coll__$1);
});

cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__17753__auto__ = self__.__hash;
if(!((h__17753__auto__ == null))){
return h__17753__auto__;
} else {
var h__17753__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__17753__auto____$1;

return h__17753__auto____$1;
}
});

cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(meta__$1,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,coll__$1,(self__.count + (1)),null));
});

cljs.core.List.cljs$lang$type = true;

cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";

cljs.core.List.cljs$lang$ctorPrWriter = (function (this__17919__auto__,writer__17920__auto__,opt__17921__auto__){
return cljs.core._write(writer__17920__auto__,"cljs.core/List");
});

cljs.core.__GT_List = (function __GT_List(meta,first,rest,count,__hash){
return (new cljs.core.List(meta,first,rest,count,__hash));
});

(cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18310__auto__ = this;
return cljs.core.es6_iterator(this__18310__auto__);
}));

/**
* @constructor
*/
cljs.core.EmptyList = (function (meta){
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 65937614;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.EmptyList.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.EmptyList.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.EmptyList(self__.meta));
});

cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
throw (new Error("Can't pop empty list"));
});

cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.empty_ordered_hash;
});

cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.EmptyList(meta__$1));
});

cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,null,(1),null));
});

cljs.core.EmptyList.cljs$lang$type = true;

cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";

cljs.core.EmptyList.cljs$lang$ctorPrWriter = (function (this__17919__auto__,writer__17920__auto__,opt__17921__auto__){
return cljs.core._write(writer__17920__auto__,"cljs.core/EmptyList");
});

cljs.core.__GT_EmptyList = (function __GT_EmptyList(meta){
return (new cljs.core.EmptyList(meta));
});

cljs.core.List.EMPTY = (new cljs.core.EmptyList(null));
(cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18310__auto__ = this;
return cljs.core.es6_iterator(this__18310__auto__);
}));
cljs.core.reversible_QMARK_ = (function reversible_QMARK_(coll){
var G__20442 = coll;
if(G__20442){
var bit__18013__auto__ = (G__20442.cljs$lang$protocol_mask$partition0$ & (134217728));
if((bit__18013__auto__) || (G__20442.cljs$core$IReversible$)){
return true;
} else {
if((!G__20442.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__20442);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__20442);
}
});
cljs.core.rseq = (function rseq(coll){
return cljs.core._rseq(coll);
});
/**
* Returns a seq of the items in coll in reverse order. Not lazy.
*/
cljs.core.reverse = (function reverse(coll){
if(cljs.core.reversible_QMARK_(coll)){
return cljs.core.rseq(coll);
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,coll);
}
});
/**
* @param {...*} var_args
*/
cljs.core.list = (function() { 
var list__delegate = function (xs){
var arr = ((((xs instanceof cljs.core.IndexedSeq)) && ((xs.i === (0))))?xs.arr:(function (){var arr = [];
var xs__$1 = xs;
while(true){
if(!((xs__$1 == null))){
arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));

var G__20443 = xs__$1.cljs$core$INext$_next$arity$1(null);
xs__$1 = G__20443;
continue;
} else {
return arr;
}
break;
}
})());
var i = arr.length;
var r = cljs.core.List.EMPTY;
while(true){
if((i > (0))){
var G__20444 = (i - (1));
var G__20445 = r.cljs$core$ICollection$_conj$arity$2(null,(arr[(i - (1))]));
i = G__20444;
r = G__20445;
continue;
} else {
return r;
}
break;
}
};
var list = function (var_args){
var xs = null;
if (arguments.length > 0) {
var G__20446__i = 0, G__20446__a = new Array(arguments.length -  0);
while (G__20446__i < G__20446__a.length) {G__20446__a[G__20446__i] = arguments[G__20446__i + 0]; ++G__20446__i;}
  xs = new cljs.core.IndexedSeq(G__20446__a,0);
} 
return list__delegate.call(this,xs);};
list.cljs$lang$maxFixedArity = 0;
list.cljs$lang$applyTo = (function (arglist__20447){
var xs = cljs.core.seq(arglist__20447);
return list__delegate(xs);
});
list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
return list;
})()
;

/**
* @constructor
*/
cljs.core.Cons = (function (meta,first,rest,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65929452;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Cons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Cons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Cons(self__.meta,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return null;
} else {
return cljs.core.seq(self__.rest);
}
});

cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__17753__auto__ = self__.__hash;
if(!((h__17753__auto__ == null))){
return h__17753__auto__;
} else {
var h__17753__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__17753__auto____$1;

return h__17753__auto____$1;
}
});

cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(meta__$1,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(null,o,coll__$1,self__.__hash));
});

cljs.core.Cons.cljs$lang$type = true;

cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";

cljs.core.Cons.cljs$lang$ctorPrWriter = (function (this__17919__auto__,writer__17920__auto__,opt__17921__auto__){
return cljs.core._write(writer__17920__auto__,"cljs.core/Cons");
});

cljs.core.__GT_Cons = (function __GT_Cons(meta,first,rest,__hash){
return (new cljs.core.Cons(meta,first,rest,__hash));
});

(cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18310__auto__ = this;
return cljs.core.es6_iterator(this__18310__auto__);
}));
/**
* Returns a new seq where x is the first element and seq is the rest.
*/
cljs.core.cons = (function cons(x,coll){
if((function (){var or__17332__auto__ = (coll == null);
if(or__17332__auto__){
return or__17332__auto__;
} else {
var G__20451 = coll;
if(G__20451){
var bit__18006__auto__ = (G__20451.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__18006__auto__) || (G__20451.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
}
})()){
return (new cljs.core.Cons(null,x,coll,null));
} else {
return (new cljs.core.Cons(null,x,cljs.core.seq(coll),null));
}
});
cljs.core.list_QMARK_ = (function list_QMARK_(x){
var G__20453 = x;
if(G__20453){
var bit__18013__auto__ = (G__20453.cljs$lang$protocol_mask$partition0$ & (33554432));
if((bit__18013__auto__) || (G__20453.cljs$core$IList$)){
return true;
} else {
if((!G__20453.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__20453);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__20453);
}
});
cljs.core.hash_keyword = (function hash_keyword(k){
return ((cljs.core.hash_symbol(k) + (2654435769)) | (0));
});
cljs.core.compare_keywords = (function compare_keywords(a,b){
if((a.fqn === b.fqn)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__17320__auto__ = cljs.core.not(a.ns);
if(and__17320__auto__){
return b.ns;
} else {
return and__17320__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__20460 = a.ns;
var G__20461 = b.ns;
return goog.array.defaultCompare(G__20460,G__20461);
})();
if(((0) === nsc)){
var G__20462 = a.name;
var G__20463 = b.name;
return goog.array.defaultCompare(G__20462,G__20463);
} else {
return nsc;
}
}
} else {
var G__20464 = a.name;
var G__20465 = b.name;
return goog.array.defaultCompare(G__20464,G__20465);

}
}
}
});

/**
* @constructor
*/
cljs.core.Keyword = (function (ns,name,fqn,_hash){
this.ns = ns;
this.name = name;
this.fqn = fqn;
this._hash = _hash;
this.cljs$lang$protocol_mask$partition0$ = 2153775105;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,[cljs.core.str(":"),cljs.core.str(self__.fqn)].join(''));
});

cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var h__17753__auto__ = self__._hash;
if(!((h__17753__auto__ == null))){
return h__17753__auto__;
} else {
var h__17753__auto____$1 = cljs.core.hash_keyword(this$__$1);
self__._hash = h__17753__auto____$1;

return h__17753__auto____$1;
}
});

cljs.core.Keyword.prototype.call = (function() {
var G__20467 = null;
var G__20467__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});
var G__20467__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});
G__20467 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__20467__2.call(this,self__,coll);
case 3:
return G__20467__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__20467.cljs$core$IFn$_invoke$arity$2 = G__20467__2;
G__20467.cljs$core$IFn$_invoke$arity$3 = G__20467__3;
return G__20467;
})()
;

cljs.core.Keyword.prototype.apply = (function (self__,args20466){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args20466)));
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});

cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Keyword)){
return (self__.fqn === other.fqn);
} else {
return false;
}
});

cljs.core.Keyword.prototype.toString = (function (){
var self__ = this;
var _ = this;
return [cljs.core.str(":"),cljs.core.str(self__.fqn)].join('');
});

cljs.core.Keyword.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Keyword.cljs$lang$type = true;

cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";

cljs.core.Keyword.cljs$lang$ctorPrWriter = (function (this__17919__auto__,writer__17920__auto__,opt__17921__auto__){
return cljs.core._write(writer__17920__auto__,"cljs.core/Keyword");
});

cljs.core.__GT_Keyword = (function __GT_Keyword(ns,name,fqn,_hash){
return (new cljs.core.Keyword(ns,name,fqn,_hash));
});

cljs.core.keyword_QMARK_ = (function keyword_QMARK_(x){
return (x instanceof cljs.core.Keyword);
});
cljs.core.keyword_identical_QMARK_ = (function keyword_identical_QMARK_(x,y){
if((x === y)){
return true;
} else {
if(((x instanceof cljs.core.Keyword)) && ((y instanceof cljs.core.Keyword))){
return (x.fqn === y.fqn);
} else {
return false;
}
}
});
/**
* Returns the namespace String of a symbol or keyword, or nil if not present.
*/
cljs.core.namespace = (function namespace(x){
if((function (){var G__20469 = x;
if(G__20469){
var bit__18006__auto__ = (G__20469.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__18006__auto__) || (G__20469.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(null);
} else {
throw (new Error([cljs.core.str("Doesn't support namespace: "),cljs.core.str(x)].join('')));
}
});
/**
* Returns a Keyword with the given namespace and name.  Do not use :
* in the keyword strings, it will be added automatically.
*/
cljs.core.keyword = (function() {
var keyword = null;
var keyword__1 = (function (name){
if((name instanceof cljs.core.Keyword)){
return name;
} else {
if((name instanceof cljs.core.Symbol)){
return (new cljs.core.Keyword(cljs.core.namespace(name),(function (){var G__20471 = name;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__20471) : cljs.core.name.call(null,G__20471));
})(),name.str,null));
} else {
if(typeof name === 'string'){
var parts = name.split("/");
if((parts.length === (2))){
return (new cljs.core.Keyword((parts[(0)]),(parts[(1)]),name,null));
} else {
return (new cljs.core.Keyword(null,(parts[(0)]),name,null));
}
} else {
return null;
}
}
}
});
var keyword__2 = (function (ns,name){
return (new cljs.core.Keyword(ns,name,[cljs.core.str((cljs.core.truth_(ns)?[cljs.core.str(ns),cljs.core.str("/")].join(''):null)),cljs.core.str(name)].join(''),null));
});
keyword = function(ns,name){
switch(arguments.length){
case 1:
return keyword__1.call(this,ns);
case 2:
return keyword__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
return keyword;
})()
;

/**
* @constructor
*/
cljs.core.LazySeq = (function (meta,fn,s,__hash){
this.meta = meta;
this.fn = fn;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.LazySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.LazySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.LazySeq.prototype.sval = (function (){
var self__ = this;
var coll = this;
if((self__.fn == null)){
return self__.s;
} else {
self__.s = (function (){return (self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null));
})();

self__.fn = null;

return self__.s;
}
});

cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.next(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__17753__auto__ = self__.__hash;
if(!((h__17753__auto__ == null))){
return h__17753__auto__;
} else {
var h__17753__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__17753__auto____$1;

return h__17753__auto____$1;
}
});

cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if(!((self__.s == null))){
return cljs.core.rest(self__.s);
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
coll__$1.sval();

if((self__.s == null)){
return null;
} else {
var ls = self__.s;
while(true){
if((ls instanceof cljs.core.LazySeq)){
var G__20472 = ls.sval();
ls = G__20472;
continue;
} else {
self__.s = ls;

return cljs.core.seq(self__.s);
}
break;
}
}
});

cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.LazySeq(meta__$1,self__.fn,self__.s,self__.__hash));
});

cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.LazySeq.cljs$lang$type = true;

cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";

cljs.core.LazySeq.cljs$lang$ctorPrWriter = (function (this__17919__auto__,writer__17920__auto__,opt__17921__auto__){
return cljs.core._write(writer__17920__auto__,"cljs.core/LazySeq");
});

cljs.core.__GT_LazySeq = (function __GT_LazySeq(meta,fn,s,__hash){
return (new cljs.core.LazySeq(meta,fn,s,__hash));
});

(cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18310__auto__ = this;
return cljs.core.es6_iterator(this__18310__auto__);
}));

/**
* @constructor
*/
cljs.core.ChunkBuffer = (function (buf,end){
this.buf = buf;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2;
})
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.end;
});

cljs.core.ChunkBuffer.prototype.add = (function (o){
var self__ = this;
var _ = this;
(self__.buf[self__.end] = o);

return self__.end = (self__.end + (1));
});

cljs.core.ChunkBuffer.prototype.chunk = (function (o){
var self__ = this;
var _ = this;
var ret = (new cljs.core.ArrayChunk(self__.buf,(0),self__.end));
self__.buf = null;

return ret;
});

cljs.core.ChunkBuffer.cljs$lang$type = true;

cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";

cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = (function (this__17919__auto__,writer__17920__auto__,opt__17921__auto__){
return cljs.core._write(writer__17920__auto__,"cljs.core/ChunkBuffer");
});

cljs.core.__GT_ChunkBuffer = (function __GT_ChunkBuffer(buf,end){
return (new cljs.core.ChunkBuffer(buf,end));
});

cljs.core.chunk_buffer = (function chunk_buffer(capacity){
return (new cljs.core.ChunkBuffer((new Array(capacity)),(0)));
});

/**
* @constructor
*/
cljs.core.ArrayChunk = (function (arr,off,end){
this.arr = arr;
this.off = off;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 524306;
})
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.off]),(self__.off + (1)));
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.off);
});

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.off === self__.end)){
throw (new Error("-drop-first of empty chunk"));
} else {
return (new cljs.core.ArrayChunk(self__.arr,(self__.off + (1)),self__.end));
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,i){
var self__ = this;
var coll__$1 = this;
return (self__.arr[(self__.off + i)]);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,i,not_found){
var self__ = this;
var coll__$1 = this;
if(((i >= (0))) && ((i < (self__.end - self__.off)))){
return (self__.arr[(self__.off + i)]);
} else {
return not_found;
}
});

cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.end - self__.off);
});

cljs.core.ArrayChunk.cljs$lang$type = true;

cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";

cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = (function (this__17919__auto__,writer__17920__auto__,opt__17921__auto__){
return cljs.core._write(writer__17920__auto__,"cljs.core/ArrayChunk");
});

cljs.core.__GT_ArrayChunk = (function __GT_ArrayChunk(arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});

cljs.core.array_chunk = (function() {
var array_chunk = null;
var array_chunk__1 = (function (arr){
return (new cljs.core.ArrayChunk(arr,(0),arr.length));
});
var array_chunk__2 = (function (arr,off){
return (new cljs.core.ArrayChunk(arr,off,arr.length));
});
var array_chunk__3 = (function (arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});
array_chunk = function(arr,off,end){
switch(arguments.length){
case 1:
return array_chunk__1.call(this,arr);
case 2:
return array_chunk__2.call(this,arr,off);
case 3:
return array_chunk__3.call(this,arr,off,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
return array_chunk;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedCons = (function (chunk,more,meta,__hash){
this.chunk = chunk;
this.more = more;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850732;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedCons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedCons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
var more__$1 = cljs.core._seq(self__.more);
if((more__$1 == null)){
return null;
} else {
return more__$1;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__17753__auto__ = self__.__hash;
if(!((h__17753__auto__ == null))){
return h__17753__auto__;
} else {
var h__17753__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__17753__auto____$1;

return h__17753__auto____$1;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk,(0));
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.chunk;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ChunkedCons(self__.chunk,self__.more,m,self__.__hash));
});

cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,this$__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return null;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.cljs$lang$type = true;

cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";

cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = (function (this__17919__auto__,writer__17920__auto__,opt__17921__auto__){
return cljs.core._write(writer__17920__auto__,"cljs.core/ChunkedCons");
});

cljs.core.__GT_ChunkedCons = (function __GT_ChunkedCons(chunk,more,meta,__hash){
return (new cljs.core.ChunkedCons(chunk,more,meta,__hash));
});

(cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18310__auto__ = this;
return cljs.core.es6_iterator(this__18310__auto__);
}));
cljs.core.chunk_cons = (function chunk_cons(chunk,rest){
if((cljs.core._count(chunk) === (0))){
return rest;
} else {
return (new cljs.core.ChunkedCons(chunk,rest,null,null));
}
});
cljs.core.chunk_append = (function chunk_append(b,x){
return b.add(x);
});
cljs.core.chunk = (function chunk(b){
return b.chunk();
});
cljs.core.chunk_first = (function chunk_first(s){
return cljs.core._chunked_first(s);
});
cljs.core.chunk_rest = (function chunk_rest(s){
return cljs.core._chunked_rest(s);
});
cljs.core.chunk_next = (function chunk_next(s){
if((function (){var G__20474 = s;
if(G__20474){
var bit__18006__auto__ = (G__20474.cljs$lang$protocol_mask$partition1$ & (1024));
if((bit__18006__auto__) || (G__20474.cljs$core$IChunkedNext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core._chunked_next(s);
} else {
return cljs.core.seq(cljs.core._chunked_rest(s));
}
});
/**
* Naive impl of to-array as a start.
*/
cljs.core.to_array = (function to_array(s){
var ary = [];
var s__$1 = s;
while(true){
if(cljs.core.seq(s__$1)){
ary.push(cljs.core.first(s__$1));

var G__20475 = cljs.core.next(s__$1);
s__$1 = G__20475;
continue;
} else {
return ary;
}
break;
}
});
/**
* Returns a (potentially-ragged) 2-dimensional array
* containing the contents of coll.
*/
cljs.core.to_array_2d = (function to_array_2d(coll){
var ret = (new Array(cljs.core.count(coll)));
var i_20476 = (0);
var xs_20477 = cljs.core.seq(coll);
while(true){
if(xs_20477){
(ret[i_20476] = cljs.core.to_array(cljs.core.first(xs_20477)));

var G__20478 = (i_20476 + (1));
var G__20479 = cljs.core.next(xs_20477);
i_20476 = G__20478;
xs_20477 = G__20479;
continue;
} else {
}
break;
}

return ret;
});
cljs.core.int_array = (function() {
var int_array = null;
var int_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var int_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__20482 = (i + (1));
var G__20483 = cljs.core.next(s__$1);
i = G__20482;
s__$1 = G__20483;
continue;
} else {
return a;
}
break;
}
} else {
var n__18219__auto___20484 = size;
var i_20485 = (0);
while(true){
if((i_20485 < n__18219__auto___20484)){
(a[i_20485] = init_val_or_seq);

var G__20486 = (i_20485 + (1));
i_20485 = G__20486;
continue;
} else {
}
break;
}

return a;
}
});
int_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return int_array__1.call(this,size);
case 2:
return int_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
return int_array;
})()
;
cljs.core.long_array = (function() {
var long_array = null;
var long_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var long_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__20489 = (i + (1));
var G__20490 = cljs.core.next(s__$1);
i = G__20489;
s__$1 = G__20490;
continue;
} else {
return a;
}
break;
}
} else {
var n__18219__auto___20491 = size;
var i_20492 = (0);
while(true){
if((i_20492 < n__18219__auto___20491)){
(a[i_20492] = init_val_or_seq);

var G__20493 = (i_20492 + (1));
i_20492 = G__20493;
continue;
} else {
}
break;
}

return a;
}
});
long_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return long_array__1.call(this,size);
case 2:
return long_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
return long_array;
})()
;
cljs.core.double_array = (function() {
var double_array = null;
var double_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var double_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__20496 = (i + (1));
var G__20497 = cljs.core.next(s__$1);
i = G__20496;
s__$1 = G__20497;
continue;
} else {
return a;
}
break;
}
} else {
var n__18219__auto___20498 = size;
var i_20499 = (0);
while(true){
if((i_20499 < n__18219__auto___20498)){
(a[i_20499] = init_val_or_seq);

var G__20500 = (i_20499 + (1));
i_20499 = G__20500;
continue;
} else {
}
break;
}

return a;
}
});
double_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return double_array__1.call(this,size);
case 2:
return double_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
return double_array;
})()
;
cljs.core.object_array = (function() {
var object_array = null;
var object_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var object_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__20503 = (i + (1));
var G__20504 = cljs.core.next(s__$1);
i = G__20503;
s__$1 = G__20504;
continue;
} else {
return a;
}
break;
}
} else {
var n__18219__auto___20505 = size;
var i_20506 = (0);
while(true){
if((i_20506 < n__18219__auto___20505)){
(a[i_20506] = init_val_or_seq);

var G__20507 = (i_20506 + (1));
i_20506 = G__20507;
continue;
} else {
}
break;
}

return a;
}
});
object_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return object_array__1.call(this,size);
case 2:
return object_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
return object_array;
})()
;
cljs.core.bounded_count = (function bounded_count(s,n){
if(cljs.core.counted_QMARK_(s)){
return cljs.core.count(s);
} else {
var s__$1 = s;
var i = n;
var sum = (0);
while(true){
if(((i > (0))) && (cljs.core.seq(s__$1))){
var G__20508 = cljs.core.next(s__$1);
var G__20509 = (i - (1));
var G__20510 = (sum + (1));
s__$1 = G__20508;
i = G__20509;
sum = G__20510;
continue;
} else {
return sum;
}
break;
}
}
});
cljs.core.spread = (function spread(arglist){
if((arglist == null)){
return null;
} else {
if((cljs.core.next(arglist) == null)){
return cljs.core.seq(cljs.core.first(arglist));
} else {
return cljs.core.cons(cljs.core.first(arglist),spread(cljs.core.next(arglist)));

}
}
});
/**
* Returns a lazy seq representing the concatenation of the elements in the supplied colls.
* @param {...*} var_args
*/
cljs.core.concat = (function() {
var concat = null;
var concat__0 = (function (){
return (new cljs.core.LazySeq(null,(function (){
return null;
}),null,null));
});
var concat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return x;
}),null,null));
});
var concat__2 = (function (x,y){
return (new cljs.core.LazySeq(null,(function (){
var s = cljs.core.seq(x);
if(s){
if(cljs.core.chunked_seq_QMARK_(s)){
return cljs.core.chunk_cons(cljs.core.chunk_first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s),y));
} else {
return cljs.core.cons(cljs.core.first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s),y));
}
} else {
return y;
}
}),null,null));
});
var concat__3 = (function() { 
var G__20530__delegate = function (x,y,zs){
var cat = (function cat(xys,zs__$1){
return (new cljs.core.LazySeq(null,(function (){
var xys__$1 = cljs.core.seq(xys);
if(xys__$1){
if(cljs.core.chunked_seq_QMARK_(xys__$1)){
return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1),cat(cljs.core.chunk_rest(xys__$1),zs__$1));
} else {
return cljs.core.cons(cljs.core.first(xys__$1),cat(cljs.core.rest(xys__$1),zs__$1));
}
} else {
if(cljs.core.truth_(zs__$1)){
return cat(cljs.core.first(zs__$1),cljs.core.next(zs__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(concat.cljs$core$IFn$_invoke$arity$2(x,y),zs);
};
var G__20530 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__20531__i = 0, G__20531__a = new Array(arguments.length -  2);
while (G__20531__i < G__20531__a.length) {G__20531__a[G__20531__i] = arguments[G__20531__i + 2]; ++G__20531__i;}
  zs = new cljs.core.IndexedSeq(G__20531__a,0);
} 
return G__20530__delegate.call(this,x,y,zs);};
G__20530.cljs$lang$maxFixedArity = 2;
G__20530.cljs$lang$applyTo = (function (arglist__20532){
var x = cljs.core.first(arglist__20532);
arglist__20532 = cljs.core.next(arglist__20532);
var y = cljs.core.first(arglist__20532);
var zs = cljs.core.rest(arglist__20532);
return G__20530__delegate(x,y,zs);
});
G__20530.cljs$core$IFn$_invoke$arity$variadic = G__20530__delegate;
return G__20530;
})()
;
concat = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return concat__0.call(this);
case 1:
return concat__1.call(this,x);
case 2:
return concat__2.call(this,x,y);
default:
var G__20533 = null;
if (arguments.length > 2) {
var G__20534__i = 0, G__20534__a = new Array(arguments.length -  2);
while (G__20534__i < G__20534__a.length) {G__20534__a[G__20534__i] = arguments[G__20534__i + 2]; ++G__20534__i;}
G__20533 = new cljs.core.IndexedSeq(G__20534__a,0);
}
return concat__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__20533);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
concat.cljs$lang$maxFixedArity = 2;
concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
return concat;
})()
;
/**
* Creates a new list containing the items prepended to the rest, the
* last of which will be treated as a sequence.
* @param {...*} var_args
*/
cljs.core.list_STAR_ = (function() {
var list_STAR_ = null;
var list_STAR___1 = (function (args){
return cljs.core.seq(args);
});
var list_STAR___2 = (function (a,args){
return cljs.core.cons(a,args);
});
var list_STAR___3 = (function (a,b,args){
return cljs.core.cons(a,cljs.core.cons(b,args));
});
var list_STAR___4 = (function (a,b,c,args){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,args)));
});
var list_STAR___5 = (function() { 
var G__20535__delegate = function (a,b,c,d,more){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(more)))));
};
var G__20535 = function (a,b,c,d,var_args){
var more = null;
if (arguments.length > 4) {
var G__20536__i = 0, G__20536__a = new Array(arguments.length -  4);
while (G__20536__i < G__20536__a.length) {G__20536__a[G__20536__i] = arguments[G__20536__i + 4]; ++G__20536__i;}
  more = new cljs.core.IndexedSeq(G__20536__a,0);
} 
return G__20535__delegate.call(this,a,b,c,d,more);};
G__20535.cljs$lang$maxFixedArity = 4;
G__20535.cljs$lang$applyTo = (function (arglist__20537){
var a = cljs.core.first(arglist__20537);
arglist__20537 = cljs.core.next(arglist__20537);
var b = cljs.core.first(arglist__20537);
arglist__20537 = cljs.core.next(arglist__20537);
var c = cljs.core.first(arglist__20537);
arglist__20537 = cljs.core.next(arglist__20537);
var d = cljs.core.first(arglist__20537);
var more = cljs.core.rest(arglist__20537);
return G__20535__delegate(a,b,c,d,more);
});
G__20535.cljs$core$IFn$_invoke$arity$variadic = G__20535__delegate;
return G__20535;
})()
;
list_STAR_ = function(a,b,c,d,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return list_STAR___1.call(this,a);
case 2:
return list_STAR___2.call(this,a,b);
case 3:
return list_STAR___3.call(this,a,b,c);
case 4:
return list_STAR___4.call(this,a,b,c,d);
default:
var G__20538 = null;
if (arguments.length > 4) {
var G__20539__i = 0, G__20539__a = new Array(arguments.length -  4);
while (G__20539__i < G__20539__a.length) {G__20539__a[G__20539__i] = arguments[G__20539__i + 4]; ++G__20539__i;}
G__20538 = new cljs.core.IndexedSeq(G__20539__a,0);
}
return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a,b,c,d, G__20538);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
list_STAR_.cljs$lang$maxFixedArity = 4;
list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
return list_STAR_;
})()
;
/**
* Returns a new, transient version of the collection, in constant time.
*/
cljs.core.transient$ = (function transient$(coll){
return cljs.core._as_transient(coll);
});
/**
* Returns a new, persistent version of the transient collection, in
* constant time. The transient collection cannot be used after this
* call, any such use will throw an exception.
*/
cljs.core.persistent_BANG_ = (function persistent_BANG_(tcoll){
return cljs.core._persistent_BANG_(tcoll);
});
/**
* Adds x to the transient collection, and return coll. The 'addition'
* may happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj_BANG_ = (function() {
var conj_BANG_ = null;
var conj_BANG___0 = (function (){
return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
});
var conj_BANG___1 = (function (coll){
return coll;
});
var conj_BANG___2 = (function (tcoll,val){
return cljs.core._conj_BANG_(tcoll,val);
});
var conj_BANG___3 = (function() { 
var G__20540__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._conj_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__20541 = ntcoll;
var G__20542 = cljs.core.first(vals);
var G__20543 = cljs.core.next(vals);
tcoll = G__20541;
val = G__20542;
vals = G__20543;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__20540 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__20544__i = 0, G__20544__a = new Array(arguments.length -  2);
while (G__20544__i < G__20544__a.length) {G__20544__a[G__20544__i] = arguments[G__20544__i + 2]; ++G__20544__i;}
  vals = new cljs.core.IndexedSeq(G__20544__a,0);
} 
return G__20540__delegate.call(this,tcoll,val,vals);};
G__20540.cljs$lang$maxFixedArity = 2;
G__20540.cljs$lang$applyTo = (function (arglist__20545){
var tcoll = cljs.core.first(arglist__20545);
arglist__20545 = cljs.core.next(arglist__20545);
var val = cljs.core.first(arglist__20545);
var vals = cljs.core.rest(arglist__20545);
return G__20540__delegate(tcoll,val,vals);
});
G__20540.cljs$core$IFn$_invoke$arity$variadic = G__20540__delegate;
return G__20540;
})()
;
conj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 0:
return conj_BANG___0.call(this);
case 1:
return conj_BANG___1.call(this,tcoll);
case 2:
return conj_BANG___2.call(this,tcoll,val);
default:
var G__20546 = null;
if (arguments.length > 2) {
var G__20547__i = 0, G__20547__a = new Array(arguments.length -  2);
while (G__20547__i < G__20547__a.length) {G__20547__a[G__20547__i] = arguments[G__20547__i + 2]; ++G__20547__i;}
G__20546 = new cljs.core.IndexedSeq(G__20547__a,0);
}
return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__20546);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj_BANG_.cljs$lang$maxFixedArity = 2;
conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return conj_BANG_;
})()
;
/**
* When applied to a transient map, adds mapping of key(s) to
* val(s). When applied to a transient vector, sets the val at index.
* Note - index must be <= (count vector). Returns coll.
* @param {...*} var_args
*/
cljs.core.assoc_BANG_ = (function() {
var assoc_BANG_ = null;
var assoc_BANG___3 = (function (tcoll,key,val){
return cljs.core._assoc_BANG_(tcoll,key,val);
});
var assoc_BANG___4 = (function() { 
var G__20548__delegate = function (tcoll,key,val,kvs){
while(true){
var ntcoll = cljs.core._assoc_BANG_(tcoll,key,val);
if(cljs.core.truth_(kvs)){
var G__20549 = ntcoll;
var G__20550 = cljs.core.first(kvs);
var G__20551 = cljs.core.second(kvs);
var G__20552 = cljs.core.nnext(kvs);
tcoll = G__20549;
key = G__20550;
val = G__20551;
kvs = G__20552;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__20548 = function (tcoll,key,val,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__20553__i = 0, G__20553__a = new Array(arguments.length -  3);
while (G__20553__i < G__20553__a.length) {G__20553__a[G__20553__i] = arguments[G__20553__i + 3]; ++G__20553__i;}
  kvs = new cljs.core.IndexedSeq(G__20553__a,0);
} 
return G__20548__delegate.call(this,tcoll,key,val,kvs);};
G__20548.cljs$lang$maxFixedArity = 3;
G__20548.cljs$lang$applyTo = (function (arglist__20554){
var tcoll = cljs.core.first(arglist__20554);
arglist__20554 = cljs.core.next(arglist__20554);
var key = cljs.core.first(arglist__20554);
arglist__20554 = cljs.core.next(arglist__20554);
var val = cljs.core.first(arglist__20554);
var kvs = cljs.core.rest(arglist__20554);
return G__20548__delegate(tcoll,key,val,kvs);
});
G__20548.cljs$core$IFn$_invoke$arity$variadic = G__20548__delegate;
return G__20548;
})()
;
assoc_BANG_ = function(tcoll,key,val,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc_BANG___3.call(this,tcoll,key,val);
default:
var G__20555 = null;
if (arguments.length > 3) {
var G__20556__i = 0, G__20556__a = new Array(arguments.length -  3);
while (G__20556__i < G__20556__a.length) {G__20556__a[G__20556__i] = arguments[G__20556__i + 3]; ++G__20556__i;}
G__20555 = new cljs.core.IndexedSeq(G__20556__a,0);
}
return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll,key,val, G__20555);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc_BANG_.cljs$lang$maxFixedArity = 3;
assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
return assoc_BANG_;
})()
;
/**
* Returns a transient map that doesn't contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc_BANG_ = (function() {
var dissoc_BANG_ = null;
var dissoc_BANG___2 = (function (tcoll,key){
return cljs.core._dissoc_BANG_(tcoll,key);
});
var dissoc_BANG___3 = (function() { 
var G__20557__delegate = function (tcoll,key,ks){
while(true){
var ntcoll = cljs.core._dissoc_BANG_(tcoll,key);
if(cljs.core.truth_(ks)){
var G__20558 = ntcoll;
var G__20559 = cljs.core.first(ks);
var G__20560 = cljs.core.next(ks);
tcoll = G__20558;
key = G__20559;
ks = G__20560;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__20557 = function (tcoll,key,var_args){
var ks = null;
if (arguments.length > 2) {
var G__20561__i = 0, G__20561__a = new Array(arguments.length -  2);
while (G__20561__i < G__20561__a.length) {G__20561__a[G__20561__i] = arguments[G__20561__i + 2]; ++G__20561__i;}
  ks = new cljs.core.IndexedSeq(G__20561__a,0);
} 
return G__20557__delegate.call(this,tcoll,key,ks);};
G__20557.cljs$lang$maxFixedArity = 2;
G__20557.cljs$lang$applyTo = (function (arglist__20562){
var tcoll = cljs.core.first(arglist__20562);
arglist__20562 = cljs.core.next(arglist__20562);
var key = cljs.core.first(arglist__20562);
var ks = cljs.core.rest(arglist__20562);
return G__20557__delegate(tcoll,key,ks);
});
G__20557.cljs$core$IFn$_invoke$arity$variadic = G__20557__delegate;
return G__20557;
})()
;
dissoc_BANG_ = function(tcoll,key,var_args){
var ks = var_args;
switch(arguments.length){
case 2:
return dissoc_BANG___2.call(this,tcoll,key);
default:
var G__20563 = null;
if (arguments.length > 2) {
var G__20564__i = 0, G__20564__a = new Array(arguments.length -  2);
while (G__20564__i < G__20564__a.length) {G__20564__a[G__20564__i] = arguments[G__20564__i + 2]; ++G__20564__i;}
G__20563 = new cljs.core.IndexedSeq(G__20564__a,0);
}
return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,key, G__20563);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc_BANG_.cljs$lang$maxFixedArity = 2;
dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc_BANG_;
})()
;
/**
* Removes the last item from a transient vector. If
* the collection is empty, throws an exception. Returns coll
*/
cljs.core.pop_BANG_ = (function pop_BANG_(tcoll){
return cljs.core._pop_BANG_(tcoll);
});
/**
* disj[oin]. Returns a transient set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj_BANG_ = (function() {
var disj_BANG_ = null;
var disj_BANG___2 = (function (tcoll,val){
return cljs.core._disjoin_BANG_(tcoll,val);
});
var disj_BANG___3 = (function() { 
var G__20565__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._disjoin_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__20566 = ntcoll;
var G__20567 = cljs.core.first(vals);
var G__20568 = cljs.core.next(vals);
tcoll = G__20566;
val = G__20567;
vals = G__20568;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__20565 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__20569__i = 0, G__20569__a = new Array(arguments.length -  2);
while (G__20569__i < G__20569__a.length) {G__20569__a[G__20569__i] = arguments[G__20569__i + 2]; ++G__20569__i;}
  vals = new cljs.core.IndexedSeq(G__20569__a,0);
} 
return G__20565__delegate.call(this,tcoll,val,vals);};
G__20565.cljs$lang$maxFixedArity = 2;
G__20565.cljs$lang$applyTo = (function (arglist__20570){
var tcoll = cljs.core.first(arglist__20570);
arglist__20570 = cljs.core.next(arglist__20570);
var val = cljs.core.first(arglist__20570);
var vals = cljs.core.rest(arglist__20570);
return G__20565__delegate(tcoll,val,vals);
});
G__20565.cljs$core$IFn$_invoke$arity$variadic = G__20565__delegate;
return G__20565;
})()
;
disj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 2:
return disj_BANG___2.call(this,tcoll,val);
default:
var G__20571 = null;
if (arguments.length > 2) {
var G__20572__i = 0, G__20572__a = new Array(arguments.length -  2);
while (G__20572__i < G__20572__a.length) {G__20572__a[G__20572__i] = arguments[G__20572__i + 2]; ++G__20572__i;}
G__20571 = new cljs.core.IndexedSeq(G__20572__a,0);
}
return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__20571);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj_BANG_.cljs$lang$maxFixedArity = 2;
disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return disj_BANG_;
})()
;

cljs.core.apply_to = (function apply_to(f,argc,args){
var args__$1 = cljs.core.seq(args);
if((argc === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var a18263 = cljs.core._first(args__$1);
var args__$2 = cljs.core._rest(args__$1);
if((argc === (1))){
if(f.cljs$core$IFn$_invoke$arity$1){
return f.cljs$core$IFn$_invoke$arity$1(a18263);
} else {
var G__20783 = a18263;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20783) : f.call(null,G__20783));
}
} else {
var b18264 = cljs.core._first(args__$2);
var args__$3 = cljs.core._rest(args__$2);
if((argc === (2))){
if(f.cljs$core$IFn$_invoke$arity$2){
return f.cljs$core$IFn$_invoke$arity$2(a18263,b18264);
} else {
var G__20784 = a18263;
var G__20785 = b18264;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20784,G__20785) : f.call(null,G__20784,G__20785));
}
} else {
var c18265 = cljs.core._first(args__$3);
var args__$4 = cljs.core._rest(args__$3);
if((argc === (3))){
if(f.cljs$core$IFn$_invoke$arity$3){
return f.cljs$core$IFn$_invoke$arity$3(a18263,b18264,c18265);
} else {
var G__20786 = a18263;
var G__20787 = b18264;
var G__20788 = c18265;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__20786,G__20787,G__20788) : f.call(null,G__20786,G__20787,G__20788));
}
} else {
var d18266 = cljs.core._first(args__$4);
var args__$5 = cljs.core._rest(args__$4);
if((argc === (4))){
if(f.cljs$core$IFn$_invoke$arity$4){
return f.cljs$core$IFn$_invoke$arity$4(a18263,b18264,c18265,d18266);
} else {
var G__20789 = a18263;
var G__20790 = b18264;
var G__20791 = c18265;
var G__20792 = d18266;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__20789,G__20790,G__20791,G__20792) : f.call(null,G__20789,G__20790,G__20791,G__20792));
}
} else {
var e18267 = cljs.core._first(args__$5);
var args__$6 = cljs.core._rest(args__$5);
if((argc === (5))){
if(f.cljs$core$IFn$_invoke$arity$5){
return f.cljs$core$IFn$_invoke$arity$5(a18263,b18264,c18265,d18266,e18267);
} else {
var G__20793 = a18263;
var G__20794 = b18264;
var G__20795 = c18265;
var G__20796 = d18266;
var G__20797 = e18267;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__20793,G__20794,G__20795,G__20796,G__20797) : f.call(null,G__20793,G__20794,G__20795,G__20796,G__20797));
}
} else {
var f18268 = cljs.core._first(args__$6);
var args__$7 = cljs.core._rest(args__$6);
if((argc === (6))){
if(f.cljs$core$IFn$_invoke$arity$6){
return f.cljs$core$IFn$_invoke$arity$6(a18263,b18264,c18265,d18266,e18267,f18268);
} else {
var G__20798 = a18263;
var G__20799 = b18264;
var G__20800 = c18265;
var G__20801 = d18266;
var G__20802 = e18267;
var G__20803 = f18268;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__20798,G__20799,G__20800,G__20801,G__20802,G__20803) : f.call(null,G__20798,G__20799,G__20800,G__20801,G__20802,G__20803));
}
} else {
var g18269 = cljs.core._first(args__$7);
var args__$8 = cljs.core._rest(args__$7);
if((argc === (7))){
if(f.cljs$core$IFn$_invoke$arity$7){
return f.cljs$core$IFn$_invoke$arity$7(a18263,b18264,c18265,d18266,e18267,f18268,g18269);
} else {
var G__20804 = a18263;
var G__20805 = b18264;
var G__20806 = c18265;
var G__20807 = d18266;
var G__20808 = e18267;
var G__20809 = f18268;
var G__20810 = g18269;
return (f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__20804,G__20805,G__20806,G__20807,G__20808,G__20809,G__20810) : f.call(null,G__20804,G__20805,G__20806,G__20807,G__20808,G__20809,G__20810));
}
} else {
var h18270 = cljs.core._first(args__$8);
var args__$9 = cljs.core._rest(args__$8);
if((argc === (8))){
if(f.cljs$core$IFn$_invoke$arity$8){
return f.cljs$core$IFn$_invoke$arity$8(a18263,b18264,c18265,d18266,e18267,f18268,g18269,h18270);
} else {
var G__20811 = a18263;
var G__20812 = b18264;
var G__20813 = c18265;
var G__20814 = d18266;
var G__20815 = e18267;
var G__20816 = f18268;
var G__20817 = g18269;
var G__20818 = h18270;
return (f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__20811,G__20812,G__20813,G__20814,G__20815,G__20816,G__20817,G__20818) : f.call(null,G__20811,G__20812,G__20813,G__20814,G__20815,G__20816,G__20817,G__20818));
}
} else {
var i18271 = cljs.core._first(args__$9);
var args__$10 = cljs.core._rest(args__$9);
if((argc === (9))){
if(f.cljs$core$IFn$_invoke$arity$9){
return f.cljs$core$IFn$_invoke$arity$9(a18263,b18264,c18265,d18266,e18267,f18268,g18269,h18270,i18271);
} else {
var G__20819 = a18263;
var G__20820 = b18264;
var G__20821 = c18265;
var G__20822 = d18266;
var G__20823 = e18267;
var G__20824 = f18268;
var G__20825 = g18269;
var G__20826 = h18270;
var G__20827 = i18271;
return (f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__20819,G__20820,G__20821,G__20822,G__20823,G__20824,G__20825,G__20826,G__20827) : f.call(null,G__20819,G__20820,G__20821,G__20822,G__20823,G__20824,G__20825,G__20826,G__20827));
}
} else {
var j18272 = cljs.core._first(args__$10);
var args__$11 = cljs.core._rest(args__$10);
if((argc === (10))){
if(f.cljs$core$IFn$_invoke$arity$10){
return f.cljs$core$IFn$_invoke$arity$10(a18263,b18264,c18265,d18266,e18267,f18268,g18269,h18270,i18271,j18272);
} else {
var G__20828 = a18263;
var G__20829 = b18264;
var G__20830 = c18265;
var G__20831 = d18266;
var G__20832 = e18267;
var G__20833 = f18268;
var G__20834 = g18269;
var G__20835 = h18270;
var G__20836 = i18271;
var G__20837 = j18272;
return (f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__20828,G__20829,G__20830,G__20831,G__20832,G__20833,G__20834,G__20835,G__20836,G__20837) : f.call(null,G__20828,G__20829,G__20830,G__20831,G__20832,G__20833,G__20834,G__20835,G__20836,G__20837));
}
} else {
var k18273 = cljs.core._first(args__$11);
var args__$12 = cljs.core._rest(args__$11);
if((argc === (11))){
if(f.cljs$core$IFn$_invoke$arity$11){
return f.cljs$core$IFn$_invoke$arity$11(a18263,b18264,c18265,d18266,e18267,f18268,g18269,h18270,i18271,j18272,k18273);
} else {
var G__20838 = a18263;
var G__20839 = b18264;
var G__20840 = c18265;
var G__20841 = d18266;
var G__20842 = e18267;
var G__20843 = f18268;
var G__20844 = g18269;
var G__20845 = h18270;
var G__20846 = i18271;
var G__20847 = j18272;
var G__20848 = k18273;
return (f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__20838,G__20839,G__20840,G__20841,G__20842,G__20843,G__20844,G__20845,G__20846,G__20847,G__20848) : f.call(null,G__20838,G__20839,G__20840,G__20841,G__20842,G__20843,G__20844,G__20845,G__20846,G__20847,G__20848));
}
} else {
var l18274 = cljs.core._first(args__$12);
var args__$13 = cljs.core._rest(args__$12);
if((argc === (12))){
if(f.cljs$core$IFn$_invoke$arity$12){
return f.cljs$core$IFn$_invoke$arity$12(a18263,b18264,c18265,d18266,e18267,f18268,g18269,h18270,i18271,j18272,k18273,l18274);
} else {
var G__20849 = a18263;
var G__20850 = b18264;
var G__20851 = c18265;
var G__20852 = d18266;
var G__20853 = e18267;
var G__20854 = f18268;
var G__20855 = g18269;
var G__20856 = h18270;
var G__20857 = i18271;
var G__20858 = j18272;
var G__20859 = k18273;
var G__20860 = l18274;
return (f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__20849,G__20850,G__20851,G__20852,G__20853,G__20854,G__20855,G__20856,G__20857,G__20858,G__20859,G__20860) : f.call(null,G__20849,G__20850,G__20851,G__20852,G__20853,G__20854,G__20855,G__20856,G__20857,G__20858,G__20859,G__20860));
}
} else {
var m18275 = cljs.core._first(args__$13);
var args__$14 = cljs.core._rest(args__$13);
if((argc === (13))){
if(f.cljs$core$IFn$_invoke$arity$13){
return f.cljs$core$IFn$_invoke$arity$13(a18263,b18264,c18265,d18266,e18267,f18268,g18269,h18270,i18271,j18272,k18273,l18274,m18275);
} else {
var G__20861 = a18263;
var G__20862 = b18264;
var G__20863 = c18265;
var G__20864 = d18266;
var G__20865 = e18267;
var G__20866 = f18268;
var G__20867 = g18269;
var G__20868 = h18270;
var G__20869 = i18271;
var G__20870 = j18272;
var G__20871 = k18273;
var G__20872 = l18274;
var G__20873 = m18275;
return (f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__20861,G__20862,G__20863,G__20864,G__20865,G__20866,G__20867,G__20868,G__20869,G__20870,G__20871,G__20872,G__20873) : f.call(null,G__20861,G__20862,G__20863,G__20864,G__20865,G__20866,G__20867,G__20868,G__20869,G__20870,G__20871,G__20872,G__20873));
}
} else {
var n18276 = cljs.core._first(args__$14);
var args__$15 = cljs.core._rest(args__$14);
if((argc === (14))){
if(f.cljs$core$IFn$_invoke$arity$14){
return f.cljs$core$IFn$_invoke$arity$14(a18263,b18264,c18265,d18266,e18267,f18268,g18269,h18270,i18271,j18272,k18273,l18274,m18275,n18276);
} else {
var G__20874 = a18263;
var G__20875 = b18264;
var G__20876 = c18265;
var G__20877 = d18266;
var G__20878 = e18267;
var G__20879 = f18268;
var G__20880 = g18269;
var G__20881 = h18270;
var G__20882 = i18271;
var G__20883 = j18272;
var G__20884 = k18273;
var G__20885 = l18274;
var G__20886 = m18275;
var G__20887 = n18276;
return (f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__20874,G__20875,G__20876,G__20877,G__20878,G__20879,G__20880,G__20881,G__20882,G__20883,G__20884,G__20885,G__20886,G__20887) : f.call(null,G__20874,G__20875,G__20876,G__20877,G__20878,G__20879,G__20880,G__20881,G__20882,G__20883,G__20884,G__20885,G__20886,G__20887));
}
} else {
var o18277 = cljs.core._first(args__$15);
var args__$16 = cljs.core._rest(args__$15);
if((argc === (15))){
if(f.cljs$core$IFn$_invoke$arity$15){
return f.cljs$core$IFn$_invoke$arity$15(a18263,b18264,c18265,d18266,e18267,f18268,g18269,h18270,i18271,j18272,k18273,l18274,m18275,n18276,o18277);
} else {
var G__20888 = a18263;
var G__20889 = b18264;
var G__20890 = c18265;
var G__20891 = d18266;
var G__20892 = e18267;
var G__20893 = f18268;
var G__20894 = g18269;
var G__20895 = h18270;
var G__20896 = i18271;
var G__20897 = j18272;
var G__20898 = k18273;
var G__20899 = l18274;
var G__20900 = m18275;
var G__20901 = n18276;
var G__20902 = o18277;
return (f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__20888,G__20889,G__20890,G__20891,G__20892,G__20893,G__20894,G__20895,G__20896,G__20897,G__20898,G__20899,G__20900,G__20901,G__20902) : f.call(null,G__20888,G__20889,G__20890,G__20891,G__20892,G__20893,G__20894,G__20895,G__20896,G__20897,G__20898,G__20899,G__20900,G__20901,G__20902));
}
} else {
var p18278 = cljs.core._first(args__$16);
var args__$17 = cljs.core._rest(args__$16);
if((argc === (16))){
if(f.cljs$core$IFn$_invoke$arity$16){
return f.cljs$core$IFn$_invoke$arity$16(a18263,b18264,c18265,d18266,e18267,f18268,g18269,h18270,i18271,j18272,k18273,l18274,m18275,n18276,o18277,p18278);
} else {
var G__20903 = a18263;
var G__20904 = b18264;
var G__20905 = c18265;
var G__20906 = d18266;
var G__20907 = e18267;
var G__20908 = f18268;
var G__20909 = g18269;
var G__20910 = h18270;
var G__20911 = i18271;
var G__20912 = j18272;
var G__20913 = k18273;
var G__20914 = l18274;
var G__20915 = m18275;
var G__20916 = n18276;
var G__20917 = o18277;
var G__20918 = p18278;
return (f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__20903,G__20904,G__20905,G__20906,G__20907,G__20908,G__20909,G__20910,G__20911,G__20912,G__20913,G__20914,G__20915,G__20916,G__20917,G__20918) : f.call(null,G__20903,G__20904,G__20905,G__20906,G__20907,G__20908,G__20909,G__20910,G__20911,G__20912,G__20913,G__20914,G__20915,G__20916,G__20917,G__20918));
}
} else {
var q18279 = cljs.core._first(args__$17);
var args__$18 = cljs.core._rest(args__$17);
if((argc === (17))){
if(f.cljs$core$IFn$_invoke$arity$17){
return f.cljs$core$IFn$_invoke$arity$17(a18263,b18264,c18265,d18266,e18267,f18268,g18269,h18270,i18271,j18272,k18273,l18274,m18275,n18276,o18277,p18278,q18279);
} else {
var G__20919 = a18263;
var G__20920 = b18264;
var G__20921 = c18265;
var G__20922 = d18266;
var G__20923 = e18267;
var G__20924 = f18268;
var G__20925 = g18269;
var G__20926 = h18270;
var G__20927 = i18271;
var G__20928 = j18272;
var G__20929 = k18273;
var G__20930 = l18274;
var G__20931 = m18275;
var G__20932 = n18276;
var G__20933 = o18277;
var G__20934 = p18278;
var G__20935 = q18279;
return (f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__20919,G__20920,G__20921,G__20922,G__20923,G__20924,G__20925,G__20926,G__20927,G__20928,G__20929,G__20930,G__20931,G__20932,G__20933,G__20934,G__20935) : f.call(null,G__20919,G__20920,G__20921,G__20922,G__20923,G__20924,G__20925,G__20926,G__20927,G__20928,G__20929,G__20930,G__20931,G__20932,G__20933,G__20934,G__20935));
}
} else {
var r18280 = cljs.core._first(args__$18);
var args__$19 = cljs.core._rest(args__$18);
if((argc === (18))){
if(f.cljs$core$IFn$_invoke$arity$18){
return f.cljs$core$IFn$_invoke$arity$18(a18263,b18264,c18265,d18266,e18267,f18268,g18269,h18270,i18271,j18272,k18273,l18274,m18275,n18276,o18277,p18278,q18279,r18280);
} else {
var G__20936 = a18263;
var G__20937 = b18264;
var G__20938 = c18265;
var G__20939 = d18266;
var G__20940 = e18267;
var G__20941 = f18268;
var G__20942 = g18269;
var G__20943 = h18270;
var G__20944 = i18271;
var G__20945 = j18272;
var G__20946 = k18273;
var G__20947 = l18274;
var G__20948 = m18275;
var G__20949 = n18276;
var G__20950 = o18277;
var G__20951 = p18278;
var G__20952 = q18279;
var G__20953 = r18280;
return (f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__20936,G__20937,G__20938,G__20939,G__20940,G__20941,G__20942,G__20943,G__20944,G__20945,G__20946,G__20947,G__20948,G__20949,G__20950,G__20951,G__20952,G__20953) : f.call(null,G__20936,G__20937,G__20938,G__20939,G__20940,G__20941,G__20942,G__20943,G__20944,G__20945,G__20946,G__20947,G__20948,G__20949,G__20950,G__20951,G__20952,G__20953));
}
} else {
var s18281 = cljs.core._first(args__$19);
var args__$20 = cljs.core._rest(args__$19);
if((argc === (19))){
if(f.cljs$core$IFn$_invoke$arity$19){
return f.cljs$core$IFn$_invoke$arity$19(a18263,b18264,c18265,d18266,e18267,f18268,g18269,h18270,i18271,j18272,k18273,l18274,m18275,n18276,o18277,p18278,q18279,r18280,s18281);
} else {
var G__20954 = a18263;
var G__20955 = b18264;
var G__20956 = c18265;
var G__20957 = d18266;
var G__20958 = e18267;
var G__20959 = f18268;
var G__20960 = g18269;
var G__20961 = h18270;
var G__20962 = i18271;
var G__20963 = j18272;
var G__20964 = k18273;
var G__20965 = l18274;
var G__20966 = m18275;
var G__20967 = n18276;
var G__20968 = o18277;
var G__20969 = p18278;
var G__20970 = q18279;
var G__20971 = r18280;
var G__20972 = s18281;
return (f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__20954,G__20955,G__20956,G__20957,G__20958,G__20959,G__20960,G__20961,G__20962,G__20963,G__20964,G__20965,G__20966,G__20967,G__20968,G__20969,G__20970,G__20971,G__20972) : f.call(null,G__20954,G__20955,G__20956,G__20957,G__20958,G__20959,G__20960,G__20961,G__20962,G__20963,G__20964,G__20965,G__20966,G__20967,G__20968,G__20969,G__20970,G__20971,G__20972));
}
} else {
var t18282 = cljs.core._first(args__$20);
var args__$21 = cljs.core._rest(args__$20);
if((argc === (20))){
if(f.cljs$core$IFn$_invoke$arity$20){
return f.cljs$core$IFn$_invoke$arity$20(a18263,b18264,c18265,d18266,e18267,f18268,g18269,h18270,i18271,j18272,k18273,l18274,m18275,n18276,o18277,p18278,q18279,r18280,s18281,t18282);
} else {
var G__20973 = a18263;
var G__20974 = b18264;
var G__20975 = c18265;
var G__20976 = d18266;
var G__20977 = e18267;
var G__20978 = f18268;
var G__20979 = g18269;
var G__20980 = h18270;
var G__20981 = i18271;
var G__20982 = j18272;
var G__20983 = k18273;
var G__20984 = l18274;
var G__20985 = m18275;
var G__20986 = n18276;
var G__20987 = o18277;
var G__20988 = p18278;
var G__20989 = q18279;
var G__20990 = r18280;
var G__20991 = s18281;
var G__20992 = t18282;
return (f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__20973,G__20974,G__20975,G__20976,G__20977,G__20978,G__20979,G__20980,G__20981,G__20982,G__20983,G__20984,G__20985,G__20986,G__20987,G__20988,G__20989,G__20990,G__20991,G__20992) : f.call(null,G__20973,G__20974,G__20975,G__20976,G__20977,G__20978,G__20979,G__20980,G__20981,G__20982,G__20983,G__20984,G__20985,G__20986,G__20987,G__20988,G__20989,G__20990,G__20991,G__20992));
}
} else {
throw (new Error("Only up to 20 arguments supported on functions"));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
});

/**
* Applies fn f to the argument list formed by prepending intervening arguments to args.
* First cut.  Not lazy.  Needs to use emitted toApply.
* @param {...*} var_args
*/
cljs.core.apply = (function() {
var apply = null;
var apply__2 = (function (f,args){
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(args,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,args);
} else {
return f.cljs$lang$applyTo(args);
}
} else {
return f.apply(f,cljs.core.to_array(args));
}
});
var apply__3 = (function (f,x,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__4 = (function (f,x,y,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x,y,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__5 = (function (f,x,y,z,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x,y,z,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__6 = (function() { 
var G__20993__delegate = function (f,a,b,c,d,args){
var arglist = cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(args)))));
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
};
var G__20993 = function (f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 5) {
var G__20994__i = 0, G__20994__a = new Array(arguments.length -  5);
while (G__20994__i < G__20994__a.length) {G__20994__a[G__20994__i] = arguments[G__20994__i + 5]; ++G__20994__i;}
  args = new cljs.core.IndexedSeq(G__20994__a,0);
} 
return G__20993__delegate.call(this,f,a,b,c,d,args);};
G__20993.cljs$lang$maxFixedArity = 5;
G__20993.cljs$lang$applyTo = (function (arglist__20995){
var f = cljs.core.first(arglist__20995);
arglist__20995 = cljs.core.next(arglist__20995);
var a = cljs.core.first(arglist__20995);
arglist__20995 = cljs.core.next(arglist__20995);
var b = cljs.core.first(arglist__20995);
arglist__20995 = cljs.core.next(arglist__20995);
var c = cljs.core.first(arglist__20995);
arglist__20995 = cljs.core.next(arglist__20995);
var d = cljs.core.first(arglist__20995);
var args = cljs.core.rest(arglist__20995);
return G__20993__delegate(f,a,b,c,d,args);
});
G__20993.cljs$core$IFn$_invoke$arity$variadic = G__20993__delegate;
return G__20993;
})()
;
apply = function(f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return apply__2.call(this,f,a);
case 3:
return apply__3.call(this,f,a,b);
case 4:
return apply__4.call(this,f,a,b,c);
case 5:
return apply__5.call(this,f,a,b,c,d);
default:
var G__20996 = null;
if (arguments.length > 5) {
var G__20997__i = 0, G__20997__a = new Array(arguments.length -  5);
while (G__20997__i < G__20997__a.length) {G__20997__a[G__20997__i] = arguments[G__20997__i + 5]; ++G__20997__i;}
G__20996 = new cljs.core.IndexedSeq(G__20997__a,0);
}
return apply__6.cljs$core$IFn$_invoke$arity$variadic(f,a,b,c,d, G__20996);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
apply.cljs$lang$maxFixedArity = 5;
apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
return apply;
})()
;
/**
* Returns an object of the same type and value as obj, with
* (apply f (meta obj) args) as its metadata.
* @param {...*} var_args
*/
cljs.core.vary_meta = (function() {
var vary_meta = null;
var vary_meta__2 = (function (obj,f){
return cljs.core.with_meta(obj,(function (){var G__21013 = cljs.core.meta(obj);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21013) : f.call(null,G__21013));
})());
});
var vary_meta__3 = (function (obj,f,a){
return cljs.core.with_meta(obj,(function (){var G__21014 = cljs.core.meta(obj);
var G__21015 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21014,G__21015) : f.call(null,G__21014,G__21015));
})());
});
var vary_meta__4 = (function (obj,f,a,b){
return cljs.core.with_meta(obj,(function (){var G__21016 = cljs.core.meta(obj);
var G__21017 = a;
var G__21018 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__21016,G__21017,G__21018) : f.call(null,G__21016,G__21017,G__21018));
})());
});
var vary_meta__5 = (function (obj,f,a,b,c){
return cljs.core.with_meta(obj,(function (){var G__21019 = cljs.core.meta(obj);
var G__21020 = a;
var G__21021 = b;
var G__21022 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__21019,G__21020,G__21021,G__21022) : f.call(null,G__21019,G__21020,G__21021,G__21022));
})());
});
var vary_meta__6 = (function (obj,f,a,b,c,d){
return cljs.core.with_meta(obj,(function (){var G__21023 = cljs.core.meta(obj);
var G__21024 = a;
var G__21025 = b;
var G__21026 = c;
var G__21027 = d;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__21023,G__21024,G__21025,G__21026,G__21027) : f.call(null,G__21023,G__21024,G__21025,G__21026,G__21027));
})());
});
var vary_meta__7 = (function() { 
var G__21028__delegate = function (obj,f,a,b,c,d,args){
return cljs.core.with_meta(obj,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.meta(obj),a,b,c,cljs.core.array_seq([d,args], 0)));
};
var G__21028 = function (obj,f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 6) {
var G__21029__i = 0, G__21029__a = new Array(arguments.length -  6);
while (G__21029__i < G__21029__a.length) {G__21029__a[G__21029__i] = arguments[G__21029__i + 6]; ++G__21029__i;}
  args = new cljs.core.IndexedSeq(G__21029__a,0);
} 
return G__21028__delegate.call(this,obj,f,a,b,c,d,args);};
G__21028.cljs$lang$maxFixedArity = 6;
G__21028.cljs$lang$applyTo = (function (arglist__21030){
var obj = cljs.core.first(arglist__21030);
arglist__21030 = cljs.core.next(arglist__21030);
var f = cljs.core.first(arglist__21030);
arglist__21030 = cljs.core.next(arglist__21030);
var a = cljs.core.first(arglist__21030);
arglist__21030 = cljs.core.next(arglist__21030);
var b = cljs.core.first(arglist__21030);
arglist__21030 = cljs.core.next(arglist__21030);
var c = cljs.core.first(arglist__21030);
arglist__21030 = cljs.core.next(arglist__21030);
var d = cljs.core.first(arglist__21030);
var args = cljs.core.rest(arglist__21030);
return G__21028__delegate(obj,f,a,b,c,d,args);
});
G__21028.cljs$core$IFn$_invoke$arity$variadic = G__21028__delegate;
return G__21028;
})()
;
vary_meta = function(obj,f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return vary_meta__2.call(this,obj,f);
case 3:
return vary_meta__3.call(this,obj,f,a);
case 4:
return vary_meta__4.call(this,obj,f,a,b);
case 5:
return vary_meta__5.call(this,obj,f,a,b,c);
case 6:
return vary_meta__6.call(this,obj,f,a,b,c,d);
default:
var G__21031 = null;
if (arguments.length > 6) {
var G__21032__i = 0, G__21032__a = new Array(arguments.length -  6);
while (G__21032__i < G__21032__a.length) {G__21032__a[G__21032__i] = arguments[G__21032__i + 6]; ++G__21032__i;}
G__21031 = new cljs.core.IndexedSeq(G__21032__a,0);
}
return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj,f,a,b,c,d, G__21031);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
vary_meta.cljs$lang$maxFixedArity = 6;
vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
return vary_meta;
})()
;
/**
* Same as (not (= obj1 obj2))
* @param {...*} var_args
*/
cljs.core.not_EQ_ = (function() {
var not_EQ_ = null;
var not_EQ___1 = (function (x){
return false;
});
var not_EQ___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var not_EQ___3 = (function() { 
var G__21033__delegate = function (x,y,more){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_,x,y,more));
};
var G__21033 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__21034__i = 0, G__21034__a = new Array(arguments.length -  2);
while (G__21034__i < G__21034__a.length) {G__21034__a[G__21034__i] = arguments[G__21034__i + 2]; ++G__21034__i;}
  more = new cljs.core.IndexedSeq(G__21034__a,0);
} 
return G__21033__delegate.call(this,x,y,more);};
G__21033.cljs$lang$maxFixedArity = 2;
G__21033.cljs$lang$applyTo = (function (arglist__21035){
var x = cljs.core.first(arglist__21035);
arglist__21035 = cljs.core.next(arglist__21035);
var y = cljs.core.first(arglist__21035);
var more = cljs.core.rest(arglist__21035);
return G__21033__delegate(x,y,more);
});
G__21033.cljs$core$IFn$_invoke$arity$variadic = G__21033__delegate;
return G__21033;
})()
;
not_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return not_EQ___1.call(this,x);
case 2:
return not_EQ___2.call(this,x,y);
default:
var G__21036 = null;
if (arguments.length > 2) {
var G__21037__i = 0, G__21037__a = new Array(arguments.length -  2);
while (G__21037__i < G__21037__a.length) {G__21037__a[G__21037__i] = arguments[G__21037__i + 2]; ++G__21037__i;}
G__21036 = new cljs.core.IndexedSeq(G__21037__a,0);
}
return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__21036);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
not_EQ_.cljs$lang$maxFixedArity = 2;
not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return not_EQ_;
})()
;
/**
* If coll is empty, returns nil, else coll
*/
cljs.core.not_empty = (function not_empty(coll){
if(cljs.core.seq(coll)){
return coll;
} else {
return null;
}
});
cljs.core.nil_iter = (function nil_iter(){
if(typeof cljs.core.t21041 !== 'undefined'){
} else {

/**
* @constructor
*/
cljs.core.t21041 = (function (nil_iter,meta21042){
this.nil_iter = nil_iter;
this.meta21042 = meta21042;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393216;
})
cljs.core.t21041.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return false;
});

cljs.core.t21041.prototype.next = (function (){
var self__ = this;
var _ = this;
return (new Error("No such element"));
});

cljs.core.t21041.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.t21041.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_21043){
var self__ = this;
var _21043__$1 = this;
return self__.meta21042;
});

cljs.core.t21041.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_21043,meta21042__$1){
var self__ = this;
var _21043__$1 = this;
return (new cljs.core.t21041(self__.nil_iter,meta21042__$1));
});

cljs.core.t21041.cljs$lang$type = true;

cljs.core.t21041.cljs$lang$ctorStr = "cljs.core/t21041";

cljs.core.t21041.cljs$lang$ctorPrWriter = (function (this__17919__auto__,writer__17920__auto__,opt__17921__auto__){
return cljs.core._write(writer__17920__auto__,"cljs.core/t21041");
});

cljs.core.__GT_t21041 = (function __GT_t21041(nil_iter__$1,meta21042){
return (new cljs.core.t21041(nil_iter__$1,meta21042));
});

}

return (new cljs.core.t21041(nil_iter,cljs.core.PersistentArrayMap.EMPTY));
});

/**
* @constructor
*/
cljs.core.StringIter = (function (s,i){
this.s = s;
this.i = i;
})
cljs.core.StringIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.s.length);
});

cljs.core.StringIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.s.charAt(self__.i);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.StringIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.StringIter.cljs$lang$type = true;

cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";

cljs.core.StringIter.cljs$lang$ctorPrWriter = (function (this__17919__auto__,writer__17920__auto__,opt__17921__auto__){
return cljs.core._write(writer__17920__auto__,"cljs.core/StringIter");
});

cljs.core.__GT_StringIter = (function __GT_StringIter(s,i){
return (new cljs.core.StringIter(s,i));
});

cljs.core.string_iter = (function string_iter(x){
return (new cljs.core.StringIter(x,(0)));
});

/**
* @constructor
*/
cljs.core.ArrayIter = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.ArrayIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.ArrayIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.ArrayIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.ArrayIter.cljs$lang$type = true;

cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";

cljs.core.ArrayIter.cljs$lang$ctorPrWriter = (function (this__17919__auto__,writer__17920__auto__,opt__17921__auto__){
return cljs.core._write(writer__17920__auto__,"cljs.core/ArrayIter");
});

cljs.core.__GT_ArrayIter = (function __GT_ArrayIter(arr,i){
return (new cljs.core.ArrayIter(arr,i));
});

cljs.core.array_iter = (function array_iter(x){
return (new cljs.core.ArrayIter(x,(0)));
});
cljs.core.INIT = {};
cljs.core.START = {};

/**
* @constructor
*/
cljs.core.SeqIter = (function (_seq,_next){
this._seq = _seq;
this._next = _next;
})
cljs.core.SeqIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__._seq === cljs.core.INIT)){
self__._seq = cljs.core.START;

self__._next = cljs.core.seq(self__._next);
} else {
if((self__._seq === self__._next)){
self__._next = cljs.core.next(self__._seq);
} else {
}
}

return !((self__._next == null));
});

cljs.core.SeqIter.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(cljs.core.not(this$.hasNext())){
throw (new Error("No such element"));
} else {
self__._seq = self__._next;

return cljs.core.first(self__._next);
}
});

cljs.core.SeqIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.SeqIter.cljs$lang$type = true;

cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";

cljs.core.SeqIter.cljs$lang$ctorPrWriter = (function (this__17919__auto__,writer__17920__auto__,opt__17921__auto__){
return cljs.core._write(writer__17920__auto__,"cljs.core/SeqIter");
});

cljs.core.__GT_SeqIter = (function __GT_SeqIter(_seq,_next){
return (new cljs.core.SeqIter(_seq,_next));
});

cljs.core.seq_iter = (function seq_iter(coll){
return (new cljs.core.SeqIter(cljs.core.INIT,coll));
});
cljs.core.iter = (function iter(coll){
if((coll == null)){
return cljs.core.nil_iter();
} else {
if(typeof coll === 'string'){
return cljs.core.string_iter(coll);
} else {
if(coll instanceof Array){
return cljs.core.array_iter(coll);
} else {
if(cljs.core.iterable_QMARK_(coll)){
return cljs.core._iterator(coll);
} else {
if(cljs.core.seqable_QMARK_(coll)){
return cljs.core.seq_iter(coll);
} else {
throw (new Error([cljs.core.str("Cannot create iterator from "),cljs.core.str(coll)].join('')));

}
}
}
}
}
});
cljs.core.lazy_transformer = (function lazy_transformer(stepper){
return (new cljs.core.LazyTransformer(stepper,null,null,null));
});

/**
* @constructor
*/
cljs.core.Stepper = (function (xform,iter){
this.xform = xform;
this.iter = iter;
})
cljs.core.Stepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__17320__auto__ = !((lt.stepper == null));
if(and__17320__auto__){
return self__.iter.hasNext();
} else {
return and__17320__auto__;
}
})())){
if(cljs.core.reduced_QMARK_((function (){var G__21044 = lt;
var G__21045 = self__.iter.next();
return (self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__21044,G__21045) : self__.xform.call(null,G__21044,G__21045));
})())){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__21046 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__21046) : self__.xform.call(null,G__21046));
}
});

cljs.core.Stepper.cljs$lang$type = true;

cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";

cljs.core.Stepper.cljs$lang$ctorPrWriter = (function (this__17919__auto__,writer__17920__auto__,opt__17921__auto__){
return cljs.core._write(writer__17920__auto__,"cljs.core/Stepper");
});

cljs.core.__GT_Stepper = (function __GT_Stepper(xform,iter){
return (new cljs.core.Stepper(xform,iter));
});

cljs.core.stepper = (function stepper(xform,iter){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return result;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.Stepper((function (){var G__21048 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__21048) : xform.call(null,G__21048));
})(),iter));
});

/**
* @constructor
*/
cljs.core.MultiStepper = (function (xform,iters,nexts){
this.xform = xform;
this.iters = iters;
this.nexts = nexts;
})
cljs.core.MultiStepper.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
var iters__$1 = cljs.core.seq(self__.iters);
while(true){
if(!((iters__$1 == null))){
var iter = cljs.core.first(iters__$1);
if(cljs.core.not(iter.hasNext())){
return false;
} else {
var G__21050 = cljs.core.next(iters__$1);
iters__$1 = G__21050;
continue;
}
} else {
return true;
}
break;
}
});

cljs.core.MultiStepper.prototype.next = (function (){
var self__ = this;
var _ = this;
var n__18219__auto___21051 = self__.iters.length;
var i_21052 = (0);
while(true){
if((i_21052 < n__18219__auto___21051)){
(self__.nexts[i_21052] = (self__.iters[i_21052]).next());

var G__21053 = (i_21052 + (1));
i_21052 = G__21053;
continue;
} else {
}
break;
}

return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts,(0));
});

cljs.core.MultiStepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__17320__auto__ = !((lt.stepper == null));
if(and__17320__auto__){
return this$.hasNext();
} else {
return and__17320__auto__;
}
})())){
if(cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform,cljs.core.cons(lt,this$.next())))){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__21049 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__21049) : self__.xform.call(null,G__21049));
}
});

cljs.core.MultiStepper.cljs$lang$type = true;

cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";

cljs.core.MultiStepper.cljs$lang$ctorPrWriter = (function (this__17919__auto__,writer__17920__auto__,opt__17921__auto__){
return cljs.core._write(writer__17920__auto__,"cljs.core/MultiStepper");
});

cljs.core.__GT_MultiStepper = (function __GT_MultiStepper(xform,iters,nexts){
return (new cljs.core.MultiStepper(xform,iters,nexts));
});

cljs.core.multi_stepper = (function() {
var multi_stepper = null;
var multi_stepper__2 = (function (xform,iters){
return multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length)));
});
var multi_stepper__3 = (function (xform,iters,nexts){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return lt;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.MultiStepper((function (){var G__21058 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__21058) : xform.call(null,G__21058));
})(),iters,nexts));
});
multi_stepper = function(xform,iters,nexts){
switch(arguments.length){
case 2:
return multi_stepper__2.call(this,xform,iters);
case 3:
return multi_stepper__3.call(this,xform,iters,nexts);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
return multi_stepper;
})()
;

/**
* @constructor
*/
cljs.core.LazyTransformer = (function (stepper,first,rest,meta){
this.stepper = stepper;
this.first = first;
this.rest = rest;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31719628;
})
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return cljs.core._seq(self__.rest);
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return self__.first;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
self__.stepper.step(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return this$__$1;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.hash_ordered_coll(this$__$1);
});

cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){
var self__ = this;
var this$__$1 = this;
var s = cljs.core._seq(this$__$1);
if(!((s == null))){
return cljs.core.equiv_sequential(this$__$1,other);
} else {
return (cljs.core.sequential_QMARK_(other)) && ((cljs.core.seq(other) == null));
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,cljs.core._seq(this$__$1));
});

cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this$,new_meta){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.LazyTransformer(self__.stepper,self__.first,self__.rest,new_meta));
});

cljs.core.LazyTransformer.cljs$lang$type = true;

cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";

cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = (function (this__17919__auto__,writer__17920__auto__,opt__17921__auto__){
return cljs.core._write(writer__17920__auto__,"cljs.core/LazyTransformer");
});

cljs.core.__GT_LazyTransformer = (function __GT_LazyTransformer(stepper,first,rest,meta){
return (new cljs.core.LazyTransformer(stepper,first,rest,meta));
});

(cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18310__auto__ = this;
return cljs.core.es6_iterator(this__18310__auto__);
}));
cljs.core.LazyTransformer.create = (function (xform,coll){
return (new cljs.core.LazyTransformer(cljs.core.stepper(xform,cljs.core.iter(coll)),null,null,null));
});
cljs.core.LazyTransformer.createMulti = (function (xform,colls){
var iters = [];
var seq__21059_21063 = cljs.core.seq(colls);
var chunk__21060_21064 = null;
var count__21061_21065 = (0);
var i__21062_21066 = (0);
while(true){
if((i__21062_21066 < count__21061_21065)){
var coll_21067 = chunk__21060_21064.cljs$core$IIndexed$_nth$arity$2(null,i__21062_21066);
iters.push(cljs.core.iter(coll_21067));

var G__21068 = seq__21059_21063;
var G__21069 = chunk__21060_21064;
var G__21070 = count__21061_21065;
var G__21071 = (i__21062_21066 + (1));
seq__21059_21063 = G__21068;
chunk__21060_21064 = G__21069;
count__21061_21065 = G__21070;
i__21062_21066 = G__21071;
continue;
} else {
var temp__4126__auto___21072 = cljs.core.seq(seq__21059_21063);
if(temp__4126__auto___21072){
var seq__21059_21073__$1 = temp__4126__auto___21072;
if(cljs.core.chunked_seq_QMARK_(seq__21059_21073__$1)){
var c__18119__auto___21074 = cljs.core.chunk_first(seq__21059_21073__$1);
var G__21075 = cljs.core.chunk_rest(seq__21059_21073__$1);
var G__21076 = c__18119__auto___21074;
var G__21077 = cljs.core.count(c__18119__auto___21074);
var G__21078 = (0);
seq__21059_21063 = G__21075;
chunk__21060_21064 = G__21076;
count__21061_21065 = G__21077;
i__21062_21066 = G__21078;
continue;
} else {
var coll_21079 = cljs.core.first(seq__21059_21073__$1);
iters.push(cljs.core.iter(coll_21079));

var G__21080 = cljs.core.next(seq__21059_21073__$1);
var G__21081 = null;
var G__21082 = (0);
var G__21083 = (0);
seq__21059_21063 = G__21080;
chunk__21060_21064 = G__21081;
count__21061_21065 = G__21082;
i__21062_21066 = G__21083;
continue;
}
} else {
}
}
break;
}

return (new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length))),null,null,null));
});
/**
* Coerces coll to a (possibly empty) sequence, if it is not already
* one. Will not force a lazy seq. (sequence nil) yields (), When a
* transducer is supplied, returns a lazy sequence of applications of
* the transform to the items in coll(s), i.e. to the set of first
* items of each coll, followed by the set of second
* items in each coll, until any one of the colls is exhausted.  Any
* remaining items in other colls are ignored. The transform should accept
* number-of-colls arguments
* @param {...*} var_args
*/
cljs.core.sequence = (function() {
var sequence = null;
var sequence__1 = (function (coll){
if(cljs.core.seq_QMARK_(coll)){
return coll;
} else {
var or__17332__auto__ = cljs.core.seq(coll);
if(or__17332__auto__){
return or__17332__auto__;
} else {
return cljs.core.List.EMPTY;
}
}
});
var sequence__2 = (function (xform,coll){
return cljs.core.LazyTransformer.create(xform,coll);
});
var sequence__3 = (function() { 
var G__21084__delegate = function (xform,coll,colls){
return cljs.core.LazyTransformer.createMulti(xform,cljs.core.to_array(cljs.core.cons(coll,colls)));
};
var G__21084 = function (xform,coll,var_args){
var colls = null;
if (arguments.length > 2) {
var G__21085__i = 0, G__21085__a = new Array(arguments.length -  2);
while (G__21085__i < G__21085__a.length) {G__21085__a[G__21085__i] = arguments[G__21085__i + 2]; ++G__21085__i;}
  colls = new cljs.core.IndexedSeq(G__21085__a,0);
} 
return G__21084__delegate.call(this,xform,coll,colls);};
G__21084.cljs$lang$maxFixedArity = 2;
G__21084.cljs$lang$applyTo = (function (arglist__21086){
var xform = cljs.core.first(arglist__21086);
arglist__21086 = cljs.core.next(arglist__21086);
var coll = cljs.core.first(arglist__21086);
var colls = cljs.core.rest(arglist__21086);
return G__21084__delegate(xform,coll,colls);
});
G__21084.cljs$core$IFn$_invoke$arity$variadic = G__21084__delegate;
return G__21084;
})()
;
sequence = function(xform,coll,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return sequence__1.call(this,xform);
case 2:
return sequence__2.call(this,xform,coll);
default:
var G__21087 = null;
if (arguments.length > 2) {
var G__21088__i = 0, G__21088__a = new Array(arguments.length -  2);
while (G__21088__i < G__21088__a.length) {G__21088__a[G__21088__i] = arguments[G__21088__i + 2]; ++G__21088__i;}
G__21087 = new cljs.core.IndexedSeq(G__21088__a,0);
}
return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform,coll, G__21087);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sequence.cljs$lang$maxFixedArity = 2;
sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
return sequence;
})()
;
/**
* Returns true if (pred x) is logical true for every x in coll, else
* false.
*/
cljs.core.every_QMARK_ = (function every_QMARK_(pred,coll){
while(true){
if((cljs.core.seq(coll) == null)){
return true;
} else {
if(cljs.core.truth_((function (){var G__21090 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__21090) : pred.call(null,G__21090));
})())){
var G__21091 = pred;
var G__21092 = cljs.core.next(coll);
pred = G__21091;
coll = G__21092;
continue;
} else {
return false;

}
}
break;
}
});
/**
* Returns false if (pred x) is logical true for every x in
* coll, else true.
*/
cljs.core.not_every_QMARK_ = (function not_every_QMARK_(pred,coll){
return !(cljs.core.every_QMARK_(pred,coll));
});
/**
* Returns the first logical true value of (pred x) for any x in coll,
* else nil.  One common idiom is to use a set as pred, for example
* this will return :fred if :fred is in the sequence, otherwise nil:
* (some #{:fred} coll)
*/
cljs.core.some = (function some(pred,coll){
while(true){
if(cljs.core.seq(coll)){
var or__17332__auto__ = (function (){var G__21096 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__21096) : pred.call(null,G__21096));
})();
if(cljs.core.truth_(or__17332__auto__)){
return or__17332__auto__;
} else {
var G__21097 = pred;
var G__21098 = cljs.core.next(coll);
pred = G__21097;
coll = G__21098;
continue;
}
} else {
return null;
}
break;
}
});
/**
* Returns false if (pred x) is logical true for any x in coll,
* else true.
*/
cljs.core.not_any_QMARK_ = (function not_any_QMARK_(pred,coll){
return cljs.core.not(cljs.core.some(pred,coll));
});
/**
* Returns true if n is even, throws an exception if n is not an integer
*/
cljs.core.even_QMARK_ = (function even_QMARK_(n){
if(cljs.core.integer_QMARK_(n)){
return ((n & (1)) === (0));
} else {
throw (new Error([cljs.core.str("Argument must be an integer: "),cljs.core.str(n)].join('')));
}
});
/**
* Returns true if n is odd, throws an exception if n is not an integer
*/
cljs.core.odd_QMARK_ = (function odd_QMARK_(n){
return !(cljs.core.even_QMARK_(n));
});
/**
* Takes a fn f and returns a fn that takes the same arguments as f,
* has the same effects, if any, and returns the opposite truth value.
*/
cljs.core.complement = (function complement(f){
return (function() {
var G__21105 = null;
var G__21105__0 = (function (){
return cljs.core.not((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
});
var G__21105__1 = (function (x){
return cljs.core.not((function (){var G__21102 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21102) : f.call(null,G__21102));
})());
});
var G__21105__2 = (function (x,y){
return cljs.core.not((function (){var G__21103 = x;
var G__21104 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21103,G__21104) : f.call(null,G__21103,G__21104));
})());
});
var G__21105__3 = (function() { 
var G__21106__delegate = function (x,y,zs){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f,x,y,zs));
};
var G__21106 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__21107__i = 0, G__21107__a = new Array(arguments.length -  2);
while (G__21107__i < G__21107__a.length) {G__21107__a[G__21107__i] = arguments[G__21107__i + 2]; ++G__21107__i;}
  zs = new cljs.core.IndexedSeq(G__21107__a,0);
} 
return G__21106__delegate.call(this,x,y,zs);};
G__21106.cljs$lang$maxFixedArity = 2;
G__21106.cljs$lang$applyTo = (function (arglist__21108){
var x = cljs.core.first(arglist__21108);
arglist__21108 = cljs.core.next(arglist__21108);
var y = cljs.core.first(arglist__21108);
var zs = cljs.core.rest(arglist__21108);
return G__21106__delegate(x,y,zs);
});
G__21106.cljs$core$IFn$_invoke$arity$variadic = G__21106__delegate;
return G__21106;
})()
;
G__21105 = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return G__21105__0.call(this);
case 1:
return G__21105__1.call(this,x);
case 2:
return G__21105__2.call(this,x,y);
default:
var G__21109 = null;
if (arguments.length > 2) {
var G__21110__i = 0, G__21110__a = new Array(arguments.length -  2);
while (G__21110__i < G__21110__a.length) {G__21110__a[G__21110__i] = arguments[G__21110__i + 2]; ++G__21110__i;}
G__21109 = new cljs.core.IndexedSeq(G__21110__a,0);
}
return G__21105__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__21109);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21105.cljs$lang$maxFixedArity = 2;
G__21105.cljs$lang$applyTo = G__21105__3.cljs$lang$applyTo;
G__21105.cljs$core$IFn$_invoke$arity$0 = G__21105__0;
G__21105.cljs$core$IFn$_invoke$arity$1 = G__21105__1;
G__21105.cljs$core$IFn$_invoke$arity$2 = G__21105__2;
G__21105.cljs$core$IFn$_invoke$arity$variadic = G__21105__3.cljs$core$IFn$_invoke$arity$variadic;
return G__21105;
})()
});
/**
* Returns a function that takes any number of arguments and returns x.
*/
cljs.core.constantly = (function constantly(x){
return (function() { 
var G__21111__delegate = function (args){
return x;
};
var G__21111 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__21112__i = 0, G__21112__a = new Array(arguments.length -  0);
while (G__21112__i < G__21112__a.length) {G__21112__a[G__21112__i] = arguments[G__21112__i + 0]; ++G__21112__i;}
  args = new cljs.core.IndexedSeq(G__21112__a,0);
} 
return G__21111__delegate.call(this,args);};
G__21111.cljs$lang$maxFixedArity = 0;
G__21111.cljs$lang$applyTo = (function (arglist__21113){
var args = cljs.core.seq(arglist__21113);
return G__21111__delegate(args);
});
G__21111.cljs$core$IFn$_invoke$arity$variadic = G__21111__delegate;
return G__21111;
})()
;
});
/**
* Takes a set of functions and returns a fn that is the composition
* of those fns.  The returned fn takes a variable number of args,
* applies the rightmost of fns to the args, the next
* fn (right-to-left) to the result, etc.
* @param {...*} var_args
*/
cljs.core.comp = (function() {
var comp = null;
var comp__0 = (function (){
return cljs.core.identity;
});
var comp__1 = (function (f){
return f;
});
var comp__2 = (function (f,g){
return (function() {
var G__21168 = null;
var G__21168__0 = (function (){
var G__21141 = (function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21141) : f.call(null,G__21141));
});
var G__21168__1 = (function (x){
var G__21142 = (function (){var G__21143 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__21143) : g.call(null,G__21143));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21142) : f.call(null,G__21142));
});
var G__21168__2 = (function (x,y){
var G__21144 = (function (){var G__21145 = x;
var G__21146 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__21145,G__21146) : g.call(null,G__21145,G__21146));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21144) : f.call(null,G__21144));
});
var G__21168__3 = (function (x,y,z){
var G__21147 = (function (){var G__21148 = x;
var G__21149 = y;
var G__21150 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__21148,G__21149,G__21150) : g.call(null,G__21148,G__21149,G__21150));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21147) : f.call(null,G__21147));
});
var G__21168__4 = (function() { 
var G__21169__delegate = function (x,y,z,args){
var G__21151 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21151) : f.call(null,G__21151));
};
var G__21169 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__21170__i = 0, G__21170__a = new Array(arguments.length -  3);
while (G__21170__i < G__21170__a.length) {G__21170__a[G__21170__i] = arguments[G__21170__i + 3]; ++G__21170__i;}
  args = new cljs.core.IndexedSeq(G__21170__a,0);
} 
return G__21169__delegate.call(this,x,y,z,args);};
G__21169.cljs$lang$maxFixedArity = 3;
G__21169.cljs$lang$applyTo = (function (arglist__21171){
var x = cljs.core.first(arglist__21171);
arglist__21171 = cljs.core.next(arglist__21171);
var y = cljs.core.first(arglist__21171);
arglist__21171 = cljs.core.next(arglist__21171);
var z = cljs.core.first(arglist__21171);
var args = cljs.core.rest(arglist__21171);
return G__21169__delegate(x,y,z,args);
});
G__21169.cljs$core$IFn$_invoke$arity$variadic = G__21169__delegate;
return G__21169;
})()
;
G__21168 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__21168__0.call(this);
case 1:
return G__21168__1.call(this,x);
case 2:
return G__21168__2.call(this,x,y);
case 3:
return G__21168__3.call(this,x,y,z);
default:
var G__21172 = null;
if (arguments.length > 3) {
var G__21173__i = 0, G__21173__a = new Array(arguments.length -  3);
while (G__21173__i < G__21173__a.length) {G__21173__a[G__21173__i] = arguments[G__21173__i + 3]; ++G__21173__i;}
G__21172 = new cljs.core.IndexedSeq(G__21173__a,0);
}
return G__21168__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__21172);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21168.cljs$lang$maxFixedArity = 3;
G__21168.cljs$lang$applyTo = G__21168__4.cljs$lang$applyTo;
G__21168.cljs$core$IFn$_invoke$arity$0 = G__21168__0;
G__21168.cljs$core$IFn$_invoke$arity$1 = G__21168__1;
G__21168.cljs$core$IFn$_invoke$arity$2 = G__21168__2;
G__21168.cljs$core$IFn$_invoke$arity$3 = G__21168__3;
G__21168.cljs$core$IFn$_invoke$arity$variadic = G__21168__4.cljs$core$IFn$_invoke$arity$variadic;
return G__21168;
})()
});
var comp__3 = (function (f,g,h){
return (function() {
var G__21174 = null;
var G__21174__0 = (function (){
var G__21152 = (function (){var G__21153 = (function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__21153) : g.call(null,G__21153));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21152) : f.call(null,G__21152));
});
var G__21174__1 = (function (x){
var G__21154 = (function (){var G__21155 = (function (){var G__21156 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__21156) : h.call(null,G__21156));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__21155) : g.call(null,G__21155));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21154) : f.call(null,G__21154));
});
var G__21174__2 = (function (x,y){
var G__21157 = (function (){var G__21158 = (function (){var G__21159 = x;
var G__21160 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__21159,G__21160) : h.call(null,G__21159,G__21160));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__21158) : g.call(null,G__21158));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21157) : f.call(null,G__21157));
});
var G__21174__3 = (function (x,y,z){
var G__21161 = (function (){var G__21162 = (function (){var G__21163 = x;
var G__21164 = y;
var G__21165 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__21163,G__21164,G__21165) : h.call(null,G__21163,G__21164,G__21165));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__21162) : g.call(null,G__21162));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21161) : f.call(null,G__21161));
});
var G__21174__4 = (function() { 
var G__21175__delegate = function (x,y,z,args){
var G__21166 = (function (){var G__21167 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args);
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__21167) : g.call(null,G__21167));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21166) : f.call(null,G__21166));
};
var G__21175 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__21176__i = 0, G__21176__a = new Array(arguments.length -  3);
while (G__21176__i < G__21176__a.length) {G__21176__a[G__21176__i] = arguments[G__21176__i + 3]; ++G__21176__i;}
  args = new cljs.core.IndexedSeq(G__21176__a,0);
} 
return G__21175__delegate.call(this,x,y,z,args);};
G__21175.cljs$lang$maxFixedArity = 3;
G__21175.cljs$lang$applyTo = (function (arglist__21177){
var x = cljs.core.first(arglist__21177);
arglist__21177 = cljs.core.next(arglist__21177);
var y = cljs.core.first(arglist__21177);
arglist__21177 = cljs.core.next(arglist__21177);
var z = cljs.core.first(arglist__21177);
var args = cljs.core.rest(arglist__21177);
return G__21175__delegate(x,y,z,args);
});
G__21175.cljs$core$IFn$_invoke$arity$variadic = G__21175__delegate;
return G__21175;
})()
;
G__21174 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__21174__0.call(this);
case 1:
return G__21174__1.call(this,x);
case 2:
return G__21174__2.call(this,x,y);
case 3:
return G__21174__3.call(this,x,y,z);
default:
var G__21178 = null;
if (arguments.length > 3) {
var G__21179__i = 0, G__21179__a = new Array(arguments.length -  3);
while (G__21179__i < G__21179__a.length) {G__21179__a[G__21179__i] = arguments[G__21179__i + 3]; ++G__21179__i;}
G__21178 = new cljs.core.IndexedSeq(G__21179__a,0);
}
return G__21174__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__21178);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21174.cljs$lang$maxFixedArity = 3;
G__21174.cljs$lang$applyTo = G__21174__4.cljs$lang$applyTo;
G__21174.cljs$core$IFn$_invoke$arity$0 = G__21174__0;
G__21174.cljs$core$IFn$_invoke$arity$1 = G__21174__1;
G__21174.cljs$core$IFn$_invoke$arity$2 = G__21174__2;
G__21174.cljs$core$IFn$_invoke$arity$3 = G__21174__3;
G__21174.cljs$core$IFn$_invoke$arity$variadic = G__21174__4.cljs$core$IFn$_invoke$arity$variadic;
return G__21174;
})()
});
var comp__4 = (function() { 
var G__21180__delegate = function (f1,f2,f3,fs){
var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1,f2,f3,fs));
return ((function (fs__$1){
return (function() { 
var G__21181__delegate = function (args){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1),args);
var fs__$2 = cljs.core.next(fs__$1);
while(true){
if(fs__$2){
var G__21182 = cljs.core.first(fs__$2).call(null,ret);
var G__21183 = cljs.core.next(fs__$2);
ret = G__21182;
fs__$2 = G__21183;
continue;
} else {
return ret;
}
break;
}
};
var G__21181 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__21184__i = 0, G__21184__a = new Array(arguments.length -  0);
while (G__21184__i < G__21184__a.length) {G__21184__a[G__21184__i] = arguments[G__21184__i + 0]; ++G__21184__i;}
  args = new cljs.core.IndexedSeq(G__21184__a,0);
} 
return G__21181__delegate.call(this,args);};
G__21181.cljs$lang$maxFixedArity = 0;
G__21181.cljs$lang$applyTo = (function (arglist__21185){
var args = cljs.core.seq(arglist__21185);
return G__21181__delegate(args);
});
G__21181.cljs$core$IFn$_invoke$arity$variadic = G__21181__delegate;
return G__21181;
})()
;
;})(fs__$1))
};
var G__21180 = function (f1,f2,f3,var_args){
var fs = null;
if (arguments.length > 3) {
var G__21186__i = 0, G__21186__a = new Array(arguments.length -  3);
while (G__21186__i < G__21186__a.length) {G__21186__a[G__21186__i] = arguments[G__21186__i + 3]; ++G__21186__i;}
  fs = new cljs.core.IndexedSeq(G__21186__a,0);
} 
return G__21180__delegate.call(this,f1,f2,f3,fs);};
G__21180.cljs$lang$maxFixedArity = 3;
G__21180.cljs$lang$applyTo = (function (arglist__21187){
var f1 = cljs.core.first(arglist__21187);
arglist__21187 = cljs.core.next(arglist__21187);
var f2 = cljs.core.first(arglist__21187);
arglist__21187 = cljs.core.next(arglist__21187);
var f3 = cljs.core.first(arglist__21187);
var fs = cljs.core.rest(arglist__21187);
return G__21180__delegate(f1,f2,f3,fs);
});
G__21180.cljs$core$IFn$_invoke$arity$variadic = G__21180__delegate;
return G__21180;
})()
;
comp = function(f1,f2,f3,var_args){
var fs = var_args;
switch(arguments.length){
case 0:
return comp__0.call(this);
case 1:
return comp__1.call(this,f1);
case 2:
return comp__2.call(this,f1,f2);
case 3:
return comp__3.call(this,f1,f2,f3);
default:
var G__21188 = null;
if (arguments.length > 3) {
var G__21189__i = 0, G__21189__a = new Array(arguments.length -  3);
while (G__21189__i < G__21189__a.length) {G__21189__a[G__21189__i] = arguments[G__21189__i + 3]; ++G__21189__i;}
G__21188 = new cljs.core.IndexedSeq(G__21189__a,0);
}
return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1,f2,f3, G__21188);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
comp.cljs$lang$maxFixedArity = 3;
comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
return comp;
})()
;
/**
* Takes a function f and fewer than the normal arguments to f, and
* returns a fn that takes a variable number of additional args. When
* called, the returned function calls f with args + additional args.
* @param {...*} var_args
*/
cljs.core.partial = (function() {
var partial = null;
var partial__1 = (function (f){
return f;
});
var partial__2 = (function (f,arg1){
return (function() {
var G__21274 = null;
var G__21274__0 = (function (){
var G__21232 = arg1;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21232) : f.call(null,G__21232));
});
var G__21274__1 = (function (x){
var G__21233 = arg1;
var G__21234 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21233,G__21234) : f.call(null,G__21233,G__21234));
});
var G__21274__2 = (function (x,y){
var G__21235 = arg1;
var G__21236 = x;
var G__21237 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__21235,G__21236,G__21237) : f.call(null,G__21235,G__21236,G__21237));
});
var G__21274__3 = (function (x,y,z){
var G__21238 = arg1;
var G__21239 = x;
var G__21240 = y;
var G__21241 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__21238,G__21239,G__21240,G__21241) : f.call(null,G__21238,G__21239,G__21240,G__21241));
});
var G__21274__4 = (function() { 
var G__21275__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,x,y,z,cljs.core.array_seq([args], 0));
};
var G__21275 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__21276__i = 0, G__21276__a = new Array(arguments.length -  3);
while (G__21276__i < G__21276__a.length) {G__21276__a[G__21276__i] = arguments[G__21276__i + 3]; ++G__21276__i;}
  args = new cljs.core.IndexedSeq(G__21276__a,0);
} 
return G__21275__delegate.call(this,x,y,z,args);};
G__21275.cljs$lang$maxFixedArity = 3;
G__21275.cljs$lang$applyTo = (function (arglist__21277){
var x = cljs.core.first(arglist__21277);
arglist__21277 = cljs.core.next(arglist__21277);
var y = cljs.core.first(arglist__21277);
arglist__21277 = cljs.core.next(arglist__21277);
var z = cljs.core.first(arglist__21277);
var args = cljs.core.rest(arglist__21277);
return G__21275__delegate(x,y,z,args);
});
G__21275.cljs$core$IFn$_invoke$arity$variadic = G__21275__delegate;
return G__21275;
})()
;
G__21274 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__21274__0.call(this);
case 1:
return G__21274__1.call(this,x);
case 2:
return G__21274__2.call(this,x,y);
case 3:
return G__21274__3.call(this,x,y,z);
default:
var G__21278 = null;
if (arguments.length > 3) {
var G__21279__i = 0, G__21279__a = new Array(arguments.length -  3);
while (G__21279__i < G__21279__a.length) {G__21279__a[G__21279__i] = arguments[G__21279__i + 3]; ++G__21279__i;}
G__21278 = new cljs.core.IndexedSeq(G__21279__a,0);
}
return G__21274__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__21278);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21274.cljs$lang$maxFixedArity = 3;
G__21274.cljs$lang$applyTo = G__21274__4.cljs$lang$applyTo;
G__21274.cljs$core$IFn$_invoke$arity$0 = G__21274__0;
G__21274.cljs$core$IFn$_invoke$arity$1 = G__21274__1;
G__21274.cljs$core$IFn$_invoke$arity$2 = G__21274__2;
G__21274.cljs$core$IFn$_invoke$arity$3 = G__21274__3;
G__21274.cljs$core$IFn$_invoke$arity$variadic = G__21274__4.cljs$core$IFn$_invoke$arity$variadic;
return G__21274;
})()
});
var partial__3 = (function (f,arg1,arg2){
return (function() {
var G__21280 = null;
var G__21280__0 = (function (){
var G__21242 = arg1;
var G__21243 = arg2;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21242,G__21243) : f.call(null,G__21242,G__21243));
});
var G__21280__1 = (function (x){
var G__21244 = arg1;
var G__21245 = arg2;
var G__21246 = x;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__21244,G__21245,G__21246) : f.call(null,G__21244,G__21245,G__21246));
});
var G__21280__2 = (function (x,y){
var G__21247 = arg1;
var G__21248 = arg2;
var G__21249 = x;
var G__21250 = y;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__21247,G__21248,G__21249,G__21250) : f.call(null,G__21247,G__21248,G__21249,G__21250));
});
var G__21280__3 = (function (x,y,z){
var G__21251 = arg1;
var G__21252 = arg2;
var G__21253 = x;
var G__21254 = y;
var G__21255 = z;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__21251,G__21252,G__21253,G__21254,G__21255) : f.call(null,G__21251,G__21252,G__21253,G__21254,G__21255));
});
var G__21280__4 = (function() { 
var G__21281__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,x,y,cljs.core.array_seq([z,args], 0));
};
var G__21281 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__21282__i = 0, G__21282__a = new Array(arguments.length -  3);
while (G__21282__i < G__21282__a.length) {G__21282__a[G__21282__i] = arguments[G__21282__i + 3]; ++G__21282__i;}
  args = new cljs.core.IndexedSeq(G__21282__a,0);
} 
return G__21281__delegate.call(this,x,y,z,args);};
G__21281.cljs$lang$maxFixedArity = 3;
G__21281.cljs$lang$applyTo = (function (arglist__21283){
var x = cljs.core.first(arglist__21283);
arglist__21283 = cljs.core.next(arglist__21283);
var y = cljs.core.first(arglist__21283);
arglist__21283 = cljs.core.next(arglist__21283);
var z = cljs.core.first(arglist__21283);
var args = cljs.core.rest(arglist__21283);
return G__21281__delegate(x,y,z,args);
});
G__21281.cljs$core$IFn$_invoke$arity$variadic = G__21281__delegate;
return G__21281;
})()
;
G__21280 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__21280__0.call(this);
case 1:
return G__21280__1.call(this,x);
case 2:
return G__21280__2.call(this,x,y);
case 3:
return G__21280__3.call(this,x,y,z);
default:
var G__21284 = null;
if (arguments.length > 3) {
var G__21285__i = 0, G__21285__a = new Array(arguments.length -  3);
while (G__21285__i < G__21285__a.length) {G__21285__a[G__21285__i] = arguments[G__21285__i + 3]; ++G__21285__i;}
G__21284 = new cljs.core.IndexedSeq(G__21285__a,0);
}
return G__21280__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__21284);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21280.cljs$lang$maxFixedArity = 3;
G__21280.cljs$lang$applyTo = G__21280__4.cljs$lang$applyTo;
G__21280.cljs$core$IFn$_invoke$arity$0 = G__21280__0;
G__21280.cljs$core$IFn$_invoke$arity$1 = G__21280__1;
G__21280.cljs$core$IFn$_invoke$arity$2 = G__21280__2;
G__21280.cljs$core$IFn$_invoke$arity$3 = G__21280__3;
G__21280.cljs$core$IFn$_invoke$arity$variadic = G__21280__4.cljs$core$IFn$_invoke$arity$variadic;
return G__21280;
})()
});
var partial__4 = (function (f,arg1,arg2,arg3){
return (function() {
var G__21286 = null;
var G__21286__0 = (function (){
var G__21256 = arg1;
var G__21257 = arg2;
var G__21258 = arg3;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__21256,G__21257,G__21258) : f.call(null,G__21256,G__21257,G__21258));
});
var G__21286__1 = (function (x){
var G__21259 = arg1;
var G__21260 = arg2;
var G__21261 = arg3;
var G__21262 = x;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__21259,G__21260,G__21261,G__21262) : f.call(null,G__21259,G__21260,G__21261,G__21262));
});
var G__21286__2 = (function (x,y){
var G__21263 = arg1;
var G__21264 = arg2;
var G__21265 = arg3;
var G__21266 = x;
var G__21267 = y;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__21263,G__21264,G__21265,G__21266,G__21267) : f.call(null,G__21263,G__21264,G__21265,G__21266,G__21267));
});
var G__21286__3 = (function (x,y,z){
var G__21268 = arg1;
var G__21269 = arg2;
var G__21270 = arg3;
var G__21271 = x;
var G__21272 = y;
var G__21273 = z;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__21268,G__21269,G__21270,G__21271,G__21272,G__21273) : f.call(null,G__21268,G__21269,G__21270,G__21271,G__21272,G__21273));
});
var G__21286__4 = (function() { 
var G__21287__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3,x,cljs.core.array_seq([y,z,args], 0));
};
var G__21287 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__21288__i = 0, G__21288__a = new Array(arguments.length -  3);
while (G__21288__i < G__21288__a.length) {G__21288__a[G__21288__i] = arguments[G__21288__i + 3]; ++G__21288__i;}
  args = new cljs.core.IndexedSeq(G__21288__a,0);
} 
return G__21287__delegate.call(this,x,y,z,args);};
G__21287.cljs$lang$maxFixedArity = 3;
G__21287.cljs$lang$applyTo = (function (arglist__21289){
var x = cljs.core.first(arglist__21289);
arglist__21289 = cljs.core.next(arglist__21289);
var y = cljs.core.first(arglist__21289);
arglist__21289 = cljs.core.next(arglist__21289);
var z = cljs.core.first(arglist__21289);
var args = cljs.core.rest(arglist__21289);
return G__21287__delegate(x,y,z,args);
});
G__21287.cljs$core$IFn$_invoke$arity$variadic = G__21287__delegate;
return G__21287;
})()
;
G__21286 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__21286__0.call(this);
case 1:
return G__21286__1.call(this,x);
case 2:
return G__21286__2.call(this,x,y);
case 3:
return G__21286__3.call(this,x,y,z);
default:
var G__21290 = null;
if (arguments.length > 3) {
var G__21291__i = 0, G__21291__a = new Array(arguments.length -  3);
while (G__21291__i < G__21291__a.length) {G__21291__a[G__21291__i] = arguments[G__21291__i + 3]; ++G__21291__i;}
G__21290 = new cljs.core.IndexedSeq(G__21291__a,0);
}
return G__21286__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__21290);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21286.cljs$lang$maxFixedArity = 3;
G__21286.cljs$lang$applyTo = G__21286__4.cljs$lang$applyTo;
G__21286.cljs$core$IFn$_invoke$arity$0 = G__21286__0;
G__21286.cljs$core$IFn$_invoke$arity$1 = G__21286__1;
G__21286.cljs$core$IFn$_invoke$arity$2 = G__21286__2;
G__21286.cljs$core$IFn$_invoke$arity$3 = G__21286__3;
G__21286.cljs$core$IFn$_invoke$arity$variadic = G__21286__4.cljs$core$IFn$_invoke$arity$variadic;
return G__21286;
})()
});
var partial__5 = (function() { 
var G__21292__delegate = function (f,arg1,arg2,arg3,more){
return (function() { 
var G__21293__delegate = function (args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,arg1,arg2,arg3,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more,args));
};
var G__21293 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__21294__i = 0, G__21294__a = new Array(arguments.length -  0);
while (G__21294__i < G__21294__a.length) {G__21294__a[G__21294__i] = arguments[G__21294__i + 0]; ++G__21294__i;}
  args = new cljs.core.IndexedSeq(G__21294__a,0);
} 
return G__21293__delegate.call(this,args);};
G__21293.cljs$lang$maxFixedArity = 0;
G__21293.cljs$lang$applyTo = (function (arglist__21295){
var args = cljs.core.seq(arglist__21295);
return G__21293__delegate(args);
});
G__21293.cljs$core$IFn$_invoke$arity$variadic = G__21293__delegate;
return G__21293;
})()
;
};
var G__21292 = function (f,arg1,arg2,arg3,var_args){
var more = null;
if (arguments.length > 4) {
var G__21296__i = 0, G__21296__a = new Array(arguments.length -  4);
while (G__21296__i < G__21296__a.length) {G__21296__a[G__21296__i] = arguments[G__21296__i + 4]; ++G__21296__i;}
  more = new cljs.core.IndexedSeq(G__21296__a,0);
} 
return G__21292__delegate.call(this,f,arg1,arg2,arg3,more);};
G__21292.cljs$lang$maxFixedArity = 4;
G__21292.cljs$lang$applyTo = (function (arglist__21297){
var f = cljs.core.first(arglist__21297);
arglist__21297 = cljs.core.next(arglist__21297);
var arg1 = cljs.core.first(arglist__21297);
arglist__21297 = cljs.core.next(arglist__21297);
var arg2 = cljs.core.first(arglist__21297);
arglist__21297 = cljs.core.next(arglist__21297);
var arg3 = cljs.core.first(arglist__21297);
var more = cljs.core.rest(arglist__21297);
return G__21292__delegate(f,arg1,arg2,arg3,more);
});
G__21292.cljs$core$IFn$_invoke$arity$variadic = G__21292__delegate;
return G__21292;
})()
;
partial = function(f,arg1,arg2,arg3,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return partial__1.call(this,f);
case 2:
return partial__2.call(this,f,arg1);
case 3:
return partial__3.call(this,f,arg1,arg2);
case 4:
return partial__4.call(this,f,arg1,arg2,arg3);
default:
var G__21298 = null;
if (arguments.length > 4) {
var G__21299__i = 0, G__21299__a = new Array(arguments.length -  4);
while (G__21299__i < G__21299__a.length) {G__21299__a[G__21299__i] = arguments[G__21299__i + 4]; ++G__21299__i;}
G__21298 = new cljs.core.IndexedSeq(G__21299__a,0);
}
return partial__5.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3, G__21298);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partial.cljs$lang$maxFixedArity = 4;
partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
return partial;
})()
;
/**
* Takes a function f, and returns a function that calls f, replacing
* a nil first argument to f with the supplied value x. Higher arity
* versions can replace arguments in the second and third
* positions (y, z). Note that the function f can take any number of
* arguments, not just the one(s) being nil-patched.
*/
cljs.core.fnil = (function() {
var fnil = null;
var fnil__2 = (function (f,x){
return (function() {
var G__21332 = null;
var G__21332__1 = (function (a){
var G__21316 = (((a == null))?x:a);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21316) : f.call(null,G__21316));
});
var G__21332__2 = (function (a,b){
var G__21317 = (((a == null))?x:a);
var G__21318 = b;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21317,G__21318) : f.call(null,G__21317,G__21318));
});
var G__21332__3 = (function (a,b,c){
var G__21319 = (((a == null))?x:a);
var G__21320 = b;
var G__21321 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__21319,G__21320,G__21321) : f.call(null,G__21319,G__21320,G__21321));
});
var G__21332__4 = (function() { 
var G__21333__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),b,c,ds);
};
var G__21333 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__21334__i = 0, G__21334__a = new Array(arguments.length -  3);
while (G__21334__i < G__21334__a.length) {G__21334__a[G__21334__i] = arguments[G__21334__i + 3]; ++G__21334__i;}
  ds = new cljs.core.IndexedSeq(G__21334__a,0);
} 
return G__21333__delegate.call(this,a,b,c,ds);};
G__21333.cljs$lang$maxFixedArity = 3;
G__21333.cljs$lang$applyTo = (function (arglist__21335){
var a = cljs.core.first(arglist__21335);
arglist__21335 = cljs.core.next(arglist__21335);
var b = cljs.core.first(arglist__21335);
arglist__21335 = cljs.core.next(arglist__21335);
var c = cljs.core.first(arglist__21335);
var ds = cljs.core.rest(arglist__21335);
return G__21333__delegate(a,b,c,ds);
});
G__21333.cljs$core$IFn$_invoke$arity$variadic = G__21333__delegate;
return G__21333;
})()
;
G__21332 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 1:
return G__21332__1.call(this,a);
case 2:
return G__21332__2.call(this,a,b);
case 3:
return G__21332__3.call(this,a,b,c);
default:
var G__21336 = null;
if (arguments.length > 3) {
var G__21337__i = 0, G__21337__a = new Array(arguments.length -  3);
while (G__21337__i < G__21337__a.length) {G__21337__a[G__21337__i] = arguments[G__21337__i + 3]; ++G__21337__i;}
G__21336 = new cljs.core.IndexedSeq(G__21337__a,0);
}
return G__21332__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__21336);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21332.cljs$lang$maxFixedArity = 3;
G__21332.cljs$lang$applyTo = G__21332__4.cljs$lang$applyTo;
G__21332.cljs$core$IFn$_invoke$arity$1 = G__21332__1;
G__21332.cljs$core$IFn$_invoke$arity$2 = G__21332__2;
G__21332.cljs$core$IFn$_invoke$arity$3 = G__21332__3;
G__21332.cljs$core$IFn$_invoke$arity$variadic = G__21332__4.cljs$core$IFn$_invoke$arity$variadic;
return G__21332;
})()
});
var fnil__3 = (function (f,x,y){
return (function() {
var G__21338 = null;
var G__21338__2 = (function (a,b){
var G__21322 = (((a == null))?x:a);
var G__21323 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21322,G__21323) : f.call(null,G__21322,G__21323));
});
var G__21338__3 = (function (a,b,c){
var G__21324 = (((a == null))?x:a);
var G__21325 = (((b == null))?y:b);
var G__21326 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__21324,G__21325,G__21326) : f.call(null,G__21324,G__21325,G__21326));
});
var G__21338__4 = (function() { 
var G__21339__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),c,ds);
};
var G__21339 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__21340__i = 0, G__21340__a = new Array(arguments.length -  3);
while (G__21340__i < G__21340__a.length) {G__21340__a[G__21340__i] = arguments[G__21340__i + 3]; ++G__21340__i;}
  ds = new cljs.core.IndexedSeq(G__21340__a,0);
} 
return G__21339__delegate.call(this,a,b,c,ds);};
G__21339.cljs$lang$maxFixedArity = 3;
G__21339.cljs$lang$applyTo = (function (arglist__21341){
var a = cljs.core.first(arglist__21341);
arglist__21341 = cljs.core.next(arglist__21341);
var b = cljs.core.first(arglist__21341);
arglist__21341 = cljs.core.next(arglist__21341);
var c = cljs.core.first(arglist__21341);
var ds = cljs.core.rest(arglist__21341);
return G__21339__delegate(a,b,c,ds);
});
G__21339.cljs$core$IFn$_invoke$arity$variadic = G__21339__delegate;
return G__21339;
})()
;
G__21338 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__21338__2.call(this,a,b);
case 3:
return G__21338__3.call(this,a,b,c);
default:
var G__21342 = null;
if (arguments.length > 3) {
var G__21343__i = 0, G__21343__a = new Array(arguments.length -  3);
while (G__21343__i < G__21343__a.length) {G__21343__a[G__21343__i] = arguments[G__21343__i + 3]; ++G__21343__i;}
G__21342 = new cljs.core.IndexedSeq(G__21343__a,0);
}
return G__21338__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__21342);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21338.cljs$lang$maxFixedArity = 3;
G__21338.cljs$lang$applyTo = G__21338__4.cljs$lang$applyTo;
G__21338.cljs$core$IFn$_invoke$arity$2 = G__21338__2;
G__21338.cljs$core$IFn$_invoke$arity$3 = G__21338__3;
G__21338.cljs$core$IFn$_invoke$arity$variadic = G__21338__4.cljs$core$IFn$_invoke$arity$variadic;
return G__21338;
})()
});
var fnil__4 = (function (f,x,y,z){
return (function() {
var G__21344 = null;
var G__21344__2 = (function (a,b){
var G__21327 = (((a == null))?x:a);
var G__21328 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21327,G__21328) : f.call(null,G__21327,G__21328));
});
var G__21344__3 = (function (a,b,c){
var G__21329 = (((a == null))?x:a);
var G__21330 = (((b == null))?y:b);
var G__21331 = (((c == null))?z:c);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__21329,G__21330,G__21331) : f.call(null,G__21329,G__21330,G__21331));
});
var G__21344__4 = (function() { 
var G__21345__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),(((c == null))?z:c),ds);
};
var G__21345 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__21346__i = 0, G__21346__a = new Array(arguments.length -  3);
while (G__21346__i < G__21346__a.length) {G__21346__a[G__21346__i] = arguments[G__21346__i + 3]; ++G__21346__i;}
  ds = new cljs.core.IndexedSeq(G__21346__a,0);
} 
return G__21345__delegate.call(this,a,b,c,ds);};
G__21345.cljs$lang$maxFixedArity = 3;
G__21345.cljs$lang$applyTo = (function (arglist__21347){
var a = cljs.core.first(arglist__21347);
arglist__21347 = cljs.core.next(arglist__21347);
var b = cljs.core.first(arglist__21347);
arglist__21347 = cljs.core.next(arglist__21347);
var c = cljs.core.first(arglist__21347);
var ds = cljs.core.rest(arglist__21347);
return G__21345__delegate(a,b,c,ds);
});
G__21345.cljs$core$IFn$_invoke$arity$variadic = G__21345__delegate;
return G__21345;
})()
;
G__21344 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__21344__2.call(this,a,b);
case 3:
return G__21344__3.call(this,a,b,c);
default:
var G__21348 = null;
if (arguments.length > 3) {
var G__21349__i = 0, G__21349__a = new Array(arguments.length -  3);
while (G__21349__i < G__21349__a.length) {G__21349__a[G__21349__i] = arguments[G__21349__i + 3]; ++G__21349__i;}
G__21348 = new cljs.core.IndexedSeq(G__21349__a,0);
}
return G__21344__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__21348);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21344.cljs$lang$maxFixedArity = 3;
G__21344.cljs$lang$applyTo = G__21344__4.cljs$lang$applyTo;
G__21344.cljs$core$IFn$_invoke$arity$2 = G__21344__2;
G__21344.cljs$core$IFn$_invoke$arity$3 = G__21344__3;
G__21344.cljs$core$IFn$_invoke$arity$variadic = G__21344__4.cljs$core$IFn$_invoke$arity$variadic;
return G__21344;
})()
});
fnil = function(f,x,y,z){
switch(arguments.length){
case 2:
return fnil__2.call(this,f,x);
case 3:
return fnil__3.call(this,f,x,y);
case 4:
return fnil__4.call(this,f,x,y,z);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
return fnil;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to 0
* and the first item of coll, followed by applying f to 1 and the second
* item in coll, etc, until coll is exhausted. Thus function f should
* accept 2 arguments, index and item.
*/
cljs.core.map_indexed = (function() {
var map_indexed = null;
var map_indexed__1 = (function (f){
return (function (rf){
var i = (function (){var G__21380 = (-1);
return (cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__21380) : cljs.core.volatile_BANG_.call(null,G__21380));
})();
return ((function (i){
return (function() {
var G__21410 = null;
var G__21410__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__21410__1 = (function (result){
var G__21381 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__21381) : rf.call(null,G__21381));
});
var G__21410__2 = (function (result,input){
var G__21382 = result;
var G__21383 = (function (){var G__21384 = cljs.core._vreset_BANG_(i,(cljs.core._deref(i) + (1)));
var G__21385 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21384,G__21385) : f.call(null,G__21384,G__21385));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__21382,G__21383) : rf.call(null,G__21382,G__21383));
});
G__21410 = function(result,input){
switch(arguments.length){
case 0:
return G__21410__0.call(this);
case 1:
return G__21410__1.call(this,result);
case 2:
return G__21410__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21410.cljs$core$IFn$_invoke$arity$0 = G__21410__0;
G__21410.cljs$core$IFn$_invoke$arity$1 = G__21410__1;
G__21410.cljs$core$IFn$_invoke$arity$2 = G__21410__2;
return G__21410;
})()
;})(i))
});
});
var map_indexed__2 = (function (f,coll){
var mapi = (function mapi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__18219__auto___21411 = size;
var i_21412 = (0);
while(true){
if((i_21412 < n__18219__auto___21411)){
cljs.core.chunk_append(b,(function (){var G__21406 = (idx + i_21412);
var G__21407 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_21412);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21406,G__21407) : f.call(null,G__21406,G__21407));
})());

var G__21413 = (i_21412 + (1));
i_21412 = G__21413;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),mapi((idx + size),cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__21408 = idx;
var G__21409 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21408,G__21409) : f.call(null,G__21408,G__21409));
})(),mapi((idx + (1)),cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
return mapi((0),coll);
});
map_indexed = function(f,coll){
switch(arguments.length){
case 1:
return map_indexed__1.call(this,f);
case 2:
return map_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map_indexed.cljs$core$IFn$_invoke$arity$1 = map_indexed__1;
map_indexed.cljs$core$IFn$_invoke$arity$2 = map_indexed__2;
return map_indexed;
})()
;
/**
* Returns a lazy sequence of the non-nil results of (f item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a transducer when no collection is provided.
*/
cljs.core.keep = (function() {
var keep = null;
var keep__1 = (function (f){
return (function (rf){
return (function() {
var G__21432 = null;
var G__21432__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__21432__1 = (function (result){
var G__21426 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__21426) : rf.call(null,G__21426));
});
var G__21432__2 = (function (result,input){
var v = (function (){var G__21427 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21427) : f.call(null,G__21427));
})();
if((v == null)){
return result;
} else {
var G__21428 = result;
var G__21429 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__21428,G__21429) : rf.call(null,G__21428,G__21429));
}
});
G__21432 = function(result,input){
switch(arguments.length){
case 0:
return G__21432__0.call(this);
case 1:
return G__21432__1.call(this,result);
case 2:
return G__21432__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21432.cljs$core$IFn$_invoke$arity$0 = G__21432__0;
G__21432.cljs$core$IFn$_invoke$arity$1 = G__21432__1;
G__21432.cljs$core$IFn$_invoke$arity$2 = G__21432__2;
return G__21432;
})()
});
});
var keep__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__18219__auto___21433 = size;
var i_21434 = (0);
while(true){
if((i_21434 < n__18219__auto___21433)){
var x_21435 = (function (){var G__21430 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_21434);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21430) : f.call(null,G__21430));
})();
if((x_21435 == null)){
} else {
cljs.core.chunk_append(b,x_21435);
}

var G__21436 = (i_21434 + (1));
i_21434 = G__21436;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__21431 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21431) : f.call(null,G__21431));
})();
if((x == null)){
return keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s));
} else {
return cljs.core.cons(x,keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
keep = function(f,coll){
switch(arguments.length){
case 1:
return keep__1.call(this,f);
case 2:
return keep__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
return keep;
})()
;

/**
* @constructor
*/
cljs.core.Atom = (function (state,meta,validator,watches){
this.state = state;
this.meta = meta;
this.validator = validator;
this.watches = watches;
this.cljs$lang$protocol_mask$partition0$ = 6455296;
this.cljs$lang$protocol_mask$partition1$ = 16386;
})
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__21437 = this$__$1;
return goog.getUid(G__21437);
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,oldval,newval){
var self__ = this;
var this$__$1 = this;
var seq__21438 = cljs.core.seq(self__.watches);
var chunk__21439 = null;
var count__21440 = (0);
var i__21441 = (0);
while(true){
if((i__21441 < count__21440)){
var vec__21442 = chunk__21439.cljs$core$IIndexed$_nth$arity$2(null,i__21441);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21442,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21442,(1),null);
var G__21443_21452 = key;
var G__21444_21453 = this$__$1;
var G__21445_21454 = oldval;
var G__21446_21455 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__21443_21452,G__21444_21453,G__21445_21454,G__21446_21455) : f.call(null,G__21443_21452,G__21444_21453,G__21445_21454,G__21446_21455));

var G__21456 = seq__21438;
var G__21457 = chunk__21439;
var G__21458 = count__21440;
var G__21459 = (i__21441 + (1));
seq__21438 = G__21456;
chunk__21439 = G__21457;
count__21440 = G__21458;
i__21441 = G__21459;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__21438);
if(temp__4126__auto__){
var seq__21438__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__21438__$1)){
var c__18119__auto__ = cljs.core.chunk_first(seq__21438__$1);
var G__21460 = cljs.core.chunk_rest(seq__21438__$1);
var G__21461 = c__18119__auto__;
var G__21462 = cljs.core.count(c__18119__auto__);
var G__21463 = (0);
seq__21438 = G__21460;
chunk__21439 = G__21461;
count__21440 = G__21462;
i__21441 = G__21463;
continue;
} else {
var vec__21447 = cljs.core.first(seq__21438__$1);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21447,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21447,(1),null);
var G__21448_21464 = key;
var G__21449_21465 = this$__$1;
var G__21450_21466 = oldval;
var G__21451_21467 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__21448_21464,G__21449_21465,G__21450_21466,G__21451_21467) : f.call(null,G__21448_21464,G__21449_21465,G__21450_21466,G__21451_21467));

var G__21468 = cljs.core.next(seq__21438__$1);
var G__21469 = null;
var G__21470 = (0);
var G__21471 = (0);
seq__21438 = G__21468;
chunk__21439 = G__21469;
count__21440 = G__21470;
i__21441 = G__21471;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){
var self__ = this;
var this$__$1 = this;
this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches,key,f);

return this$__$1;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){
var self__ = this;
var this$__$1 = this;
return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches,key);
});

cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return (o__$1 === other);
});

cljs.core.Atom.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Atom.cljs$lang$type = true;

cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";

cljs.core.Atom.cljs$lang$ctorPrWriter = (function (this__17919__auto__,writer__17920__auto__,opt__17921__auto__){
return cljs.core._write(writer__17920__auto__,"cljs.core/Atom");
});

cljs.core.__GT_Atom = (function __GT_Atom(state,meta,validator,watches){
return (new cljs.core.Atom(state,meta,validator,watches));
});

/**
* Creates and returns an Atom with an initial value of x and zero or
* more options (in any order):
* 
* :meta metadata-map
* 
* :validator validate-fn
* 
* If metadata-map is supplied, it will be come the metadata on the
* atom. validate-fn must be nil or a side-effect-free fn of one
* argument, which will be passed the intended new state on any state
* change. If the new state is unacceptable, the validate-fn should
* return false or throw an Error.  If either of these error conditions
* occur, then the value of the atom will not change.
* @param {...*} var_args
*/
cljs.core.atom = (function() {
var atom = null;
var atom__1 = (function (x){
return (new cljs.core.Atom(x,null,null,null));
});
var atom__2 = (function() { 
var G__21475__delegate = function (x,p__21472){
var map__21474 = p__21472;
var map__21474__$1 = ((cljs.core.seq_QMARK_(map__21474))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__21474):map__21474);
var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21474__$1,new cljs.core.Keyword(null,"validator","validator",-1966190681));
var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21474__$1,new cljs.core.Keyword(null,"meta","meta",1499536964));
return (new cljs.core.Atom(x,meta,validator,null));
};
var G__21475 = function (x,var_args){
var p__21472 = null;
if (arguments.length > 1) {
var G__21476__i = 0, G__21476__a = new Array(arguments.length -  1);
while (G__21476__i < G__21476__a.length) {G__21476__a[G__21476__i] = arguments[G__21476__i + 1]; ++G__21476__i;}
  p__21472 = new cljs.core.IndexedSeq(G__21476__a,0);
} 
return G__21475__delegate.call(this,x,p__21472);};
G__21475.cljs$lang$maxFixedArity = 1;
G__21475.cljs$lang$applyTo = (function (arglist__21477){
var x = cljs.core.first(arglist__21477);
var p__21472 = cljs.core.rest(arglist__21477);
return G__21475__delegate(x,p__21472);
});
G__21475.cljs$core$IFn$_invoke$arity$variadic = G__21475__delegate;
return G__21475;
})()
;
atom = function(x,var_args){
var p__21472 = var_args;
switch(arguments.length){
case 1:
return atom__1.call(this,x);
default:
var G__21478 = null;
if (arguments.length > 1) {
var G__21479__i = 0, G__21479__a = new Array(arguments.length -  1);
while (G__21479__i < G__21479__a.length) {G__21479__a[G__21479__i] = arguments[G__21479__i + 1]; ++G__21479__i;}
G__21478 = new cljs.core.IndexedSeq(G__21479__a,0);
}
return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__21478);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
atom.cljs$lang$maxFixedArity = 1;
atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
return atom;
})()
;
/**
* Sets the value of atom to newval without regard for the
* current value. Returns newval.
*/
cljs.core.reset_BANG_ = (function reset_BANG_(a,new_value){
if((a instanceof cljs.core.Atom)){
var validate = a.validator;
if((validate == null)){
} else {
if(cljs.core.truth_((function (){var G__21482 = new_value;
return (validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__21482) : validate.call(null,G__21482));
})())){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str("Validator rejected reference state"),cljs.core.str("\n"),cljs.core.str((function (){var G__21483 = cljs.core.list(new cljs.core.Symbol(null,"validate","validate",1439230700,null),new cljs.core.Symbol(null,"new-value","new-value",-1567397401,null));
return (cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__21483) : cljs.core.pr_str.call(null,G__21483));
})())].join('')));
}
}

var old_value = a.state;
a.state = new_value;

if((a.watches == null)){
} else {
cljs.core._notify_watches(a,old_value,new_value);
}

return new_value;
} else {
return cljs.core._reset_BANG_(a,new_value);
}
});
/**
* Atomically swaps the value of atom to be:
* (apply f current-value-of-atom args). Note that f may be called
* multiple times, and thus should be free of side effects.  Returns
* the value that was swapped in.
* @param {...*} var_args
*/
cljs.core.swap_BANG_ = (function() {
var swap_BANG_ = null;
var swap_BANG___2 = (function (a,f){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__21490 = a.state;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21490) : f.call(null,G__21490));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a,f);
}
});
var swap_BANG___3 = (function (a,f,x){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__21491 = a.state;
var G__21492 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21491,G__21492) : f.call(null,G__21491,G__21492));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a,f,x);
}
});
var swap_BANG___4 = (function (a,f,x,y){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__21493 = a.state;
var G__21494 = x;
var G__21495 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__21493,G__21494,G__21495) : f.call(null,G__21493,G__21494,G__21495));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a,f,x,y);
}
});
var swap_BANG___5 = (function() { 
var G__21496__delegate = function (a,f,x,y,more){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more));
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a,f,x,y,more);
}
};
var G__21496 = function (a,f,x,y,var_args){
var more = null;
if (arguments.length > 4) {
var G__21497__i = 0, G__21497__a = new Array(arguments.length -  4);
while (G__21497__i < G__21497__a.length) {G__21497__a[G__21497__i] = arguments[G__21497__i + 4]; ++G__21497__i;}
  more = new cljs.core.IndexedSeq(G__21497__a,0);
} 
return G__21496__delegate.call(this,a,f,x,y,more);};
G__21496.cljs$lang$maxFixedArity = 4;
G__21496.cljs$lang$applyTo = (function (arglist__21498){
var a = cljs.core.first(arglist__21498);
arglist__21498 = cljs.core.next(arglist__21498);
var f = cljs.core.first(arglist__21498);
arglist__21498 = cljs.core.next(arglist__21498);
var x = cljs.core.first(arglist__21498);
arglist__21498 = cljs.core.next(arglist__21498);
var y = cljs.core.first(arglist__21498);
var more = cljs.core.rest(arglist__21498);
return G__21496__delegate(a,f,x,y,more);
});
G__21496.cljs$core$IFn$_invoke$arity$variadic = G__21496__delegate;
return G__21496;
})()
;
swap_BANG_ = function(a,f,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return swap_BANG___2.call(this,a,f);
case 3:
return swap_BANG___3.call(this,a,f,x);
case 4:
return swap_BANG___4.call(this,a,f,x,y);
default:
var G__21499 = null;
if (arguments.length > 4) {
var G__21500__i = 0, G__21500__a = new Array(arguments.length -  4);
while (G__21500__i < G__21500__a.length) {G__21500__a[G__21500__i] = arguments[G__21500__i + 4]; ++G__21500__i;}
G__21499 = new cljs.core.IndexedSeq(G__21500__a,0);
}
return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a,f,x,y, G__21499);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
swap_BANG_.cljs$lang$maxFixedArity = 4;
swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
return swap_BANG_;
})()
;
/**
* Atomically sets the value of atom to newval if and only if the
* current value of the atom is equal to oldval. Returns true if
* set happened, else false.
*/
cljs.core.compare_and_set_BANG_ = (function compare_and_set_BANG_(a,oldval,newval){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null),oldval)){
cljs.core.reset_BANG_(a,newval);

return true;
} else {
return false;
}
});
/**
* Sets the validator-fn for an atom. validator-fn must be nil or a
* side-effect-free fn of one argument, which will be passed the intended
* new state on any state change. If the new state is unacceptable, the
* validator-fn should return false or throw an Error. If the current state
* is not acceptable to the new validator, an Error will be thrown and the
* validator will not be changed.
*/
cljs.core.set_validator_BANG_ = (function set_validator_BANG_(iref,val){
return iref.validator = val;
});
/**
* Gets the validator-fn for a var/ref/agent/atom.
*/
cljs.core.get_validator = (function get_validator(iref){
return iref.validator;
});

/**
* @constructor
*/
cljs.core.Volatile = (function (state){
this.state = state;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;

cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = (function (_,new_state){
var self__ = this;
var ___$1 = this;
return self__.state = new_state;
});

cljs.core.Volatile.cljs$lang$type = true;

cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";

cljs.core.Volatile.cljs$lang$ctorPrWriter = (function (this__17919__auto__,writer__17920__auto__,opt__17921__auto__){
return cljs.core._write(writer__17920__auto__,"cljs.core/Volatile");
});

cljs.core.__GT_Volatile = (function __GT_Volatile(state){
return (new cljs.core.Volatile(state));
});

/**
* Creates and returns a Volatile with an initial value of val.
*/
cljs.core.volatile_BANG_ = (function volatile_BANG_(val){
return (new cljs.core.Volatile(val));
});
/**
* Returns true if x is a volatile.
*/
cljs.core.volatile_QMARK_ = (function volatile_QMARK_(x){
return (x instanceof cljs.core.Volatile);
});
/**
* Sets the value of volatile to newval without regard for the
* current value. Returns newval.
*/
cljs.core.vreset_BANG_ = (function vreset_BANG_(vol,newval){
return cljs.core._vreset_BANG_(vol,newval);
});
/**
* Returns a lazy sequence of the non-nil results of (f index item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a stateful transducer when no collection is
* provided.
*/
cljs.core.keep_indexed = (function() {
var keep_indexed = null;
var keep_indexed__1 = (function (f){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__21567 = null;
var G__21567__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__21567__1 = (function (result){
var G__21534 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__21534) : rf.call(null,G__21534));
});
var G__21567__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
var v = (function (){var G__21535 = i;
var G__21536 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21535,G__21536) : f.call(null,G__21535,G__21536));
})();
if((v == null)){
return result;
} else {
var G__21537 = result;
var G__21538 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__21537,G__21538) : rf.call(null,G__21537,G__21538));
}
});
G__21567 = function(result,input){
switch(arguments.length){
case 0:
return G__21567__0.call(this);
case 1:
return G__21567__1.call(this,result);
case 2:
return G__21567__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21567.cljs$core$IFn$_invoke$arity$0 = G__21567__0;
G__21567.cljs$core$IFn$_invoke$arity$1 = G__21567__1;
G__21567.cljs$core$IFn$_invoke$arity$2 = G__21567__2;
return G__21567;
})()
;})(ia))
});
});
var keep_indexed__2 = (function (f,coll){
var keepi = (function keepi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__18219__auto___21568 = size;
var i_21569 = (0);
while(true){
if((i_21569 < n__18219__auto___21568)){
var x_21570 = (function (){var G__21563 = (idx + i_21569);
var G__21564 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_21569);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21563,G__21564) : f.call(null,G__21563,G__21564));
})();
if((x_21570 == null)){
} else {
cljs.core.chunk_append(b,x_21570);
}

var G__21571 = (i_21569 + (1));
i_21569 = G__21571;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keepi((idx + size),cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__21565 = idx;
var G__21566 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21565,G__21566) : f.call(null,G__21565,G__21566));
})();
if((x == null)){
return keepi((idx + (1)),cljs.core.rest(s));
} else {
return cljs.core.cons(x,keepi((idx + (1)),cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
return keepi((0),coll);
});
keep_indexed = function(f,coll){
switch(arguments.length){
case 1:
return keep_indexed__1.call(this,f);
case 2:
return keep_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
return keep_indexed;
})()
;
/**
* Takes a set of predicates and returns a function f that returns true if all of its
* composing predicates return a logical true value against all of its arguments, else it returns
* false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical false result against the original predicates.
* @param {...*} var_args
*/
cljs.core.every_pred = (function() {
var every_pred = null;
var every_pred__1 = (function (p){
return (function() {
var ep1 = null;
var ep1__0 = (function (){
return true;
});
var ep1__1 = (function (x){
return cljs.core.boolean$((function (){var G__21785 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__21785) : p.call(null,G__21785));
})());
});
var ep1__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__17320__auto__ = (function (){var G__21787 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__21787) : p.call(null,G__21787));
})();
if(cljs.core.truth_(and__17320__auto__)){
var G__21788 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__21788) : p.call(null,G__21788));
} else {
return and__17320__auto__;
}
})());
});
var ep1__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__17320__auto__ = (function (){var G__21790 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__21790) : p.call(null,G__21790));
})();
if(cljs.core.truth_(and__17320__auto__)){
var and__17320__auto____$1 = (function (){var G__21792 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__21792) : p.call(null,G__21792));
})();
if(cljs.core.truth_(and__17320__auto____$1)){
var G__21793 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__21793) : p.call(null,G__21793));
} else {
return and__17320__auto____$1;
}
} else {
return and__17320__auto__;
}
})());
});
var ep1__4 = (function() { 
var G__21962__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep1.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(p,args)));
};
var G__21962 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__21963__i = 0, G__21963__a = new Array(arguments.length -  3);
while (G__21963__i < G__21963__a.length) {G__21963__a[G__21963__i] = arguments[G__21963__i + 3]; ++G__21963__i;}
  args = new cljs.core.IndexedSeq(G__21963__a,0);
} 
return G__21962__delegate.call(this,x,y,z,args);};
G__21962.cljs$lang$maxFixedArity = 3;
G__21962.cljs$lang$applyTo = (function (arglist__21964){
var x = cljs.core.first(arglist__21964);
arglist__21964 = cljs.core.next(arglist__21964);
var y = cljs.core.first(arglist__21964);
arglist__21964 = cljs.core.next(arglist__21964);
var z = cljs.core.first(arglist__21964);
var args = cljs.core.rest(arglist__21964);
return G__21962__delegate(x,y,z,args);
});
G__21962.cljs$core$IFn$_invoke$arity$variadic = G__21962__delegate;
return G__21962;
})()
;
ep1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep1__0.call(this);
case 1:
return ep1__1.call(this,x);
case 2:
return ep1__2.call(this,x,y);
case 3:
return ep1__3.call(this,x,y,z);
default:
var G__21965 = null;
if (arguments.length > 3) {
var G__21966__i = 0, G__21966__a = new Array(arguments.length -  3);
while (G__21966__i < G__21966__a.length) {G__21966__a[G__21966__i] = arguments[G__21966__i + 3]; ++G__21966__i;}
G__21965 = new cljs.core.IndexedSeq(G__21966__a,0);
}
return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__21965);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep1.cljs$lang$maxFixedArity = 3;
ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
return ep1;
})()
});
var every_pred__2 = (function (p1,p2){
return (function() {
var ep2 = null;
var ep2__0 = (function (){
return true;
});
var ep2__1 = (function (x){
return cljs.core.boolean$((function (){var and__17320__auto__ = (function (){var G__21825 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21825) : p1.call(null,G__21825));
})();
if(cljs.core.truth_(and__17320__auto__)){
var G__21826 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21826) : p2.call(null,G__21826));
} else {
return and__17320__auto__;
}
})());
});
var ep2__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__17320__auto__ = (function (){var G__21828 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21828) : p1.call(null,G__21828));
})();
if(cljs.core.truth_(and__17320__auto__)){
var and__17320__auto____$1 = (function (){var G__21830 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21830) : p1.call(null,G__21830));
})();
if(cljs.core.truth_(and__17320__auto____$1)){
var and__17320__auto____$2 = (function (){var G__21832 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21832) : p2.call(null,G__21832));
})();
if(cljs.core.truth_(and__17320__auto____$2)){
var G__21833 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21833) : p2.call(null,G__21833));
} else {
return and__17320__auto____$2;
}
} else {
return and__17320__auto____$1;
}
} else {
return and__17320__auto__;
}
})());
});
var ep2__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__17320__auto__ = (function (){var G__21835 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21835) : p1.call(null,G__21835));
})();
if(cljs.core.truth_(and__17320__auto__)){
var and__17320__auto____$1 = (function (){var G__21837 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21837) : p1.call(null,G__21837));
})();
if(cljs.core.truth_(and__17320__auto____$1)){
var and__17320__auto____$2 = (function (){var G__21839 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21839) : p1.call(null,G__21839));
})();
if(cljs.core.truth_(and__17320__auto____$2)){
var and__17320__auto____$3 = (function (){var G__21841 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21841) : p2.call(null,G__21841));
})();
if(cljs.core.truth_(and__17320__auto____$3)){
var and__17320__auto____$4 = (function (){var G__21843 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21843) : p2.call(null,G__21843));
})();
if(cljs.core.truth_(and__17320__auto____$4)){
var G__21844 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21844) : p2.call(null,G__21844));
} else {
return and__17320__auto____$4;
}
} else {
return and__17320__auto____$3;
}
} else {
return and__17320__auto____$2;
}
} else {
return and__17320__auto____$1;
}
} else {
return and__17320__auto__;
}
})());
});
var ep2__4 = (function() { 
var G__21967__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep2.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__21572_SHARP_){
var and__17320__auto__ = (function (){var G__21849 = p1__21572_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21849) : p1.call(null,G__21849));
})();
if(cljs.core.truth_(and__17320__auto__)){
var G__21850 = p1__21572_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21850) : p2.call(null,G__21850));
} else {
return and__17320__auto__;
}
}),args)));
};
var G__21967 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__21968__i = 0, G__21968__a = new Array(arguments.length -  3);
while (G__21968__i < G__21968__a.length) {G__21968__a[G__21968__i] = arguments[G__21968__i + 3]; ++G__21968__i;}
  args = new cljs.core.IndexedSeq(G__21968__a,0);
} 
return G__21967__delegate.call(this,x,y,z,args);};
G__21967.cljs$lang$maxFixedArity = 3;
G__21967.cljs$lang$applyTo = (function (arglist__21969){
var x = cljs.core.first(arglist__21969);
arglist__21969 = cljs.core.next(arglist__21969);
var y = cljs.core.first(arglist__21969);
arglist__21969 = cljs.core.next(arglist__21969);
var z = cljs.core.first(arglist__21969);
var args = cljs.core.rest(arglist__21969);
return G__21967__delegate(x,y,z,args);
});
G__21967.cljs$core$IFn$_invoke$arity$variadic = G__21967__delegate;
return G__21967;
})()
;
ep2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep2__0.call(this);
case 1:
return ep2__1.call(this,x);
case 2:
return ep2__2.call(this,x,y);
case 3:
return ep2__3.call(this,x,y,z);
default:
var G__21970 = null;
if (arguments.length > 3) {
var G__21971__i = 0, G__21971__a = new Array(arguments.length -  3);
while (G__21971__i < G__21971__a.length) {G__21971__a[G__21971__i] = arguments[G__21971__i + 3]; ++G__21971__i;}
G__21970 = new cljs.core.IndexedSeq(G__21971__a,0);
}
return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__21970);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep2.cljs$lang$maxFixedArity = 3;
ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
return ep2;
})()
});
var every_pred__3 = (function (p1,p2,p3){
return (function() {
var ep3 = null;
var ep3__0 = (function (){
return true;
});
var ep3__1 = (function (x){
return cljs.core.boolean$((function (){var and__17320__auto__ = (function (){var G__21896 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21896) : p1.call(null,G__21896));
})();
if(cljs.core.truth_(and__17320__auto__)){
var and__17320__auto____$1 = (function (){var G__21898 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21898) : p2.call(null,G__21898));
})();
if(cljs.core.truth_(and__17320__auto____$1)){
var G__21899 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__21899) : p3.call(null,G__21899));
} else {
return and__17320__auto____$1;
}
} else {
return and__17320__auto__;
}
})());
});
var ep3__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__17320__auto__ = (function (){var G__21901 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21901) : p1.call(null,G__21901));
})();
if(cljs.core.truth_(and__17320__auto__)){
var and__17320__auto____$1 = (function (){var G__21903 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21903) : p2.call(null,G__21903));
})();
if(cljs.core.truth_(and__17320__auto____$1)){
var and__17320__auto____$2 = (function (){var G__21905 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__21905) : p3.call(null,G__21905));
})();
if(cljs.core.truth_(and__17320__auto____$2)){
var and__17320__auto____$3 = (function (){var G__21907 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21907) : p1.call(null,G__21907));
})();
if(cljs.core.truth_(and__17320__auto____$3)){
var and__17320__auto____$4 = (function (){var G__21909 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21909) : p2.call(null,G__21909));
})();
if(cljs.core.truth_(and__17320__auto____$4)){
var G__21910 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__21910) : p3.call(null,G__21910));
} else {
return and__17320__auto____$4;
}
} else {
return and__17320__auto____$3;
}
} else {
return and__17320__auto____$2;
}
} else {
return and__17320__auto____$1;
}
} else {
return and__17320__auto__;
}
})());
});
var ep3__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__17320__auto__ = (function (){var G__21912 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21912) : p1.call(null,G__21912));
})();
if(cljs.core.truth_(and__17320__auto__)){
var and__17320__auto____$1 = (function (){var G__21914 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21914) : p2.call(null,G__21914));
})();
if(cljs.core.truth_(and__17320__auto____$1)){
var and__17320__auto____$2 = (function (){var G__21916 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__21916) : p3.call(null,G__21916));
})();
if(cljs.core.truth_(and__17320__auto____$2)){
var and__17320__auto____$3 = (function (){var G__21918 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21918) : p1.call(null,G__21918));
})();
if(cljs.core.truth_(and__17320__auto____$3)){
var and__17320__auto____$4 = (function (){var G__21920 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21920) : p2.call(null,G__21920));
})();
if(cljs.core.truth_(and__17320__auto____$4)){
var and__17320__auto____$5 = (function (){var G__21922 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__21922) : p3.call(null,G__21922));
})();
if(cljs.core.truth_(and__17320__auto____$5)){
var and__17320__auto____$6 = (function (){var G__21924 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21924) : p1.call(null,G__21924));
})();
if(cljs.core.truth_(and__17320__auto____$6)){
var and__17320__auto____$7 = (function (){var G__21926 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21926) : p2.call(null,G__21926));
})();
if(cljs.core.truth_(and__17320__auto____$7)){
var G__21927 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__21927) : p3.call(null,G__21927));
} else {
return and__17320__auto____$7;
}
} else {
return and__17320__auto____$6;
}
} else {
return and__17320__auto____$5;
}
} else {
return and__17320__auto____$4;
}
} else {
return and__17320__auto____$3;
}
} else {
return and__17320__auto____$2;
}
} else {
return and__17320__auto____$1;
}
} else {
return and__17320__auto__;
}
})());
});
var ep3__4 = (function() { 
var G__21972__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep3.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__21573_SHARP_){
var and__17320__auto__ = (function (){var G__21934 = p1__21573_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21934) : p1.call(null,G__21934));
})();
if(cljs.core.truth_(and__17320__auto__)){
var and__17320__auto____$1 = (function (){var G__21936 = p1__21573_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21936) : p2.call(null,G__21936));
})();
if(cljs.core.truth_(and__17320__auto____$1)){
var G__21937 = p1__21573_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__21937) : p3.call(null,G__21937));
} else {
return and__17320__auto____$1;
}
} else {
return and__17320__auto__;
}
}),args)));
};
var G__21972 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__21973__i = 0, G__21973__a = new Array(arguments.length -  3);
while (G__21973__i < G__21973__a.length) {G__21973__a[G__21973__i] = arguments[G__21973__i + 3]; ++G__21973__i;}
  args = new cljs.core.IndexedSeq(G__21973__a,0);
} 
return G__21972__delegate.call(this,x,y,z,args);};
G__21972.cljs$lang$maxFixedArity = 3;
G__21972.cljs$lang$applyTo = (function (arglist__21974){
var x = cljs.core.first(arglist__21974);
arglist__21974 = cljs.core.next(arglist__21974);
var y = cljs.core.first(arglist__21974);
arglist__21974 = cljs.core.next(arglist__21974);
var z = cljs.core.first(arglist__21974);
var args = cljs.core.rest(arglist__21974);
return G__21972__delegate(x,y,z,args);
});
G__21972.cljs$core$IFn$_invoke$arity$variadic = G__21972__delegate;
return G__21972;
})()
;
ep3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep3__0.call(this);
case 1:
return ep3__1.call(this,x);
case 2:
return ep3__2.call(this,x,y);
case 3:
return ep3__3.call(this,x,y,z);
default:
var G__21975 = null;
if (arguments.length > 3) {
var G__21976__i = 0, G__21976__a = new Array(arguments.length -  3);
while (G__21976__i < G__21976__a.length) {G__21976__a[G__21976__i] = arguments[G__21976__i + 3]; ++G__21976__i;}
G__21975 = new cljs.core.IndexedSeq(G__21976__a,0);
}
return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__21975);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep3.cljs$lang$maxFixedArity = 3;
ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
return ep3;
})()
});
var every_pred__4 = (function() { 
var G__21977__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var epn = null;
var epn__0 = (function (){
return true;
});
var epn__1 = (function (x){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__21574_SHARP_){
var G__21953 = x;
return (p1__21574_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__21574_SHARP_.cljs$core$IFn$_invoke$arity$1(G__21953) : p1__21574_SHARP_.call(null,G__21953));
});})(ps__$1))
,ps__$1);
});
var epn__2 = (function (x,y){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__21575_SHARP_){
var and__17320__auto__ = (function (){var G__21955 = x;
return (p1__21575_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__21575_SHARP_.cljs$core$IFn$_invoke$arity$1(G__21955) : p1__21575_SHARP_.call(null,G__21955));
})();
if(cljs.core.truth_(and__17320__auto__)){
var G__21956 = y;
return (p1__21575_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__21575_SHARP_.cljs$core$IFn$_invoke$arity$1(G__21956) : p1__21575_SHARP_.call(null,G__21956));
} else {
return and__17320__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__3 = (function (x,y,z){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__21576_SHARP_){
var and__17320__auto__ = (function (){var G__21958 = x;
return (p1__21576_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__21576_SHARP_.cljs$core$IFn$_invoke$arity$1(G__21958) : p1__21576_SHARP_.call(null,G__21958));
})();
if(cljs.core.truth_(and__17320__auto__)){
var and__17320__auto____$1 = (function (){var G__21960 = y;
return (p1__21576_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__21576_SHARP_.cljs$core$IFn$_invoke$arity$1(G__21960) : p1__21576_SHARP_.call(null,G__21960));
})();
if(cljs.core.truth_(and__17320__auto____$1)){
var G__21961 = z;
return (p1__21576_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__21576_SHARP_.cljs$core$IFn$_invoke$arity$1(G__21961) : p1__21576_SHARP_.call(null,G__21961));
} else {
return and__17320__auto____$1;
}
} else {
return and__17320__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__4 = (function() { 
var G__21978__delegate = function (x,y,z,args){
return cljs.core.boolean$((epn.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__21577_SHARP_){
return cljs.core.every_QMARK_(p1__21577_SHARP_,args);
});})(ps__$1))
,ps__$1)));
};
var G__21978 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__21979__i = 0, G__21979__a = new Array(arguments.length -  3);
while (G__21979__i < G__21979__a.length) {G__21979__a[G__21979__i] = arguments[G__21979__i + 3]; ++G__21979__i;}
  args = new cljs.core.IndexedSeq(G__21979__a,0);
} 
return G__21978__delegate.call(this,x,y,z,args);};
G__21978.cljs$lang$maxFixedArity = 3;
G__21978.cljs$lang$applyTo = (function (arglist__21980){
var x = cljs.core.first(arglist__21980);
arglist__21980 = cljs.core.next(arglist__21980);
var y = cljs.core.first(arglist__21980);
arglist__21980 = cljs.core.next(arglist__21980);
var z = cljs.core.first(arglist__21980);
var args = cljs.core.rest(arglist__21980);
return G__21978__delegate(x,y,z,args);
});
G__21978.cljs$core$IFn$_invoke$arity$variadic = G__21978__delegate;
return G__21978;
})()
;
epn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return epn__0.call(this);
case 1:
return epn__1.call(this,x);
case 2:
return epn__2.call(this,x,y);
case 3:
return epn__3.call(this,x,y,z);
default:
var G__21981 = null;
if (arguments.length > 3) {
var G__21982__i = 0, G__21982__a = new Array(arguments.length -  3);
while (G__21982__i < G__21982__a.length) {G__21982__a[G__21982__i] = arguments[G__21982__i + 3]; ++G__21982__i;}
G__21981 = new cljs.core.IndexedSeq(G__21982__a,0);
}
return epn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__21981);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
epn.cljs$lang$maxFixedArity = 3;
epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
return epn;
})()
;})(ps__$1))
};
var G__21977 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__21983__i = 0, G__21983__a = new Array(arguments.length -  3);
while (G__21983__i < G__21983__a.length) {G__21983__a[G__21983__i] = arguments[G__21983__i + 3]; ++G__21983__i;}
  ps = new cljs.core.IndexedSeq(G__21983__a,0);
} 
return G__21977__delegate.call(this,p1,p2,p3,ps);};
G__21977.cljs$lang$maxFixedArity = 3;
G__21977.cljs$lang$applyTo = (function (arglist__21984){
var p1 = cljs.core.first(arglist__21984);
arglist__21984 = cljs.core.next(arglist__21984);
var p2 = cljs.core.first(arglist__21984);
arglist__21984 = cljs.core.next(arglist__21984);
var p3 = cljs.core.first(arglist__21984);
var ps = cljs.core.rest(arglist__21984);
return G__21977__delegate(p1,p2,p3,ps);
});
G__21977.cljs$core$IFn$_invoke$arity$variadic = G__21977__delegate;
return G__21977;
})()
;
every_pred = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return every_pred__1.call(this,p1);
case 2:
return every_pred__2.call(this,p1,p2);
case 3:
return every_pred__3.call(this,p1,p2,p3);
default:
var G__21985 = null;
if (arguments.length > 3) {
var G__21986__i = 0, G__21986__a = new Array(arguments.length -  3);
while (G__21986__i < G__21986__a.length) {G__21986__a[G__21986__i] = arguments[G__21986__i + 3]; ++G__21986__i;}
G__21985 = new cljs.core.IndexedSeq(G__21986__a,0);
}
return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__21985);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
every_pred.cljs$lang$maxFixedArity = 3;
every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
return every_pred;
})()
;
/**
* Takes a set of predicates and returns a function f that returns the first logical true value
* returned by one of its composing predicates against any of its arguments, else it returns
* logical false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical true result against the original predicates.
* @param {...*} var_args
*/
cljs.core.some_fn = (function() {
var some_fn = null;
var some_fn__1 = (function (p){
return (function() {
var sp1 = null;
var sp1__0 = (function (){
return null;
});
var sp1__1 = (function (x){
var G__22192 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__22192) : p.call(null,G__22192));
});
var sp1__2 = (function (x,y){
var or__17332__auto__ = (function (){var G__22194 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__22194) : p.call(null,G__22194));
})();
if(cljs.core.truth_(or__17332__auto__)){
return or__17332__auto__;
} else {
var G__22195 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__22195) : p.call(null,G__22195));
}
});
var sp1__3 = (function (x,y,z){
var or__17332__auto__ = (function (){var G__22197 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__22197) : p.call(null,G__22197));
})();
if(cljs.core.truth_(or__17332__auto__)){
return or__17332__auto__;
} else {
var or__17332__auto____$1 = (function (){var G__22199 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__22199) : p.call(null,G__22199));
})();
if(cljs.core.truth_(or__17332__auto____$1)){
return or__17332__auto____$1;
} else {
var G__22200 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__22200) : p.call(null,G__22200));
}
}
});
var sp1__4 = (function() { 
var G__22361__delegate = function (x,y,z,args){
var or__17332__auto__ = sp1.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__17332__auto__)){
return or__17332__auto__;
} else {
return cljs.core.some(p,args);
}
};
var G__22361 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__22362__i = 0, G__22362__a = new Array(arguments.length -  3);
while (G__22362__i < G__22362__a.length) {G__22362__a[G__22362__i] = arguments[G__22362__i + 3]; ++G__22362__i;}
  args = new cljs.core.IndexedSeq(G__22362__a,0);
} 
return G__22361__delegate.call(this,x,y,z,args);};
G__22361.cljs$lang$maxFixedArity = 3;
G__22361.cljs$lang$applyTo = (function (arglist__22363){
var x = cljs.core.first(arglist__22363);
arglist__22363 = cljs.core.next(arglist__22363);
var y = cljs.core.first(arglist__22363);
arglist__22363 = cljs.core.next(arglist__22363);
var z = cljs.core.first(arglist__22363);
var args = cljs.core.rest(arglist__22363);
return G__22361__delegate(x,y,z,args);
});
G__22361.cljs$core$IFn$_invoke$arity$variadic = G__22361__delegate;
return G__22361;
})()
;
sp1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp1__0.call(this);
case 1:
return sp1__1.call(this,x);
case 2:
return sp1__2.call(this,x,y);
case 3:
return sp1__3.call(this,x,y,z);
default:
var G__22364 = null;
if (arguments.length > 3) {
var G__22365__i = 0, G__22365__a = new Array(arguments.length -  3);
while (G__22365__i < G__22365__a.length) {G__22365__a[G__22365__i] = arguments[G__22365__i + 3]; ++G__22365__i;}
G__22364 = new cljs.core.IndexedSeq(G__22365__a,0);
}
return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__22364);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp1.cljs$lang$maxFixedArity = 3;
sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
return sp1;
})()
});
var some_fn__2 = (function (p1,p2){
return (function() {
var sp2 = null;
var sp2__0 = (function (){
return null;
});
var sp2__1 = (function (x){
var or__17332__auto__ = (function (){var G__22232 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__22232) : p1.call(null,G__22232));
})();
if(cljs.core.truth_(or__17332__auto__)){
return or__17332__auto__;
} else {
var G__22233 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__22233) : p2.call(null,G__22233));
}
});
var sp2__2 = (function (x,y){
var or__17332__auto__ = (function (){var G__22235 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__22235) : p1.call(null,G__22235));
})();
if(cljs.core.truth_(or__17332__auto__)){
return or__17332__auto__;
} else {
var or__17332__auto____$1 = (function (){var G__22237 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__22237) : p1.call(null,G__22237));
})();
if(cljs.core.truth_(or__17332__auto____$1)){
return or__17332__auto____$1;
} else {
var or__17332__auto____$2 = (function (){var G__22239 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__22239) : p2.call(null,G__22239));
})();
if(cljs.core.truth_(or__17332__auto____$2)){
return or__17332__auto____$2;
} else {
var G__22240 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__22240) : p2.call(null,G__22240));
}
}
}
});
var sp2__3 = (function (x,y,z){
var or__17332__auto__ = (function (){var G__22242 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__22242) : p1.call(null,G__22242));
})();
if(cljs.core.truth_(or__17332__auto__)){
return or__17332__auto__;
} else {
var or__17332__auto____$1 = (function (){var G__22244 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__22244) : p1.call(null,G__22244));
})();
if(cljs.core.truth_(or__17332__auto____$1)){
return or__17332__auto____$1;
} else {
var or__17332__auto____$2 = (function (){var G__22246 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__22246) : p1.call(null,G__22246));
})();
if(cljs.core.truth_(or__17332__auto____$2)){
return or__17332__auto____$2;
} else {
var or__17332__auto____$3 = (function (){var G__22248 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__22248) : p2.call(null,G__22248));
})();
if(cljs.core.truth_(or__17332__auto____$3)){
return or__17332__auto____$3;
} else {
var or__17332__auto____$4 = (function (){var G__22250 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__22250) : p2.call(null,G__22250));
})();
if(cljs.core.truth_(or__17332__auto____$4)){
return or__17332__auto____$4;
} else {
var G__22251 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__22251) : p2.call(null,G__22251));
}
}
}
}
}
});
var sp2__4 = (function() { 
var G__22366__delegate = function (x,y,z,args){
var or__17332__auto__ = sp2.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__17332__auto__)){
return or__17332__auto__;
} else {
return cljs.core.some(((function (or__17332__auto__){
return (function (p1__21987_SHARP_){
var or__17332__auto____$1 = (function (){var G__22253 = p1__21987_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__22253) : p1.call(null,G__22253));
})();
if(cljs.core.truth_(or__17332__auto____$1)){
return or__17332__auto____$1;
} else {
var G__22254 = p1__21987_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__22254) : p2.call(null,G__22254));
}
});})(or__17332__auto__))
,args);
}
};
var G__22366 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__22367__i = 0, G__22367__a = new Array(arguments.length -  3);
while (G__22367__i < G__22367__a.length) {G__22367__a[G__22367__i] = arguments[G__22367__i + 3]; ++G__22367__i;}
  args = new cljs.core.IndexedSeq(G__22367__a,0);
} 
return G__22366__delegate.call(this,x,y,z,args);};
G__22366.cljs$lang$maxFixedArity = 3;
G__22366.cljs$lang$applyTo = (function (arglist__22368){
var x = cljs.core.first(arglist__22368);
arglist__22368 = cljs.core.next(arglist__22368);
var y = cljs.core.first(arglist__22368);
arglist__22368 = cljs.core.next(arglist__22368);
var z = cljs.core.first(arglist__22368);
var args = cljs.core.rest(arglist__22368);
return G__22366__delegate(x,y,z,args);
});
G__22366.cljs$core$IFn$_invoke$arity$variadic = G__22366__delegate;
return G__22366;
})()
;
sp2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp2__0.call(this);
case 1:
return sp2__1.call(this,x);
case 2:
return sp2__2.call(this,x,y);
case 3:
return sp2__3.call(this,x,y,z);
default:
var G__22369 = null;
if (arguments.length > 3) {
var G__22370__i = 0, G__22370__a = new Array(arguments.length -  3);
while (G__22370__i < G__22370__a.length) {G__22370__a[G__22370__i] = arguments[G__22370__i + 3]; ++G__22370__i;}
G__22369 = new cljs.core.IndexedSeq(G__22370__a,0);
}
return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__22369);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp2.cljs$lang$maxFixedArity = 3;
sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
return sp2;
})()
});
var some_fn__3 = (function (p1,p2,p3){
return (function() {
var sp3 = null;
var sp3__0 = (function (){
return null;
});
var sp3__1 = (function (x){
var or__17332__auto__ = (function (){var G__22300 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__22300) : p1.call(null,G__22300));
})();
if(cljs.core.truth_(or__17332__auto__)){
return or__17332__auto__;
} else {
var or__17332__auto____$1 = (function (){var G__22302 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__22302) : p2.call(null,G__22302));
})();
if(cljs.core.truth_(or__17332__auto____$1)){
return or__17332__auto____$1;
} else {
var G__22303 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__22303) : p3.call(null,G__22303));
}
}
});
var sp3__2 = (function (x,y){
var or__17332__auto__ = (function (){var G__22305 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__22305) : p1.call(null,G__22305));
})();
if(cljs.core.truth_(or__17332__auto__)){
return or__17332__auto__;
} else {
var or__17332__auto____$1 = (function (){var G__22307 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__22307) : p2.call(null,G__22307));
})();
if(cljs.core.truth_(or__17332__auto____$1)){
return or__17332__auto____$1;
} else {
var or__17332__auto____$2 = (function (){var G__22309 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__22309) : p3.call(null,G__22309));
})();
if(cljs.core.truth_(or__17332__auto____$2)){
return or__17332__auto____$2;
} else {
var or__17332__auto____$3 = (function (){var G__22311 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__22311) : p1.call(null,G__22311));
})();
if(cljs.core.truth_(or__17332__auto____$3)){
return or__17332__auto____$3;
} else {
var or__17332__auto____$4 = (function (){var G__22313 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__22313) : p2.call(null,G__22313));
})();
if(cljs.core.truth_(or__17332__auto____$4)){
return or__17332__auto____$4;
} else {
var G__22314 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__22314) : p3.call(null,G__22314));
}
}
}
}
}
});
var sp3__3 = (function (x,y,z){
var or__17332__auto__ = (function (){var G__22316 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__22316) : p1.call(null,G__22316));
})();
if(cljs.core.truth_(or__17332__auto__)){
return or__17332__auto__;
} else {
var or__17332__auto____$1 = (function (){var G__22318 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__22318) : p2.call(null,G__22318));
})();
if(cljs.core.truth_(or__17332__auto____$1)){
return or__17332__auto____$1;
} else {
var or__17332__auto____$2 = (function (){var G__22320 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__22320) : p3.call(null,G__22320));
})();
if(cljs.core.truth_(or__17332__auto____$2)){
return or__17332__auto____$2;
} else {
var or__17332__auto____$3 = (function (){var G__22322 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__22322) : p1.call(null,G__22322));
})();
if(cljs.core.truth_(or__17332__auto____$3)){
return or__17332__auto____$3;
} else {
var or__17332__auto____$4 = (function (){var G__22324 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__22324) : p2.call(null,G__22324));
})();
if(cljs.core.truth_(or__17332__auto____$4)){
return or__17332__auto____$4;
} else {
var or__17332__auto____$5 = (function (){var G__22326 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__22326) : p3.call(null,G__22326));
})();
if(cljs.core.truth_(or__17332__auto____$5)){
return or__17332__auto____$5;
} else {
var or__17332__auto____$6 = (function (){var G__22328 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__22328) : p1.call(null,G__22328));
})();
if(cljs.core.truth_(or__17332__auto____$6)){
return or__17332__auto____$6;
} else {
var or__17332__auto____$7 = (function (){var G__22330 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__22330) : p2.call(null,G__22330));
})();
if(cljs.core.truth_(or__17332__auto____$7)){
return or__17332__auto____$7;
} else {
var G__22331 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__22331) : p3.call(null,G__22331));
}
}
}
}
}
}
}
}
});
var sp3__4 = (function() { 
var G__22371__delegate = function (x,y,z,args){
var or__17332__auto__ = sp3.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__17332__auto__)){
return or__17332__auto__;
} else {
return cljs.core.some(((function (or__17332__auto__){
return (function (p1__21988_SHARP_){
var or__17332__auto____$1 = (function (){var G__22333 = p1__21988_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__22333) : p1.call(null,G__22333));
})();
if(cljs.core.truth_(or__17332__auto____$1)){
return or__17332__auto____$1;
} else {
var or__17332__auto____$2 = (function (){var G__22335 = p1__21988_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__22335) : p2.call(null,G__22335));
})();
if(cljs.core.truth_(or__17332__auto____$2)){
return or__17332__auto____$2;
} else {
var G__22336 = p1__21988_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__22336) : p3.call(null,G__22336));
}
}
});})(or__17332__auto__))
,args);
}
};
var G__22371 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__22372__i = 0, G__22372__a = new Array(arguments.length -  3);
while (G__22372__i < G__22372__a.length) {G__22372__a[G__22372__i] = arguments[G__22372__i + 3]; ++G__22372__i;}
  args = new cljs.core.IndexedSeq(G__22372__a,0);
} 
return G__22371__delegate.call(this,x,y,z,args);};
G__22371.cljs$lang$maxFixedArity = 3;
G__22371.cljs$lang$applyTo = (function (arglist__22373){
var x = cljs.core.first(arglist__22373);
arglist__22373 = cljs.core.next(arglist__22373);
var y = cljs.core.first(arglist__22373);
arglist__22373 = cljs.core.next(arglist__22373);
var z = cljs.core.first(arglist__22373);
var args = cljs.core.rest(arglist__22373);
return G__22371__delegate(x,y,z,args);
});
G__22371.cljs$core$IFn$_invoke$arity$variadic = G__22371__delegate;
return G__22371;
})()
;
sp3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp3__0.call(this);
case 1:
return sp3__1.call(this,x);
case 2:
return sp3__2.call(this,x,y);
case 3:
return sp3__3.call(this,x,y,z);
default:
var G__22374 = null;
if (arguments.length > 3) {
var G__22375__i = 0, G__22375__a = new Array(arguments.length -  3);
while (G__22375__i < G__22375__a.length) {G__22375__a[G__22375__i] = arguments[G__22375__i + 3]; ++G__22375__i;}
G__22374 = new cljs.core.IndexedSeq(G__22375__a,0);
}
return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__22374);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp3.cljs$lang$maxFixedArity = 3;
sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
return sp3;
})()
});
var some_fn__4 = (function() { 
var G__22376__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var spn = null;
var spn__0 = (function (){
return null;
});
var spn__1 = (function (x){
return cljs.core.some(((function (ps__$1){
return (function (p1__21989_SHARP_){
var G__22352 = x;
return (p1__21989_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__21989_SHARP_.cljs$core$IFn$_invoke$arity$1(G__22352) : p1__21989_SHARP_.call(null,G__22352));
});})(ps__$1))
,ps__$1);
});
var spn__2 = (function (x,y){
return cljs.core.some(((function (ps__$1){
return (function (p1__21990_SHARP_){
var or__17332__auto__ = (function (){var G__22354 = x;
return (p1__21990_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__21990_SHARP_.cljs$core$IFn$_invoke$arity$1(G__22354) : p1__21990_SHARP_.call(null,G__22354));
})();
if(cljs.core.truth_(or__17332__auto__)){
return or__17332__auto__;
} else {
var G__22355 = y;
return (p1__21990_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__21990_SHARP_.cljs$core$IFn$_invoke$arity$1(G__22355) : p1__21990_SHARP_.call(null,G__22355));
}
});})(ps__$1))
,ps__$1);
});
var spn__3 = (function (x,y,z){
return cljs.core.some(((function (ps__$1){
return (function (p1__21991_SHARP_){
var or__17332__auto__ = (function (){var G__22357 = x;
return (p1__21991_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__21991_SHARP_.cljs$core$IFn$_invoke$arity$1(G__22357) : p1__21991_SHARP_.call(null,G__22357));
})();
if(cljs.core.truth_(or__17332__auto__)){
return or__17332__auto__;
} else {
var or__17332__auto____$1 = (function (){var G__22359 = y;
return (p1__21991_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__21991_SHARP_.cljs$core$IFn$_invoke$arity$1(G__22359) : p1__21991_SHARP_.call(null,G__22359));
})();
if(cljs.core.truth_(or__17332__auto____$1)){
return or__17332__auto____$1;
} else {
var G__22360 = z;
return (p1__21991_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__21991_SHARP_.cljs$core$IFn$_invoke$arity$1(G__22360) : p1__21991_SHARP_.call(null,G__22360));
}
}
});})(ps__$1))
,ps__$1);
});
var spn__4 = (function() { 
var G__22377__delegate = function (x,y,z,args){
var or__17332__auto__ = spn.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__17332__auto__)){
return or__17332__auto__;
} else {
return cljs.core.some(((function (or__17332__auto__,ps__$1){
return (function (p1__21992_SHARP_){
return cljs.core.some(p1__21992_SHARP_,args);
});})(or__17332__auto__,ps__$1))
,ps__$1);
}
};
var G__22377 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__22378__i = 0, G__22378__a = new Array(arguments.length -  3);
while (G__22378__i < G__22378__a.length) {G__22378__a[G__22378__i] = arguments[G__22378__i + 3]; ++G__22378__i;}
  args = new cljs.core.IndexedSeq(G__22378__a,0);
} 
return G__22377__delegate.call(this,x,y,z,args);};
G__22377.cljs$lang$maxFixedArity = 3;
G__22377.cljs$lang$applyTo = (function (arglist__22379){
var x = cljs.core.first(arglist__22379);
arglist__22379 = cljs.core.next(arglist__22379);
var y = cljs.core.first(arglist__22379);
arglist__22379 = cljs.core.next(arglist__22379);
var z = cljs.core.first(arglist__22379);
var args = cljs.core.rest(arglist__22379);
return G__22377__delegate(x,y,z,args);
});
G__22377.cljs$core$IFn$_invoke$arity$variadic = G__22377__delegate;
return G__22377;
})()
;
spn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return spn__0.call(this);
case 1:
return spn__1.call(this,x);
case 2:
return spn__2.call(this,x,y);
case 3:
return spn__3.call(this,x,y,z);
default:
var G__22380 = null;
if (arguments.length > 3) {
var G__22381__i = 0, G__22381__a = new Array(arguments.length -  3);
while (G__22381__i < G__22381__a.length) {G__22381__a[G__22381__i] = arguments[G__22381__i + 3]; ++G__22381__i;}
G__22380 = new cljs.core.IndexedSeq(G__22381__a,0);
}
return spn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__22380);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
spn.cljs$lang$maxFixedArity = 3;
spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
return spn;
})()
;})(ps__$1))
};
var G__22376 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__22382__i = 0, G__22382__a = new Array(arguments.length -  3);
while (G__22382__i < G__22382__a.length) {G__22382__a[G__22382__i] = arguments[G__22382__i + 3]; ++G__22382__i;}
  ps = new cljs.core.IndexedSeq(G__22382__a,0);
} 
return G__22376__delegate.call(this,p1,p2,p3,ps);};
G__22376.cljs$lang$maxFixedArity = 3;
G__22376.cljs$lang$applyTo = (function (arglist__22383){
var p1 = cljs.core.first(arglist__22383);
arglist__22383 = cljs.core.next(arglist__22383);
var p2 = cljs.core.first(arglist__22383);
arglist__22383 = cljs.core.next(arglist__22383);
var p3 = cljs.core.first(arglist__22383);
var ps = cljs.core.rest(arglist__22383);
return G__22376__delegate(p1,p2,p3,ps);
});
G__22376.cljs$core$IFn$_invoke$arity$variadic = G__22376__delegate;
return G__22376;
})()
;
some_fn = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return some_fn__1.call(this,p1);
case 2:
return some_fn__2.call(this,p1,p2);
case 3:
return some_fn__3.call(this,p1,p2,p3);
default:
var G__22384 = null;
if (arguments.length > 3) {
var G__22385__i = 0, G__22385__a = new Array(arguments.length -  3);
while (G__22385__i < G__22385__a.length) {G__22385__a[G__22385__i] = arguments[G__22385__i + 3]; ++G__22385__i;}
G__22384 = new cljs.core.IndexedSeq(G__22385__a,0);
}
return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__22384);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
some_fn.cljs$lang$maxFixedArity = 3;
some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
return some_fn;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to
* the set of first items of each coll, followed by applying f to the
* set of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments. Returns a transducer when
* no collection is provided.
* @param {...*} var_args
*/
cljs.core.map = (function() {
var map = null;
var map__1 = (function (f){
return (function (rf){
return (function() {
var G__22440 = null;
var G__22440__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__22440__1 = (function (result){
var G__22426 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__22426) : rf.call(null,G__22426));
});
var G__22440__2 = (function (result,input){
var G__22427 = result;
var G__22428 = (function (){var G__22429 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22429) : f.call(null,G__22429));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__22427,G__22428) : rf.call(null,G__22427,G__22428));
});
var G__22440__3 = (function() { 
var G__22441__delegate = function (result,input,inputs){
var G__22430 = result;
var G__22431 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,input,inputs);
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__22430,G__22431) : rf.call(null,G__22430,G__22431));
};
var G__22441 = function (result,input,var_args){
var inputs = null;
if (arguments.length > 2) {
var G__22442__i = 0, G__22442__a = new Array(arguments.length -  2);
while (G__22442__i < G__22442__a.length) {G__22442__a[G__22442__i] = arguments[G__22442__i + 2]; ++G__22442__i;}
  inputs = new cljs.core.IndexedSeq(G__22442__a,0);
} 
return G__22441__delegate.call(this,result,input,inputs);};
G__22441.cljs$lang$maxFixedArity = 2;
G__22441.cljs$lang$applyTo = (function (arglist__22443){
var result = cljs.core.first(arglist__22443);
arglist__22443 = cljs.core.next(arglist__22443);
var input = cljs.core.first(arglist__22443);
var inputs = cljs.core.rest(arglist__22443);
return G__22441__delegate(result,input,inputs);
});
G__22441.cljs$core$IFn$_invoke$arity$variadic = G__22441__delegate;
return G__22441;
})()
;
G__22440 = function(result,input,var_args){
var inputs = var_args;
switch(arguments.length){
case 0:
return G__22440__0.call(this);
case 1:
return G__22440__1.call(this,result);
case 2:
return G__22440__2.call(this,result,input);
default:
var G__22444 = null;
if (arguments.length > 2) {
var G__22445__i = 0, G__22445__a = new Array(arguments.length -  2);
while (G__22445__i < G__22445__a.length) {G__22445__a[G__22445__i] = arguments[G__22445__i + 2]; ++G__22445__i;}
G__22444 = new cljs.core.IndexedSeq(G__22445__a,0);
}
return G__22440__3.cljs$core$IFn$_invoke$arity$variadic(result,input, G__22444);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22440.cljs$lang$maxFixedArity = 2;
G__22440.cljs$lang$applyTo = G__22440__3.cljs$lang$applyTo;
G__22440.cljs$core$IFn$_invoke$arity$0 = G__22440__0;
G__22440.cljs$core$IFn$_invoke$arity$1 = G__22440__1;
G__22440.cljs$core$IFn$_invoke$arity$2 = G__22440__2;
G__22440.cljs$core$IFn$_invoke$arity$variadic = G__22440__3.cljs$core$IFn$_invoke$arity$variadic;
return G__22440;
})()
});
});
var map__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__18219__auto___22446 = size;
var i_22447 = (0);
while(true){
if((i_22447 < n__18219__auto___22446)){
cljs.core.chunk_append(b,(function (){var G__22432 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_22447);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22432) : f.call(null,G__22432));
})());

var G__22448 = (i_22447 + (1));
i_22447 = G__22448;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__22433 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22433) : f.call(null,G__22433));
})(),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
var map__3 = (function (f,c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons((function (){var G__22434 = cljs.core.first(s1);
var G__22435 = cljs.core.first(s2);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22434,G__22435) : f.call(null,G__22434,G__22435));
})(),map.cljs$core$IFn$_invoke$arity$3(f,cljs.core.rest(s1),cljs.core.rest(s2)));
} else {
return null;
}
}),null,null));
});
var map__4 = (function (f,c1,c2,c3){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
var s3 = cljs.core.seq(c3);
if((s1) && (s2) && (s3)){
return cljs.core.cons((function (){var G__22436 = cljs.core.first(s1);
var G__22437 = cljs.core.first(s2);
var G__22438 = cljs.core.first(s3);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22436,G__22437,G__22438) : f.call(null,G__22436,G__22437,G__22438));
})(),map.cljs$core$IFn$_invoke$arity$4(f,cljs.core.rest(s1),cljs.core.rest(s2),cljs.core.rest(s3)));
} else {
return null;
}
}),null,null));
});
var map__5 = (function() { 
var G__22449__delegate = function (f,c1,c2,c3,colls){
var step = (function step(cs){
return (new cljs.core.LazySeq(null,(function (){
var ss = map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cs);
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.cons(map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),step(map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
});
return map.cljs$core$IFn$_invoke$arity$2(((function (step){
return (function (p1__22386_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,p1__22386_SHARP_);
});})(step))
,step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c3,cljs.core.array_seq([c2,c1], 0))));
};
var G__22449 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__22450__i = 0, G__22450__a = new Array(arguments.length -  4);
while (G__22450__i < G__22450__a.length) {G__22450__a[G__22450__i] = arguments[G__22450__i + 4]; ++G__22450__i;}
  colls = new cljs.core.IndexedSeq(G__22450__a,0);
} 
return G__22449__delegate.call(this,f,c1,c2,c3,colls);};
G__22449.cljs$lang$maxFixedArity = 4;
G__22449.cljs$lang$applyTo = (function (arglist__22451){
var f = cljs.core.first(arglist__22451);
arglist__22451 = cljs.core.next(arglist__22451);
var c1 = cljs.core.first(arglist__22451);
arglist__22451 = cljs.core.next(arglist__22451);
var c2 = cljs.core.first(arglist__22451);
arglist__22451 = cljs.core.next(arglist__22451);
var c3 = cljs.core.first(arglist__22451);
var colls = cljs.core.rest(arglist__22451);
return G__22449__delegate(f,c1,c2,c3,colls);
});
G__22449.cljs$core$IFn$_invoke$arity$variadic = G__22449__delegate;
return G__22449;
})()
;
map = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return map__1.call(this,f);
case 2:
return map__2.call(this,f,c1);
case 3:
return map__3.call(this,f,c1,c2);
case 4:
return map__4.call(this,f,c1,c2,c3);
default:
var G__22452 = null;
if (arguments.length > 4) {
var G__22453__i = 0, G__22453__a = new Array(arguments.length -  4);
while (G__22453__i < G__22453__a.length) {G__22453__a[G__22453__i] = arguments[G__22453__i + 4]; ++G__22453__i;}
G__22452 = new cljs.core.IndexedSeq(G__22453__a,0);
}
return map__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__22452);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map.cljs$lang$maxFixedArity = 4;
map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
map.cljs$core$IFn$_invoke$arity$1 = map__1;
map.cljs$core$IFn$_invoke$arity$2 = map__2;
map.cljs$core$IFn$_invoke$arity$3 = map__3;
map.cljs$core$IFn$_invoke$arity$4 = map__4;
map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
return map;
})()
;
/**
* Returns a lazy sequence of the first n items in coll, or all items if
* there are fewer than n.  Returns a stateful transducer when
* no collection is provided.
*/
cljs.core.take = (function() {
var take = null;
var take__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__22462 = null;
var G__22462__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__22462__1 = (function (result){
var G__22459 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__22459) : rf.call(null,G__22459));
});
var G__22462__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));
var result__$1 = (((n__$1 > (0)))?(function (){var G__22460 = result;
var G__22461 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__22460,G__22461) : rf.call(null,G__22460,G__22461));
})():result);
if(!((nn > (0)))){
return cljs.core.ensure_reduced(result__$1);
} else {
return result__$1;
}
});
G__22462 = function(result,input){
switch(arguments.length){
case 0:
return G__22462__0.call(this);
case 1:
return G__22462__1.call(this,result);
case 2:
return G__22462__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22462.cljs$core$IFn$_invoke$arity$0 = G__22462__0;
G__22462.cljs$core$IFn$_invoke$arity$1 = G__22462__1;
G__22462.cljs$core$IFn$_invoke$arity$2 = G__22462__2;
return G__22462;
})()
;})(na))
});
});
var take__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
if((n > (0))){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take.cljs$core$IFn$_invoke$arity$2((n - (1)),cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take = function(n,coll){
switch(arguments.length){
case 1:
return take__1.call(this,n);
case 2:
return take__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take.cljs$core$IFn$_invoke$arity$1 = take__1;
take.cljs$core$IFn$_invoke$arity$2 = take__2;
return take;
})()
;
/**
* Returns a lazy sequence of all but the first n items in coll.
* Returns a stateful transducer when no collection is provided.
*/
cljs.core.drop = (function() {
var drop = null;
var drop__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__22469 = null;
var G__22469__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__22469__1 = (function (result){
var G__22466 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__22466) : rf.call(null,G__22466));
});
var G__22469__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));

if((n__$1 > (0))){
return result;
} else {
var G__22467 = result;
var G__22468 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__22467,G__22468) : rf.call(null,G__22467,G__22468));
}
});
G__22469 = function(result,input){
switch(arguments.length){
case 0:
return G__22469__0.call(this);
case 1:
return G__22469__1.call(this,result);
case 2:
return G__22469__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22469.cljs$core$IFn$_invoke$arity$0 = G__22469__0;
G__22469.cljs$core$IFn$_invoke$arity$1 = G__22469__1;
G__22469.cljs$core$IFn$_invoke$arity$2 = G__22469__2;
return G__22469;
})()
;})(na))
});
});
var drop__2 = (function (n,coll){
var step = (function (n__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(((n__$1 > (0))) && (s)){
var G__22470 = (n__$1 - (1));
var G__22471 = cljs.core.rest(s);
n__$1 = G__22470;
coll__$1 = G__22471;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(n,coll);
});})(step))
,null,null));
});
drop = function(n,coll){
switch(arguments.length){
case 1:
return drop__1.call(this,n);
case 2:
return drop__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
return drop;
})()
;
/**
* Return a lazy sequence of all but the last n (default 1) items in coll
*/
cljs.core.drop_last = (function() {
var drop_last = null;
var drop_last__1 = (function (s){
return drop_last.cljs$core$IFn$_invoke$arity$2((1),s);
});
var drop_last__2 = (function (n,s){
return cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (x,_){
return x;
}),s,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s));
});
drop_last = function(n,s){
switch(arguments.length){
case 1:
return drop_last__1.call(this,n);
case 2:
return drop_last__2.call(this,n,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
return drop_last;
})()
;
/**
* Returns a seq of the last n items in coll.  Depending on the type
* of coll may be no better than linear time.  For vectors, see also subvec.
*/
cljs.core.take_last = (function take_last(n,coll){
var s = cljs.core.seq(coll);
var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll));
while(true){
if(lead){
var G__22474 = cljs.core.next(s);
var G__22475 = cljs.core.next(lead);
s = G__22474;
lead = G__22475;
continue;
} else {
return s;
}
break;
}
});
/**
* Returns a lazy sequence of the items in coll starting from the
* first item for which (pred item) returns logical false.  Returns a
* stateful transducer when no collection is provided.
*/
cljs.core.drop_while = (function() {
var drop_while = null;
var drop_while__1 = (function (pred){
return (function (rf){
var da = cljs.core.volatile_BANG_(true);
return ((function (da){
return (function() {
var G__22488 = null;
var G__22488__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__22488__1 = (function (result){
var G__22482 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__22482) : rf.call(null,G__22482));
});
var G__22488__2 = (function (result,input){
var drop_QMARK_ = cljs.core.deref(da);
if(cljs.core.truth_((function (){var and__17320__auto__ = drop_QMARK_;
if(cljs.core.truth_(and__17320__auto__)){
var G__22483 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__22483) : pred.call(null,G__22483));
} else {
return and__17320__auto__;
}
})())){
return result;
} else {
cljs.core.vreset_BANG_(da,null);

var G__22484 = result;
var G__22485 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__22484,G__22485) : rf.call(null,G__22484,G__22485));
}
});
G__22488 = function(result,input){
switch(arguments.length){
case 0:
return G__22488__0.call(this);
case 1:
return G__22488__1.call(this,result);
case 2:
return G__22488__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22488.cljs$core$IFn$_invoke$arity$0 = G__22488__0;
G__22488.cljs$core$IFn$_invoke$arity$1 = G__22488__1;
G__22488.cljs$core$IFn$_invoke$arity$2 = G__22488__2;
return G__22488;
})()
;})(da))
});
});
var drop_while__2 = (function (pred,coll){
var step = (function (pred__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(cljs.core.truth_((function (){var and__17320__auto__ = s;
if(and__17320__auto__){
var G__22487 = cljs.core.first(s);
return (pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__22487) : pred__$1.call(null,G__22487));
} else {
return and__17320__auto__;
}
})())){
var G__22489 = pred__$1;
var G__22490 = cljs.core.rest(s);
pred__$1 = G__22489;
coll__$1 = G__22490;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(pred,coll);
});})(step))
,null,null));
});
drop_while = function(pred,coll){
switch(arguments.length){
case 1:
return drop_while__1.call(this,pred);
case 2:
return drop_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
return drop_while;
})()
;
/**
* Returns a lazy (infinite!) sequence of repetitions of the items in coll.
*/
cljs.core.cycle = (function cycle(coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s,cycle(s));
} else {
return null;
}
}),null,null));
});
/**
* Returns a vector of [(take n coll) (drop n coll)]
*/
cljs.core.split_at = (function split_at(n,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,coll),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll)], null);
});
/**
* Returns a lazy (infinite!, or length n if supplied) sequence of xs.
*/
cljs.core.repeat = (function() {
var repeat = null;
var repeat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(x,repeat.cljs$core$IFn$_invoke$arity$1(x));
}),null,null));
});
var repeat__2 = (function (n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeat.cljs$core$IFn$_invoke$arity$1(x));
});
repeat = function(n,x){
switch(arguments.length){
case 1:
return repeat__1.call(this,n);
case 2:
return repeat__2.call(this,n,x);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
return repeat;
})()
;
/**
* Returns a lazy seq of n xs.
*/
cljs.core.replicate = (function replicate(n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
});
/**
* Takes a function of no args, presumably with side effects, and
* returns an infinite (or length n if supplied) lazy sequence of calls
* to it
*/
cljs.core.repeatedly = (function() {
var repeatedly = null;
var repeatedly__1 = (function (f){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),repeatedly.cljs$core$IFn$_invoke$arity$1(f));
}),null,null));
});
var repeatedly__2 = (function (n,f){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeatedly.cljs$core$IFn$_invoke$arity$1(f));
});
repeatedly = function(n,f){
switch(arguments.length){
case 1:
return repeatedly__1.call(this,n);
case 2:
return repeatedly__2.call(this,n,f);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
return repeatedly;
})()
;
/**
* Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects
*/
cljs.core.iterate = (function iterate(f,x){
return cljs.core.cons(x,(new cljs.core.LazySeq(null,(function (){
return iterate(f,(function (){var G__22499 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22499) : f.call(null,G__22499));
})());
}),null,null)));
});
/**
* Returns a lazy seq of the first item in each coll, then the second etc.
* @param {...*} var_args
*/
cljs.core.interleave = (function() {
var interleave = null;
var interleave__2 = (function (c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons(cljs.core.first(s1),cljs.core.cons(cljs.core.first(s2),interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1),cljs.core.rest(s2))));
} else {
return null;
}
}),null,null));
});
var interleave__3 = (function() { 
var G__22502__delegate = function (c1,c2,colls){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c2,cljs.core.array_seq([c1], 0)));
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(interleave,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
};
var G__22502 = function (c1,c2,var_args){
var colls = null;
if (arguments.length > 2) {
var G__22503__i = 0, G__22503__a = new Array(arguments.length -  2);
while (G__22503__i < G__22503__a.length) {G__22503__a[G__22503__i] = arguments[G__22503__i + 2]; ++G__22503__i;}
  colls = new cljs.core.IndexedSeq(G__22503__a,0);
} 
return G__22502__delegate.call(this,c1,c2,colls);};
G__22502.cljs$lang$maxFixedArity = 2;
G__22502.cljs$lang$applyTo = (function (arglist__22504){
var c1 = cljs.core.first(arglist__22504);
arglist__22504 = cljs.core.next(arglist__22504);
var c2 = cljs.core.first(arglist__22504);
var colls = cljs.core.rest(arglist__22504);
return G__22502__delegate(c1,c2,colls);
});
G__22502.cljs$core$IFn$_invoke$arity$variadic = G__22502__delegate;
return G__22502;
})()
;
interleave = function(c1,c2,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return interleave__2.call(this,c1,c2);
default:
var G__22505 = null;
if (arguments.length > 2) {
var G__22506__i = 0, G__22506__a = new Array(arguments.length -  2);
while (G__22506__i < G__22506__a.length) {G__22506__a[G__22506__i] = arguments[G__22506__i + 2]; ++G__22506__i;}
G__22505 = new cljs.core.IndexedSeq(G__22506__a,0);
}
return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1,c2, G__22505);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interleave.cljs$lang$maxFixedArity = 2;
interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
return interleave;
})()
;
/**
* Returns a lazy seq of the elements of coll separated by sep
*/
cljs.core.interpose = (function() {
var interpose = null;
var interpose__1 = (function (sep){
return (function (rf){
var started = cljs.core.volatile_BANG_(false);
return ((function (started){
return (function() {
var G__22521 = null;
var G__22521__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__22521__1 = (function (result){
var G__22514 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__22514) : rf.call(null,G__22514));
});
var G__22521__2 = (function (result,input){
if(cljs.core.truth_(cljs.core.deref(started))){
var sepr = (function (){var G__22515 = result;
var G__22516 = sep;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__22515,G__22516) : rf.call(null,G__22515,G__22516));
})();
if(cljs.core.reduced_QMARK_(sepr)){
return sepr;
} else {
var G__22517 = sepr;
var G__22518 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__22517,G__22518) : rf.call(null,G__22517,G__22518));
}
} else {
cljs.core.vreset_BANG_(started,true);

var G__22519 = result;
var G__22520 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__22519,G__22520) : rf.call(null,G__22519,G__22520));
}
});
G__22521 = function(result,input){
switch(arguments.length){
case 0:
return G__22521__0.call(this);
case 1:
return G__22521__1.call(this,result);
case 2:
return G__22521__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22521.cljs$core$IFn$_invoke$arity$0 = G__22521__0;
G__22521.cljs$core$IFn$_invoke$arity$1 = G__22521__1;
G__22521.cljs$core$IFn$_invoke$arity$2 = G__22521__2;
return G__22521;
})()
;})(started))
});
});
var interpose__2 = (function (sep,coll){
return cljs.core.drop.cljs$core$IFn$_invoke$arity$2((1),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep),coll));
});
interpose = function(sep,coll){
switch(arguments.length){
case 1:
return interpose__1.call(this,sep);
case 2:
return interpose__2.call(this,sep,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interpose.cljs$core$IFn$_invoke$arity$1 = interpose__1;
interpose.cljs$core$IFn$_invoke$arity$2 = interpose__2;
return interpose;
})()
;
/**
* Take a collection of collections, and return a lazy seq
* of items from the inner collection
*/
cljs.core.flatten1 = (function flatten1(colls){
var cat = (function cat(coll,colls__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var coll__$1 = temp__4124__auto__;
return cljs.core.cons(cljs.core.first(coll__$1),cat(cljs.core.rest(coll__$1),colls__$1));
} else {
if(cljs.core.seq(colls__$1)){
return cat(cljs.core.first(colls__$1),cljs.core.rest(colls__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(null,colls);
});
/**
* Returns the result of applying concat to the result of applying map
* to f and colls.  Thus function f should return a collection. Returns
* a transducer when no collections are provided
* @param {...*} var_args
*/
cljs.core.mapcat = (function() {
var mapcat = null;
var mapcat__1 = (function (f){
return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f),cljs.core.cat);
});
var mapcat__2 = (function() { 
var G__22530__delegate = function (f,colls){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map,f,colls));
};
var G__22530 = function (f,var_args){
var colls = null;
if (arguments.length > 1) {
var G__22531__i = 0, G__22531__a = new Array(arguments.length -  1);
while (G__22531__i < G__22531__a.length) {G__22531__a[G__22531__i] = arguments[G__22531__i + 1]; ++G__22531__i;}
  colls = new cljs.core.IndexedSeq(G__22531__a,0);
} 
return G__22530__delegate.call(this,f,colls);};
G__22530.cljs$lang$maxFixedArity = 1;
G__22530.cljs$lang$applyTo = (function (arglist__22532){
var f = cljs.core.first(arglist__22532);
var colls = cljs.core.rest(arglist__22532);
return G__22530__delegate(f,colls);
});
G__22530.cljs$core$IFn$_invoke$arity$variadic = G__22530__delegate;
return G__22530;
})()
;
mapcat = function(f,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return mapcat__1.call(this,f);
default:
var G__22533 = null;
if (arguments.length > 1) {
var G__22534__i = 0, G__22534__a = new Array(arguments.length -  1);
while (G__22534__i < G__22534__a.length) {G__22534__a[G__22534__i] = arguments[G__22534__i + 1]; ++G__22534__i;}
G__22533 = new cljs.core.IndexedSeq(G__22534__a,0);
}
return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__22533);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapcat.cljs$lang$maxFixedArity = 1;
mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
return mapcat;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.filter = (function() {
var filter = null;
var filter__1 = (function (pred){
return (function (rf){
return (function() {
var G__22553 = null;
var G__22553__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__22553__1 = (function (result){
var G__22547 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__22547) : rf.call(null,G__22547));
});
var G__22553__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__22548 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__22548) : pred.call(null,G__22548));
})())){
var G__22549 = result;
var G__22550 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__22549,G__22550) : rf.call(null,G__22549,G__22550));
} else {
return result;
}
});
G__22553 = function(result,input){
switch(arguments.length){
case 0:
return G__22553__0.call(this);
case 1:
return G__22553__1.call(this,result);
case 2:
return G__22553__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22553.cljs$core$IFn$_invoke$arity$0 = G__22553__0;
G__22553.cljs$core$IFn$_invoke$arity$1 = G__22553__1;
G__22553.cljs$core$IFn$_invoke$arity$2 = G__22553__2;
return G__22553;
})()
});
});
var filter__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__18219__auto___22554 = size;
var i_22555 = (0);
while(true){
if((i_22555 < n__18219__auto___22554)){
if(cljs.core.truth_((function (){var G__22551 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_22555);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__22551) : pred.call(null,G__22551));
})())){
cljs.core.chunk_append(b,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_22555));
} else {
}

var G__22556 = (i_22555 + (1));
i_22555 = G__22556;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),filter.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.chunk_rest(s)));
} else {
var f = cljs.core.first(s);
var r = cljs.core.rest(s);
if(cljs.core.truth_((function (){var G__22552 = f;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__22552) : pred.call(null,G__22552));
})())){
return cljs.core.cons(f,filter.cljs$core$IFn$_invoke$arity$2(pred,r));
} else {
return filter.cljs$core$IFn$_invoke$arity$2(pred,r);
}
}
} else {
return null;
}
}),null,null));
});
filter = function(pred,coll){
switch(arguments.length){
case 1:
return filter__1.call(this,pred);
case 2:
return filter__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
return filter;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns false. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.remove = (function() {
var remove = null;
var remove__1 = (function (pred){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
});
var remove__2 = (function (pred,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred),coll);
});
remove = function(pred,coll){
switch(arguments.length){
case 1:
return remove__1.call(this,pred);
case 2:
return remove__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
return remove;
})()
;
/**
* Returns a lazy sequence of the nodes in a tree, via a depth-first walk.
* branch? must be a fn of one arg that returns true if passed a node
* that can have children (but may not).  children must be a fn of one
* arg that returns a sequence of the children. Will only be called on
* nodes for which branch? returns true. Root is the root node of the
* tree.
*/
cljs.core.tree_seq = (function tree_seq(branch_QMARK_,children,root){
var walk = (function walk(node){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(node,(cljs.core.truth_((function (){var G__22563 = node;
return (branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__22563) : branch_QMARK_.call(null,G__22563));
})())?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(walk,cljs.core.array_seq([(function (){var G__22564 = node;
return (children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__22564) : children.call(null,G__22564));
})()], 0)):null));
}),null,null));
});
return walk(root);
});
/**
* Takes any nested combination of sequential things (lists, vectors,
* etc.) and returns their contents as a single, flat sequence.
* (flatten nil) returns nil.
*/
cljs.core.flatten = (function flatten(x){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__22565_SHARP_){
return !(cljs.core.sequential_QMARK_(p1__22565_SHARP_));
}),cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_,cljs.core.seq,x)));
});
/**
* Returns a new coll consisting of to-coll with all of the items of
* from-coll conjoined. A transducer may be supplied.
*/
cljs.core.into = (function() {
var into = null;
var into__2 = (function (to,from){
if(!((to == null))){
if((function (){var G__22568 = to;
if(G__22568){
var bit__18006__auto__ = (G__22568.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__18006__auto__) || (G__22568.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,to,from);
}
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,from);
}
});
var into__3 = (function (to,xform,from){
if((function (){var G__22569 = to;
if(G__22569){
var bit__18006__auto__ = (G__22569.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__18006__auto__) || (G__22569.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj,to,from);
}
});
into = function(to,xform,from){
switch(arguments.length){
case 2:
return into__2.call(this,to,xform);
case 3:
return into__3.call(this,to,xform,from);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into.cljs$core$IFn$_invoke$arity$2 = into__2;
into.cljs$core$IFn$_invoke$arity$3 = into__3;
return into;
})()
;
/**
* Returns a vector consisting of the result of applying f to the
* set of first items of each coll, followed by applying f to the set
* of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments.
* @param {...*} var_args
*/
cljs.core.mapv = (function() {
var mapv = null;
var mapv__2 = (function (f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(function (){var G__22571 = o;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22571) : f.call(null,G__22571));
})());
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
var mapv__3 = (function (f,c1,c2){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,c1,c2));
});
var mapv__4 = (function (f,c1,c2,c3){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,c1,c2,c3));
});
var mapv__5 = (function() { 
var G__22572__delegate = function (f,c1,c2,c3,colls){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map,f,c1,c2,c3,cljs.core.array_seq([colls], 0)));
};
var G__22572 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__22573__i = 0, G__22573__a = new Array(arguments.length -  4);
while (G__22573__i < G__22573__a.length) {G__22573__a[G__22573__i] = arguments[G__22573__i + 4]; ++G__22573__i;}
  colls = new cljs.core.IndexedSeq(G__22573__a,0);
} 
return G__22572__delegate.call(this,f,c1,c2,c3,colls);};
G__22572.cljs$lang$maxFixedArity = 4;
G__22572.cljs$lang$applyTo = (function (arglist__22574){
var f = cljs.core.first(arglist__22574);
arglist__22574 = cljs.core.next(arglist__22574);
var c1 = cljs.core.first(arglist__22574);
arglist__22574 = cljs.core.next(arglist__22574);
var c2 = cljs.core.first(arglist__22574);
arglist__22574 = cljs.core.next(arglist__22574);
var c3 = cljs.core.first(arglist__22574);
var colls = cljs.core.rest(arglist__22574);
return G__22572__delegate(f,c1,c2,c3,colls);
});
G__22572.cljs$core$IFn$_invoke$arity$variadic = G__22572__delegate;
return G__22572;
})()
;
mapv = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return mapv__2.call(this,f,c1);
case 3:
return mapv__3.call(this,f,c1,c2);
case 4:
return mapv__4.call(this,f,c1,c2,c3);
default:
var G__22575 = null;
if (arguments.length > 4) {
var G__22576__i = 0, G__22576__a = new Array(arguments.length -  4);
while (G__22576__i < G__22576__a.length) {G__22576__a[G__22576__i] = arguments[G__22576__i + 4]; ++G__22576__i;}
G__22575 = new cljs.core.IndexedSeq(G__22576__a,0);
}
return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__22575);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapv.cljs$lang$maxFixedArity = 4;
mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
return mapv;
})()
;
/**
* Returns a vector of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
*/
cljs.core.filterv = (function filterv(pred,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
if(cljs.core.truth_((function (){var G__22578 = o;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__22578) : pred.call(null,G__22578));
})())){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,o);
} else {
return v;
}
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
/**
* Returns a lazy sequence of lists of n items each, at offsets step
* apart. If step is not supplied, defaults to n, i.e. the partitions
* do not overlap. If a pad collection is supplied, use its elements as
* necessary to complete last partition up to n items. In case there are
* not enough padding elements, return a partition with less than n items.
*/
cljs.core.partition = (function() {
var partition = null;
var partition__2 = (function (n,coll){
return partition.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
var partition__4 = (function (n,step,pad,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$4(n,step,pad,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p,pad)));
}
} else {
return null;
}
}),null,null));
});
partition = function(n,step,pad,coll){
switch(arguments.length){
case 2:
return partition__2.call(this,n,step);
case 3:
return partition__3.call(this,n,step,pad);
case 4:
return partition__4.call(this,n,step,pad,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
return partition;
})()
;
/**
* Returns the value in a nested associative structure,
* where ks is a sequence of keys. Returns nil if the key is not present,
* or the not-found value if supplied.
*/
cljs.core.get_in = (function() {
var get_in = null;
var get_in__2 = (function (m,ks){
return get_in.cljs$core$IFn$_invoke$arity$3(m,ks,null);
});
var get_in__3 = (function (m,ks,not_found){
var sentinel = cljs.core.lookup_sentinel;
var m__$1 = m;
var ks__$1 = cljs.core.seq(ks);
while(true){
if(ks__$1){
if(!((function (){var G__22593 = m__$1;
if(G__22593){
var bit__18013__auto__ = (G__22593.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__18013__auto__) || (G__22593.cljs$core$ILookup$)){
return true;
} else {
if((!G__22593.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__22593);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__22593);
}
})())){
return not_found;
} else {
var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,cljs.core.first(ks__$1),sentinel);
if((sentinel === m__$2)){
return not_found;
} else {
var G__22594 = sentinel;
var G__22595 = m__$2;
var G__22596 = cljs.core.next(ks__$1);
sentinel = G__22594;
m__$1 = G__22595;
ks__$1 = G__22596;
continue;
}
}
} else {
return m__$1;
}
break;
}
});
get_in = function(m,ks,not_found){
switch(arguments.length){
case 2:
return get_in__2.call(this,m,ks);
case 3:
return get_in__3.call(this,m,ks,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
return get_in;
})()
;
/**
* Associates a value in a nested associative structure, where ks is a
* sequence of keys and v is the new value and returns a new nested structure.
* If any levels do not exist, hash-maps will be created.
*/
cljs.core.assoc_in = (function assoc_in(m,p__22597,v){
var vec__22602 = p__22597;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22602,(0),null);
var ks = cljs.core.nthnext(vec__22602,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,v));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
/**
* 'Updates' a value in a nested associative structure, where ks is a
* sequence of keys and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* nested structure.  If any levels do not exist, hash-maps will be
* created.
* @param {...*} var_args
*/
cljs.core.update_in = (function() {
var update_in = null;
var update_in__3 = (function (m,p__22603,f){
var vec__22641 = p__22603;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22641,(0),null);
var ks = cljs.core.nthnext(vec__22641,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__22642 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22642) : f.call(null,G__22642));
})());
}
});
var update_in__4 = (function (m,p__22604,f,a){
var vec__22643 = p__22604;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22643,(0),null);
var ks = cljs.core.nthnext(vec__22643,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__22644 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__22645 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22644,G__22645) : f.call(null,G__22644,G__22645));
})());
}
});
var update_in__5 = (function (m,p__22605,f,a,b){
var vec__22646 = p__22605;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22646,(0),null);
var ks = cljs.core.nthnext(vec__22646,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__22647 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__22648 = a;
var G__22649 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22647,G__22648,G__22649) : f.call(null,G__22647,G__22648,G__22649));
})());
}
});
var update_in__6 = (function (m,p__22606,f,a,b,c){
var vec__22650 = p__22606;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22650,(0),null);
var ks = cljs.core.nthnext(vec__22650,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b,c));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__22651 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__22652 = a;
var G__22653 = b;
var G__22654 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__22651,G__22652,G__22653,G__22654) : f.call(null,G__22651,G__22652,G__22653,G__22654));
})());
}
});
var update_in__7 = (function() { 
var G__22656__delegate = function (m,p__22607,f,a,b,c,args){
var vec__22655 = p__22607;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22655,(0),null);
var ks = cljs.core.nthnext(vec__22655,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(update_in,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,cljs.core.array_seq([b,c,args], 0)));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),a,b,c,cljs.core.array_seq([args], 0)));
}
};
var G__22656 = function (m,p__22607,f,a,b,c,var_args){
var args = null;
if (arguments.length > 6) {
var G__22657__i = 0, G__22657__a = new Array(arguments.length -  6);
while (G__22657__i < G__22657__a.length) {G__22657__a[G__22657__i] = arguments[G__22657__i + 6]; ++G__22657__i;}
  args = new cljs.core.IndexedSeq(G__22657__a,0);
} 
return G__22656__delegate.call(this,m,p__22607,f,a,b,c,args);};
G__22656.cljs$lang$maxFixedArity = 6;
G__22656.cljs$lang$applyTo = (function (arglist__22658){
var m = cljs.core.first(arglist__22658);
arglist__22658 = cljs.core.next(arglist__22658);
var p__22607 = cljs.core.first(arglist__22658);
arglist__22658 = cljs.core.next(arglist__22658);
var f = cljs.core.first(arglist__22658);
arglist__22658 = cljs.core.next(arglist__22658);
var a = cljs.core.first(arglist__22658);
arglist__22658 = cljs.core.next(arglist__22658);
var b = cljs.core.first(arglist__22658);
arglist__22658 = cljs.core.next(arglist__22658);
var c = cljs.core.first(arglist__22658);
var args = cljs.core.rest(arglist__22658);
return G__22656__delegate(m,p__22607,f,a,b,c,args);
});
G__22656.cljs$core$IFn$_invoke$arity$variadic = G__22656__delegate;
return G__22656;
})()
;
update_in = function(m,p__22607,f,a,b,c,var_args){
var args = var_args;
switch(arguments.length){
case 3:
return update_in__3.call(this,m,p__22607,f);
case 4:
return update_in__4.call(this,m,p__22607,f,a);
case 5:
return update_in__5.call(this,m,p__22607,f,a,b);
case 6:
return update_in__6.call(this,m,p__22607,f,a,b,c);
default:
var G__22659 = null;
if (arguments.length > 6) {
var G__22660__i = 0, G__22660__a = new Array(arguments.length -  6);
while (G__22660__i < G__22660__a.length) {G__22660__a[G__22660__i] = arguments[G__22660__i + 6]; ++G__22660__i;}
G__22659 = new cljs.core.IndexedSeq(G__22660__a,0);
}
return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m,p__22607,f,a,b,c, G__22659);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update_in.cljs$lang$maxFixedArity = 6;
update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
return update_in;
})()
;
/**
* 'Updates' a value in an associative structure, where k is a
* key and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* structure.  If the key does not exist, nil is passed as the old value.
* @param {...*} var_args
*/
cljs.core.update = (function() {
var update = null;
var update__3 = (function (m,k,f){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__22671 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22671) : f.call(null,G__22671));
})());
});
var update__4 = (function (m,k,f,x){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__22672 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__22673 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22672,G__22673) : f.call(null,G__22672,G__22673));
})());
});
var update__5 = (function (m,k,f,x,y){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__22674 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__22675 = x;
var G__22676 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22674,G__22675,G__22676) : f.call(null,G__22674,G__22675,G__22676));
})());
});
var update__6 = (function (m,k,f,x,y,z){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__22677 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__22678 = x;
var G__22679 = y;
var G__22680 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__22677,G__22678,G__22679,G__22680) : f.call(null,G__22677,G__22678,G__22679,G__22680));
})());
});
var update__7 = (function() { 
var G__22681__delegate = function (m,k,f,x,y,z,more){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),x,y,z,cljs.core.array_seq([more], 0)));
};
var G__22681 = function (m,k,f,x,y,z,var_args){
var more = null;
if (arguments.length > 6) {
var G__22682__i = 0, G__22682__a = new Array(arguments.length -  6);
while (G__22682__i < G__22682__a.length) {G__22682__a[G__22682__i] = arguments[G__22682__i + 6]; ++G__22682__i;}
  more = new cljs.core.IndexedSeq(G__22682__a,0);
} 
return G__22681__delegate.call(this,m,k,f,x,y,z,more);};
G__22681.cljs$lang$maxFixedArity = 6;
G__22681.cljs$lang$applyTo = (function (arglist__22683){
var m = cljs.core.first(arglist__22683);
arglist__22683 = cljs.core.next(arglist__22683);
var k = cljs.core.first(arglist__22683);
arglist__22683 = cljs.core.next(arglist__22683);
var f = cljs.core.first(arglist__22683);
arglist__22683 = cljs.core.next(arglist__22683);
var x = cljs.core.first(arglist__22683);
arglist__22683 = cljs.core.next(arglist__22683);
var y = cljs.core.first(arglist__22683);
arglist__22683 = cljs.core.next(arglist__22683);
var z = cljs.core.first(arglist__22683);
var more = cljs.core.rest(arglist__22683);
return G__22681__delegate(m,k,f,x,y,z,more);
});
G__22681.cljs$core$IFn$_invoke$arity$variadic = G__22681__delegate;
return G__22681;
})()
;
update = function(m,k,f,x,y,z,var_args){
var more = var_args;
switch(arguments.length){
case 3:
return update__3.call(this,m,k,f);
case 4:
return update__4.call(this,m,k,f,x);
case 5:
return update__5.call(this,m,k,f,x,y);
case 6:
return update__6.call(this,m,k,f,x,y,z);
default:
var G__22684 = null;
if (arguments.length > 6) {
var G__22685__i = 0, G__22685__a = new Array(arguments.length -  6);
while (G__22685__i < G__22685__a.length) {G__22685__a[G__22685__i] = arguments[G__22685__i + 6]; ++G__22685__i;}
G__22684 = new cljs.core.IndexedSeq(G__22685__a,0);
}
return update__7.cljs$core$IFn$_invoke$arity$variadic(m,k,f,x,y,z, G__22684);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update.cljs$lang$maxFixedArity = 6;
update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
update.cljs$core$IFn$_invoke$arity$3 = update__3;
update.cljs$core$IFn$_invoke$arity$4 = update__4;
update.cljs$core$IFn$_invoke$arity$5 = update__5;
update.cljs$core$IFn$_invoke$arity$6 = update__6;
update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
return update;
})()
;

/**
* @constructor
*/
cljs.core.VectorNode = (function (edit,arr){
this.edit = edit;
this.arr = arr;
})

cljs.core.VectorNode.cljs$lang$type = true;

cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";

cljs.core.VectorNode.cljs$lang$ctorPrWriter = (function (this__17919__auto__,writer__17920__auto__,opt__17921__auto__){
return cljs.core._write(writer__17920__auto__,"cljs.core/VectorNode");
});

cljs.core.__GT_VectorNode = (function __GT_VectorNode(edit,arr){
return (new cljs.core.VectorNode(edit,arr));
});

cljs.core.pv_fresh_node = (function pv_fresh_node(edit){
return (new cljs.core.VectorNode(edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
});
cljs.core.pv_aget = (function pv_aget(node,idx){
return (node.arr[idx]);
});
cljs.core.pv_aset = (function pv_aset(node,idx,val){
return (node.arr[idx] = val);
});
cljs.core.pv_clone_node = (function pv_clone_node(node){
return (new cljs.core.VectorNode(node.edit,cljs.core.aclone(node.arr)));
});
cljs.core.tail_off = (function tail_off(pv){
var cnt = pv.cnt;
if((cnt < (32))){
return (0);
} else {
return (((cnt - (1)) >>> (5)) << (5));
}
});
cljs.core.new_path = (function new_path(edit,level,node){
var ll = level;
var ret = node;
while(true){
if((ll === (0))){
return ret;
} else {
var embed = ret;
var r = cljs.core.pv_fresh_node(edit);
var _ = cljs.core.pv_aset(r,(0),embed);
var G__22686 = (ll - (5));
var G__22687 = r;
ll = G__22686;
ret = G__22687;
continue;
}
break;
}
});
cljs.core.push_tail = (function push_tail(pv,level,parent,tailnode){
var ret = cljs.core.pv_clone_node(parent);
var subidx = (((pv.cnt - (1)) >>> level) & (31));
if(((5) === level)){
cljs.core.pv_aset(ret,subidx,tailnode);

return ret;
} else {
var child = cljs.core.pv_aget(parent,subidx);
if(!((child == null))){
var node_to_insert = push_tail(pv,(level - (5)),child,tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
} else {
var node_to_insert = cljs.core.new_path(null,(level - (5)),tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
}
}
});
cljs.core.vector_index_out_of_bounds = (function vector_index_out_of_bounds(i,cnt){
throw (new Error([cljs.core.str("No item "),cljs.core.str(i),cljs.core.str(" in vector of length "),cljs.core.str(cnt)].join('')));
});
cljs.core.first_array_for_longvec = (function first_array_for_longvec(pv){
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__22692 = cljs.core.pv_aget(node,(0));
var G__22693 = (level - (5));
node = G__22692;
level = G__22693;
continue;
} else {
return node.arr;
}
break;
}
});
cljs.core.unchecked_array_for = (function unchecked_array_for(pv,i){
if((i >= cljs.core.tail_off(pv))){
return pv.tail;
} else {
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__22694 = cljs.core.pv_aget(node,((i >>> level) & (31)));
var G__22695 = (level - (5));
node = G__22694;
level = G__22695;
continue;
} else {
return node.arr;
}
break;
}
}
});
cljs.core.array_for = (function array_for(pv,i){
if((((0) <= i)) && ((i < pv.cnt))){
return cljs.core.unchecked_array_for(pv,i);
} else {
return cljs.core.vector_index_out_of_bounds(i,pv.cnt);
}
});
cljs.core.do_assoc = (function do_assoc(pv,level,node,i,val){
var ret = cljs.core.pv_clone_node(node);
if((level === (0))){
cljs.core.pv_aset(ret,(i & (31)),val);

return ret;
} else {
var subidx = ((i >>> level) & (31));
cljs.core.pv_aset(ret,subidx,do_assoc(pv,(level - (5)),cljs.core.pv_aget(node,subidx),i,val));

return ret;
}
});
cljs.core.pop_tail = (function pop_tail(pv,level,node){
var subidx = (((pv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = pop_tail(pv,(level - (5)),cljs.core.pv_aget(node,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,new_child);

return ret;
}
} else {
if((subidx === (0))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,null);

return ret;

}
}
});

/**
* @constructor
*/
cljs.core.RangedIterator = (function (i,base,arr,v,start,end){
this.i = i;
this.base = base;
this.arr = arr;
this.v = v;
this.start = start;
this.end = end;
})
cljs.core.RangedIterator.prototype.hasNext = (function (){
var self__ = this;
var this$ = this;
return (self__.i < self__.end);
});

cljs.core.RangedIterator.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(((self__.i - self__.base) === (32))){
self__.arr = cljs.core.unchecked_array_for(self__.v,self__.i);

self__.base = (self__.base + (32));
} else {
}

var ret = (self__.arr[(self__.i & (31))]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.RangedIterator.cljs$lang$type = true;

cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";

cljs.core.RangedIterator.cljs$lang$ctorPrWriter = (function (this__17919__auto__,writer__17920__auto__,opt__17921__auto__){
return cljs.core._write(writer__17920__auto__,"cljs.core/RangedIterator");
});

cljs.core.__GT_RangedIterator = (function __GT_RangedIterator(i,base,arr,v,start,end){
return (new cljs.core.RangedIterator(i,base,arr,v,start,end));
});

cljs.core.ranged_iterator = (function ranged_iterator(v,start,end){
var i = start;
return (new cljs.core.RangedIterator(i,(i - (i % (32))),(((start < cljs.core.count(v)))?cljs.core.unchecked_array_for(v,i):null),v,start,end));
});







/**
* @constructor
*/
cljs.core.PersistentVector = (function (meta,cnt,shift,root,tail,__hash){
this.meta = meta;
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167668511;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentVector.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentVector.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__22705 = init__$2;
var G__22706 = (j + i);
var G__22707 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22705,G__22706,G__22707) : f.call(null,G__22705,G__22706,G__22707));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__22718 = (j + (1));
var G__22719 = init__$3;
j = G__22718;
init__$2 = G__22719;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__22708 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22708) : cljs.core.deref.call(null,G__22708));
} else {
var G__22720 = (i + len);
var G__22721 = init__$2;
i = G__22720;
init__$1 = G__22721;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return (cljs.core.unchecked_array_for(coll__$1,n)[(n & (31))]);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(coll__$1) <= n)){
var new_tail = cljs.core.aclone(self__.tail);
(new_tail[(n & (31))] = val);

return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,cljs.core.do_assoc(coll__$1,self__.shift,self__.root,n,val),self__.tail,null));
}
} else {
if((n === self__.cnt)){
return cljs.core._conj(coll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds  [0,"),cljs.core.str(self__.cnt),cljs.core.str("]")].join('')));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.ranged_iterator(this$__$1,(0),self__.cnt);
});

cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(0));
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(1));
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(self__.cnt - (1)));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
} else {
if(((1) < (self__.cnt - cljs.core.tail_off(coll__$1)))){
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt - (1)),self__.shift,self__.root,self__.tail.slice((0),(-1)),null));
} else {
var new_tail = cljs.core.unchecked_array_for(coll__$1,(self__.cnt - (2)));
var nr = cljs.core.pop_tail(coll__$1,self__.shift,self__.root);
var new_root = (((nr == null))?cljs.core.PersistentVector.EMPTY_NODE:nr);
var cnt_1 = (self__.cnt - (1));
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
return (new cljs.core.PersistentVector(self__.meta,cnt_1,(self__.shift - (5)),cljs.core.pv_aget(new_root,(0)),new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,cnt_1,self__.shift,new_root,new_tail,null));
}

}
}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return (new cljs.core.RSeq(coll__$1,(self__.cnt - (1)),null));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__17753__auto__ = self__.__hash;
if(!((h__17753__auto__ == null))){
return h__17753__auto__;
} else {
var h__17753__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__17753__auto____$1;

return h__17753__auto____$1;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((other instanceof cljs.core.PersistentVector)){
if((self__.cnt === cljs.core.count(other))){
var me_iter = cljs.core._iterator(coll__$1);
var you_iter = cljs.core._iterator(other);
while(true){
if(cljs.core.truth_(me_iter.hasNext())){
var x = me_iter.next();
var y = you_iter.next();
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
continue;
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_sequential(coll__$1,other);
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientVector(self__.cnt,self__.shift,(function (){var G__22709 = self__.root;
return (cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__22709) : cljs.core.tv_editable_root.call(null,G__22709));
})(),(function (){var G__22710 = self__.tail;
return (cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__22710) : cljs.core.tv_editable_tail.call(null,G__22710));
})()));
});

cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (v,f){
var self__ = this;
var v__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1,f);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__22711 = init__$2;
var G__22712 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22711,G__22712) : f.call(null,G__22711,G__22712));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__22722 = (j + (1));
var G__22723 = init__$3;
j = G__22722;
init__$2 = G__22723;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__22713 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22713) : cljs.core.deref.call(null,G__22713));
} else {
var G__22724 = (i + len);
var G__22725 = init__$2;
i = G__22724;
init__$1 = G__22725;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._assoc_n(coll__$1,k,v);
} else {
throw (new Error("Vector's key for assoc must be a number."));
}
});

cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
return null;
} else {
if((self__.cnt <= (32))){
return (new cljs.core.IndexedSeq(self__.tail,(0)));
} else {
var G__22714 = coll__$1;
var G__22715 = cljs.core.first_array_for_longvec(coll__$1);
var G__22716 = (0);
var G__22717 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__22714,G__22715,G__22716,G__22717) : cljs.core.chunked_seq.call(null,G__22714,G__22715,G__22716,G__22717));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentVector(meta__$1,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(((self__.cnt - cljs.core.tail_off(coll__$1)) < (32))){
var len = self__.tail.length;
var new_tail = (new Array((len + (1))));
var n__18219__auto___22726 = len;
var i_22727 = (0);
while(true){
if((i_22727 < n__18219__auto___22726)){
(new_tail[i_22727] = (self__.tail[i_22727]));

var G__22728 = (i_22727 + (1));
i_22727 = G__22728;
continue;
} else {
}
break;
}

(new_tail[len] = o);

return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),self__.shift,self__.root,new_tail,null));
} else {
var root_overflow_QMARK_ = ((self__.cnt >>> (5)) > ((1) << self__.shift));
var new_shift = ((root_overflow_QMARK_)?(self__.shift + (5)):self__.shift);
var new_root = ((root_overflow_QMARK_)?(function (){var n_r = cljs.core.pv_fresh_node(null);
cljs.core.pv_aset(n_r,(0),self__.root);

cljs.core.pv_aset(n_r,(1),cljs.core.new_path(null,self__.shift,(new cljs.core.VectorNode(null,self__.tail))));

return n_r;
})():cljs.core.push_tail(coll__$1,self__.shift,self__.root,(new cljs.core.VectorNode(null,self__.tail))));
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),new_shift,new_root,[o],null));
}
});

cljs.core.PersistentVector.prototype.call = (function() {
var G__22729 = null;
var G__22729__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__22729__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__22729 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__22729__2.call(this,self__,k);
case 3:
return G__22729__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22729.cljs$core$IFn$_invoke$arity$2 = G__22729__2;
G__22729.cljs$core$IFn$_invoke$arity$3 = G__22729__3;
return G__22729;
})()
;

cljs.core.PersistentVector.prototype.apply = (function (self__,args22704){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args22704)));
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.PersistentVector.cljs$lang$type = true;

cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";

cljs.core.PersistentVector.cljs$lang$ctorPrWriter = (function (this__17919__auto__,writer__17920__auto__,opt__17921__auto__){
return cljs.core._write(writer__17920__auto__,"cljs.core/PersistentVector");
});

cljs.core.__GT_PersistentVector = (function __GT_PersistentVector(meta,cnt,shift,root,tail,__hash){
return (new cljs.core.PersistentVector(meta,cnt,shift,root,tail,__hash));
});

cljs.core.PersistentVector.EMPTY_NODE = (new cljs.core.VectorNode(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
cljs.core.PersistentVector.EMPTY = (new cljs.core.PersistentVector(null,(0),(5),cljs.core.PersistentVector.EMPTY_NODE,[],cljs.core.empty_ordered_hash));
cljs.core.PersistentVector.fromArray = (function (xs,no_clone){
var l = xs.length;
var xs__$1 = ((no_clone)?xs:cljs.core.aclone(xs));
if((l < (32))){
return (new cljs.core.PersistentVector(null,l,(5),cljs.core.PersistentVector.EMPTY_NODE,xs__$1,null));
} else {
var node = xs__$1.slice((0),(32));
var v = (new cljs.core.PersistentVector(null,(32),(5),cljs.core.PersistentVector.EMPTY_NODE,node,null));
var i = (32);
var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
while(true){
if((i < l)){
var G__22730 = (i + (1));
var G__22731 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out,(xs__$1[i]));
i = G__22730;
out = G__22731;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18310__auto__ = this;
return cljs.core.es6_iterator(this__18310__auto__);
}));
cljs.core.vec = (function vec(coll){
if(coll instanceof Array){
return cljs.core.PersistentVector.fromArray(coll,true);
} else {
return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core._as_transient(cljs.core.PersistentVector.EMPTY),coll));
}
});
/**
* @param {...*} var_args
*/
cljs.core.vector = (function() { 
var vector__delegate = function (args){
if(((args instanceof cljs.core.IndexedSeq)) && ((args.i === (0)))){
return cljs.core.PersistentVector.fromArray(args.arr,true);
} else {
return cljs.core.vec(args);
}
};
var vector = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__22732__i = 0, G__22732__a = new Array(arguments.length -  0);
while (G__22732__i < G__22732__a.length) {G__22732__a[G__22732__i] = arguments[G__22732__i + 0]; ++G__22732__i;}
  args = new cljs.core.IndexedSeq(G__22732__a,0);
} 
return vector__delegate.call(this,args);};
vector.cljs$lang$maxFixedArity = 0;
vector.cljs$lang$applyTo = (function (arglist__22733){
var args = cljs.core.seq(arglist__22733);
return vector__delegate(args);
});
vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
return vector;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedSeq = (function (vec,node,i,off,meta,__hash){
this.vec = vec;
this.node = node;
this.i = i;
this.off = off;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375020;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__22734 = self__.vec;
var G__22735 = self__.node;
var G__22736 = self__.i;
var G__22737 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__22734,G__22735,G__22736,G__22737) : cljs.core.chunked_seq.call(null,G__22734,G__22735,G__22736,G__22737));
})();
if((s == null)){
return null;
} else {
return s;
}
} else {
return cljs.core._chunked_next(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__17753__auto__ = self__.__hash;
if(!((h__17753__auto__ == null))){
return h__17753__auto__;
} else {
var h__17753__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__17753__auto____$1;

return h__17753__auto____$1;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2((function (){var G__22738 = self__.vec;
var G__22739 = (self__.i + self__.off);
var G__22740 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__22738,G__22739,G__22740) : cljs.core.subvec.call(null,G__22738,G__22739,G__22740));
})(),f);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3((function (){var G__22741 = self__.vec;
var G__22742 = (self__.i + self__.off);
var G__22743 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__22741,G__22742,G__22743) : cljs.core.subvec.call(null,G__22741,G__22742,G__22743));
})(),f,start);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.node[self__.off]);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__22744 = self__.vec;
var G__22745 = self__.node;
var G__22746 = self__.i;
var G__22747 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__22744,G__22745,G__22746,G__22747) : cljs.core.chunked_seq.call(null,G__22744,G__22745,G__22746,G__22747));
})();
if((s == null)){
return cljs.core.List.EMPTY;
} else {
return s;
}
} else {
return cljs.core._chunked_rest(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node,self__.off);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__22748 = self__.vec;
var G__22749 = cljs.core.unchecked_array_for(self__.vec,end);
var G__22750 = end;
var G__22751 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__22748,G__22749,G__22750,G__22751) : cljs.core.chunked_seq.call(null,G__22748,G__22749,G__22750,G__22751));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
var G__22752 = self__.vec;
var G__22753 = self__.node;
var G__22754 = self__.i;
var G__22755 = self__.off;
var G__22756 = m;
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__22752,G__22753,G__22754,G__22755,G__22756) : cljs.core.chunked_seq.call(null,G__22752,G__22753,G__22754,G__22755,G__22756));
});

cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__22757 = self__.vec;
var G__22758 = cljs.core.unchecked_array_for(self__.vec,end);
var G__22759 = end;
var G__22760 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__22757,G__22758,G__22759,G__22760) : cljs.core.chunked_seq.call(null,G__22757,G__22758,G__22759,G__22760));
} else {
return null;
}
});

cljs.core.ChunkedSeq.cljs$lang$type = true;

cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";

cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = (function (this__17919__auto__,writer__17920__auto__,opt__17921__auto__){
return cljs.core._write(writer__17920__auto__,"cljs.core/ChunkedSeq");
});

cljs.core.__GT_ChunkedSeq = (function __GT_ChunkedSeq(vec,node,i,off,meta,__hash){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,__hash));
});

(cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18310__auto__ = this;
return cljs.core.es6_iterator(this__18310__auto__);
}));
cljs.core.chunked_seq = (function() {
var chunked_seq = null;
var chunked_seq__3 = (function (vec,i,off){
return (new cljs.core.ChunkedSeq(vec,cljs.core.array_for(vec,i),i,off,null,null));
});
var chunked_seq__4 = (function (vec,node,i,off){
return (new cljs.core.ChunkedSeq(vec,node,i,off,null,null));
});
var chunked_seq__5 = (function (vec,node,i,off,meta){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,null));
});
chunked_seq = function(vec,node,i,off,meta){
switch(arguments.length){
case 3:
return chunked_seq__3.call(this,vec,node,i);
case 4:
return chunked_seq__4.call(this,vec,node,i,off);
case 5:
return chunked_seq__5.call(this,vec,node,i,off,meta);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
return chunked_seq;
})()
;

/**
* @constructor
*/
cljs.core.Subvec = (function (meta,v,start,end,__hash){
this.meta = meta;
this.v = v;
this.start = start;
this.end = end;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 166617887;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Subvec.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Subvec.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return cljs.core.vector_index_out_of_bounds(n,(self__.end - self__.start));
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.start + n));
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return not_found;
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v,(self__.start + n),not_found);
}
});

cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
var v_pos = (self__.start + n);
var G__22762 = self__.meta;
var G__22763 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v,v_pos,val);
var G__22764 = self__.start;
var G__22765 = (function (){var x__17649__auto__ = self__.end;
var y__17650__auto__ = (v_pos + (1));
return ((x__17649__auto__ > y__17650__auto__) ? x__17649__auto__ : y__17650__auto__);
})();
var G__22766 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__22762,G__22763,G__22764,G__22765,G__22766) : cljs.core.build_subvec.call(null,G__22762,G__22763,G__22764,G__22765,G__22766));
});

cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Subvec(self__.meta,self__.v,self__.start,self__.end,self__.__hash));
});

cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.end - self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.end - (1)));
});

cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.start === self__.end)){
throw (new Error("Can't pop empty vector"));
} else {
var G__22767 = self__.meta;
var G__22768 = self__.v;
var G__22769 = self__.start;
var G__22770 = (self__.end - (1));
var G__22771 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__22767,G__22768,G__22769,G__22770,G__22771) : cljs.core.build_subvec.call(null,G__22767,G__22768,G__22769,G__22770,G__22771));
}
});

cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(!((self__.start === self__.end))){
return (new cljs.core.RSeq(coll__$1,((self__.end - self__.start) - (1)),null));
} else {
return null;
}
});

cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__17753__auto__ = self__.__hash;
if(!((h__17753__auto__ == null))){
return h__17753__auto__;
} else {
var h__17753__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__17753__auto____$1;

return h__17753__auto____$1;
}
});

cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start__$1){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,start__$1);
});

cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,key,val){
var self__ = this;
var coll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n(coll__$1,key,val);
} else {
throw (new Error("Subvec's key for assoc must be a number."));
}
});

cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var subvec_seq = ((function (coll__$1){
return (function subvec_seq(i){
if((i === self__.end)){
return null;
} else {
return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i),(new cljs.core.LazySeq(null,((function (coll__$1){
return (function (){
return subvec_seq((i + (1)));
});})(coll__$1))
,null,null)));
}
});})(coll__$1))
;
return subvec_seq(self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
var G__22773 = meta__$1;
var G__22774 = self__.v;
var G__22775 = self__.start;
var G__22776 = self__.end;
var G__22777 = self__.__hash;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__22773,G__22774,G__22775,G__22776,G__22777) : cljs.core.build_subvec.call(null,G__22773,G__22774,G__22775,G__22776,G__22777));
});

cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__22778 = self__.meta;
var G__22779 = cljs.core._assoc_n(self__.v,self__.end,o);
var G__22780 = self__.start;
var G__22781 = (self__.end + (1));
var G__22782 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__22778,G__22779,G__22780,G__22781,G__22782) : cljs.core.build_subvec.call(null,G__22778,G__22779,G__22780,G__22781,G__22782));
});

cljs.core.Subvec.prototype.call = (function() {
var G__22783 = null;
var G__22783__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__22783__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__22783 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__22783__2.call(this,self__,k);
case 3:
return G__22783__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22783.cljs$core$IFn$_invoke$arity$2 = G__22783__2;
G__22783.cljs$core$IFn$_invoke$arity$3 = G__22783__3;
return G__22783;
})()
;

cljs.core.Subvec.prototype.apply = (function (self__,args22761){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args22761)));
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.Subvec.cljs$lang$type = true;

cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";

cljs.core.Subvec.cljs$lang$ctorPrWriter = (function (this__17919__auto__,writer__17920__auto__,opt__17921__auto__){
return cljs.core._write(writer__17920__auto__,"cljs.core/Subvec");
});

cljs.core.__GT_Subvec = (function __GT_Subvec(meta,v,start,end,__hash){
return (new cljs.core.Subvec(meta,v,start,end,__hash));
});

(cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18310__auto__ = this;
return cljs.core.es6_iterator(this__18310__auto__);
}));
cljs.core.build_subvec = (function build_subvec(meta,v,start,end,__hash){
while(true){
if((v instanceof cljs.core.Subvec)){
var G__22784 = meta;
var G__22785 = v.v;
var G__22786 = (v.start + start);
var G__22787 = (v.start + end);
var G__22788 = __hash;
meta = G__22784;
v = G__22785;
start = G__22786;
end = G__22787;
__hash = G__22788;
continue;
} else {
var c = cljs.core.count(v);
if(((start < (0))) || ((end < (0))) || ((start > c)) || ((end > c))){
throw (new Error("Index out of bounds"));
} else {
}

return (new cljs.core.Subvec(meta,v,start,end,__hash));
}
break;
}
});
/**
* Returns a persistent vector of the items in vector from
* start (inclusive) to end (exclusive).  If end is not supplied,
* defaults to (count vector). This operation is O(1) and very fast, as
* the resulting vector shares structure with the original and no
* trimming is done.
*/
cljs.core.subvec = (function() {
var subvec = null;
var subvec__2 = (function (v,start){
return subvec.cljs$core$IFn$_invoke$arity$3(v,start,cljs.core.count(v));
});
var subvec__3 = (function (v,start,end){
return cljs.core.build_subvec(null,v,start,end,null);
});
subvec = function(v,start,end){
switch(arguments.length){
case 2:
return subvec__2.call(this,v,start);
case 3:
return subvec__3.call(this,v,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
return subvec;
})()
;
cljs.core.tv_ensure_editable = (function tv_ensure_editable(edit,node){
if((edit === node.edit)){
return node;
} else {
return (new cljs.core.VectorNode(edit,cljs.core.aclone(node.arr)));
}
});
cljs.core.tv_editable_root = (function tv_editable_root(node){
return (new cljs.core.VectorNode((function (){var obj22795 = {};
return obj22795;
})(),cljs.core.aclone(node.arr)));
});
cljs.core.tv_editable_tail = (function tv_editable_tail(tl){
var ret = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
cljs.core.array_copy(tl,(0),ret,(0),tl.length);

return ret;
});
cljs.core.tv_push_tail = (function tv_push_tail(tv,level,parent,tail_node){
var ret = cljs.core.tv_ensure_editable(tv.root.edit,parent);
var subidx = (((tv.cnt - (1)) >>> level) & (31));
cljs.core.pv_aset(ret,subidx,(((level === (5)))?tail_node:(function (){var child = cljs.core.pv_aget(ret,subidx);
if(!((child == null))){
return tv_push_tail(tv,(level - (5)),child,tail_node);
} else {
return cljs.core.new_path(tv.root.edit,(level - (5)),tail_node);
}
})()));

return ret;
});
cljs.core.tv_pop_tail = (function tv_pop_tail(tv,level,node){
var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit,node);
var subidx = (((tv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = tv_pop_tail(tv,(level - (5)),cljs.core.pv_aget(node__$1,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,new_child);

return node__$1;
}
} else {
if((subidx === (0))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,null);

return node__$1;

}
}
});
cljs.core.unchecked_editable_array_for = (function unchecked_editable_array_for(tv,i){
if((i >= cljs.core.tail_off(tv))){
return tv.tail;
} else {
var root = tv.root;
var node = root;
var level = tv.shift;
while(true){
if((level > (0))){
var G__22803 = cljs.core.tv_ensure_editable(root.edit,cljs.core.pv_aget(node,((i >>> level) & (31))));
var G__22804 = (level - (5));
node = G__22803;
level = G__22804;
continue;
} else {
return node.arr;
}
break;
}
}
});

/**
* @constructor
*/
cljs.core.TransientVector = (function (cnt,shift,root,tail){
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.cljs$lang$protocol_mask$partition0$ = 275;
this.cljs$lang$protocol_mask$partition1$ = 88;
})
cljs.core.TransientVector.prototype.call = (function() {
var G__22808 = null;
var G__22808__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__22808__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__22808 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__22808__2.call(this,self__,k);
case 3:
return G__22808__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22808.cljs$core$IFn$_invoke$arity$2 = G__22808__2;
G__22808.cljs$core$IFn$_invoke$arity$3 = G__22808__3;
return G__22808;
})()
;

cljs.core.TransientVector.prototype.apply = (function (self__,args22805){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args22805)));
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
} else {
throw (new Error("nth after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,n);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return self__.cnt;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = (function (tcoll,n,val){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(tcoll__$1) <= n)){
(self__.tail[(n & (31))] = val);

return tcoll__$1;
} else {
var new_root = ((function (tcoll__$1){
return (function go(level,node){
var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit,node);
if((level === (0))){
cljs.core.pv_aset(node__$1,(n & (31)),val);

return node__$1;
} else {
var subidx = ((n >>> level) & (31));
cljs.core.pv_aset(node__$1,subidx,go((level - (5)),cljs.core.pv_aget(node__$1,subidx)));

return node__$1;
}
});})(tcoll__$1))
.call(null,self__.shift,self__.root);
self__.root = new_root;

return tcoll__$1;
}
} else {
if((n === self__.cnt)){
return cljs.core._conj_BANG_(tcoll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds for TransientVector of length"),cljs.core.str(self__.cnt)].join('')));

}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
self__.cnt = (0);

return tcoll__$1;
} else {
if((((self__.cnt - (1)) & (31)) > (0))){
self__.cnt = (self__.cnt - (1));

return tcoll__$1;
} else {
var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1,(self__.cnt - (2)));
var new_root = (function (){var nr = cljs.core.tv_pop_tail(tcoll__$1,self__.shift,self__.root);
if(!((nr == null))){
return nr;
} else {
return (new cljs.core.VectorNode(self__.root.edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
}
})();
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit,cljs.core.pv_aget(new_root,(0)));
self__.root = new_root__$1;

self__.shift = (self__.shift - (5));

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
} else {
self__.root = new_root;

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
}

}
}
}
} else {
throw (new Error("pop! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n_BANG_(tcoll__$1,key,val);
} else {
throw (new Error("TransientVector's key for assoc! must be a number."));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if(((self__.cnt - cljs.core.tail_off(tcoll__$1)) < (32))){
(self__.tail[(self__.cnt & (31))] = o);

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var tail_node = (new cljs.core.VectorNode(self__.root.edit,self__.tail));
var new_tail = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
(new_tail[(0)] = o);

self__.tail = new_tail;

if(((self__.cnt >>> (5)) > ((1) << self__.shift))){
var new_root_array = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var new_shift = (self__.shift + (5));
(new_root_array[(0)] = self__.root);

(new_root_array[(1)] = cljs.core.new_path(self__.root.edit,self__.shift,tail_node));

self__.root = (new cljs.core.VectorNode(self__.root.edit,new_root_array));

self__.shift = new_shift;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var new_root = cljs.core.tv_push_tail(tcoll__$1,self__.shift,self__.root,tail_node);
self__.root = new_root;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
self__.root.edit = null;

var len = (self__.cnt - cljs.core.tail_off(tcoll__$1));
var trimmed_tail = (new Array(len));
cljs.core.array_copy(self__.tail,(0),trimmed_tail,(0),len);

return (new cljs.core.PersistentVector(null,self__.cnt,self__.shift,self__.root,trimmed_tail,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientVector.cljs$lang$type = true;

cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";

cljs.core.TransientVector.cljs$lang$ctorPrWriter = (function (this__17919__auto__,writer__17920__auto__,opt__17921__auto__){
return cljs.core._write(writer__17920__auto__,"cljs.core/TransientVector");
});

cljs.core.__GT_TransientVector = (function __GT_TransientVector(cnt,shift,root,tail){
return (new cljs.core.TransientVector(cnt,shift,root,tail));
});


/**
* @constructor
*/
cljs.core.PersistentQueueSeq = (function (meta,front,rear,__hash){
this.meta = meta;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31850572;
})
cljs.core.PersistentQueueSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueueSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__17753__auto__ = self__.__hash;
if(!((h__17753__auto__ == null))){
return h__17753__auto__;
} else {
var h__17753__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__17753__auto____$1;

return h__17753__auto____$1;
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null));
} else {
if((self__.rear == null)){
return cljs.core._empty(coll__$1);
} else {
return (new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null));
}
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueueSeq(meta__$1,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentQueueSeq.cljs$lang$type = true;

cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";

cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = (function (this__17919__auto__,writer__17920__auto__,opt__17921__auto__){
return cljs.core._write(writer__17920__auto__,"cljs.core/PersistentQueueSeq");
});

cljs.core.__GT_PersistentQueueSeq = (function __GT_PersistentQueueSeq(meta,front,rear,__hash){
return (new cljs.core.PersistentQueueSeq(meta,front,rear,__hash));
});

(cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18310__auto__ = this;
return cljs.core.es6_iterator(this__18310__auto__);
}));

/**
* @constructor
*/
cljs.core.PersistentQueue = (function (meta,count,front,rear,__hash){
this.meta = meta;
this.count = count;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31858766;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentQueue.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueue.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(self__.meta,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),f1,self__.rear,null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),cljs.core.seq(self__.rear),cljs.core.PersistentVector.EMPTY,null));
}
} else {
return coll__$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__17753__auto__ = self__.__hash;
if(!((h__17753__auto__ == null))){
return h__17753__auto__;
} else {
var h__17753__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__17753__auto____$1;

return h__17753__auto____$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY,self__.meta);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.rest(cljs.core.seq(coll__$1));
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var rear__$1 = cljs.core.seq(self__.rear);
if(cljs.core.truth_((function (){var or__17332__auto__ = self__.front;
if(cljs.core.truth_(or__17332__auto__)){
return or__17332__auto__;
} else {
return rear__$1;
}
})())){
return (new cljs.core.PersistentQueueSeq(null,self__.front,cljs.core.seq(rear__$1),null));
} else {
return null;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(meta__$1,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),self__.front,cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__17332__auto__ = self__.rear;
if(cljs.core.truth_(or__17332__auto__)){
return or__17332__auto__;
} else {
return cljs.core.PersistentVector.EMPTY;
}
})(),o),null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front,o),cljs.core.PersistentVector.EMPTY,null));
}
});

cljs.core.PersistentQueue.cljs$lang$type = true;

cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";

cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = (function (this__17919__auto__,writer__17920__auto__,opt__17921__auto__){
return cljs.core._write(writer__17920__auto__,"cljs.core/PersistentQueue");
});

cljs.core.__GT_PersistentQueue = (function __GT_PersistentQueue(meta,count,front,rear,__hash){
return (new cljs.core.PersistentQueue(meta,count,front,rear,__hash));
});

cljs.core.PersistentQueue.EMPTY = (new cljs.core.PersistentQueue(null,(0),null,cljs.core.PersistentVector.EMPTY,cljs.core.empty_ordered_hash));
(cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18310__auto__ = this;
return cljs.core.es6_iterator(this__18310__auto__);
}));

/**
* @constructor
*/
cljs.core.NeverEquiv = (function (){
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2097152;
})
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return false;
});

cljs.core.NeverEquiv.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NeverEquiv.cljs$lang$type = true;

cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";

cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = (function (this__17919__auto__,writer__17920__auto__,opt__17921__auto__){
return cljs.core._write(writer__17920__auto__,"cljs.core/NeverEquiv");
});

cljs.core.__GT_NeverEquiv = (function __GT_NeverEquiv(){
return (new cljs.core.NeverEquiv());
});

cljs.core.never_equiv = (new cljs.core.NeverEquiv());
/**
* Assumes y is a map. Returns true if x equals y, otherwise returns
* false.
*/
cljs.core.equiv_map = (function equiv_map(x,y){
return cljs.core.boolean$(((cljs.core.map_QMARK_(y))?(((cljs.core.count(x) === cljs.core.count(y)))?cljs.core.every_QMARK_(cljs.core.identity,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xkv){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,cljs.core.first(xkv),cljs.core.never_equiv),cljs.core.second(xkv));
}),x)):null):null));
});
cljs.core.scan_array = (function scan_array(incr,k,array){
var len = array.length;
var i = (0);
while(true){
if((i < len)){
if((k === (array[i]))){
return i;
} else {
var G__22809 = (i + incr);
i = G__22809;
continue;
}
} else {
return null;
}
break;
}
});
cljs.core.obj_map_compare_keys = (function obj_map_compare_keys(a,b){
var a__$1 = cljs.core.hash(a);
var b__$1 = cljs.core.hash(b);
if((a__$1 < b__$1)){
return (-1);
} else {
if((a__$1 > b__$1)){
return (1);
} else {
return (0);

}
}
});
cljs.core.obj_map__GT_hash_map = (function obj_map__GT_hash_map(m,k,v){
var ks = m.keys;
var len = ks.length;
var so = m.strobj;
var mm = cljs.core.meta(m);
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var k__$1 = (ks[i]);
var G__22810 = (i + (1));
var G__22811 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k__$1,(so[k__$1]));
i = G__22810;
out = G__22811;
continue;
} else {
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k,v)),mm);
}
break;
}
});
cljs.core.obj_clone = (function obj_clone(obj,ks){
var new_obj = (function (){var obj22815 = {};
return obj22815;
})();
var l = ks.length;
var i_22816 = (0);
while(true){
if((i_22816 < l)){
var k_22817 = (ks[i_22816]);
(new_obj[k_22817] = (obj[k_22817]));

var G__22818 = (i_22816 + (1));
i_22816 = G__22818;
continue;
} else {
}
break;
}

return new_obj;
});

/**
* @constructor
*/
cljs.core.ObjMap = (function (meta,keys,strobj,update_count,__hash){
this.meta = meta;
this.keys = keys;
this.strobj = strobj;
this.update_count = update_count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 4;
})
cljs.core.ObjMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ObjMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__17320__auto__ = (function (){var G__22822 = k;
return goog.isString(G__22822);
})();
if(cljs.core.truth_(and__17320__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__17320__auto__;
}
})())){
return (self__.strobj[k]);
} else {
return not_found;
}
});

cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.keys.length;
var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
var init__$1 = init;
while(true){
if(cljs.core.seq(keys__$1)){
var k = cljs.core.first(keys__$1);
var init__$2 = (function (){var G__22823 = init__$1;
var G__22824 = k;
var G__22825 = (self__.strobj[k]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22823,G__22824,G__22825) : f.call(null,G__22823,G__22824,G__22825));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__22826 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22826) : cljs.core.deref.call(null,G__22826));
} else {
var G__22832 = cljs.core.rest(keys__$1);
var G__22833 = init__$2;
keys__$1 = G__22832;
init__$1 = G__22833;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.keys.length;
});

cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__17753__auto__ = self__.__hash;
if(!((h__17753__auto__ == null))){
return h__17753__auto__;
} else {
var h__17753__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__17753__auto____$1;

return h__17753__auto____$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1));
});

cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.ObjMap.EMPTY,self__.meta);
});

cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__17320__auto__ = (function (){var G__22828 = k;
return goog.isString(G__22828);
})();
if(cljs.core.truth_(and__17320__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__17320__auto__;
}
})())){
var new_keys = cljs.core.aclone(self__.keys);
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
new_keys.splice(cljs.core.scan_array((1),k,new_keys),(1));

delete new_strobj[k];

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
} else {
return coll__$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var G__22829 = k;
return goog.isString(G__22829);
})())){
if(((self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD)) || ((self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD))){
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
} else {
if(!((cljs.core.scan_array((1),k,self__.keys) == null))){
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
(new_strobj[k] = v);

return (new cljs.core.ObjMap(self__.meta,self__.keys,new_strobj,(self__.update_count + (1)),null));
} else {
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
var new_keys = cljs.core.aclone(self__.keys);
(new_strobj[k] = v);

new_keys.push(k);

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
}
}
} else {
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__17320__auto__ = (function (){var G__22831 = k;
return goog.isString(G__22831);
})();
if(cljs.core.truth_(and__17320__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__17320__auto__;
}
})())){
return true;
} else {
return false;
}
});

cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.keys.length > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (coll__$1){
return (function (p1__22819_SHARP_){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__22819_SHARP_,(self__.strobj[p1__22819_SHARP_])],null));
});})(coll__$1))
,self__.keys.sort(cljs.core.obj_map_compare_keys));
} else {
return null;
}
});

cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ObjMap(meta__$1,self__.keys,self__.strobj,self__.update_count,self__.__hash));
});

cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,coll__$1,entry);
}
});

cljs.core.ObjMap.prototype.call = (function() {
var G__22834 = null;
var G__22834__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__22834__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__22834 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__22834__2.call(this,self__,k);
case 3:
return G__22834__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22834.cljs$core$IFn$_invoke$arity$2 = G__22834__2;
G__22834.cljs$core$IFn$_invoke$arity$3 = G__22834__3;
return G__22834;
})()
;

cljs.core.ObjMap.prototype.apply = (function (self__,args22820){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args22820)));
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.ObjMap.cljs$lang$type = true;

cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";

cljs.core.ObjMap.cljs$lang$ctorPrWriter = (function (this__17919__auto__,writer__17920__auto__,opt__17921__auto__){
return cljs.core._write(writer__17920__auto__,"cljs.core/ObjMap");
});

cljs.core.__GT_ObjMap = (function __GT_ObjMap(meta,keys,strobj,update_count,__hash){
return (new cljs.core.ObjMap(meta,keys,strobj,update_count,__hash));
});

cljs.core.ObjMap.EMPTY = (new cljs.core.ObjMap(null,[],(function (){var obj22836 = {};
return obj22836;
})(),(0),cljs.core.empty_unordered_hash));
cljs.core.ObjMap.HASHMAP_THRESHOLD = (8);
cljs.core.ObjMap.fromObject = (function (ks,obj){
return (new cljs.core.ObjMap(null,ks,obj,(0),null));
});

/**
* @constructor
*/
cljs.core.ES6EntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6EntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var vec__22837 = cljs.core.first(self__.s);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22837,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22837,(1),null);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [k,v]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6EntriesIterator.cljs$lang$type = true;

cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";

cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = (function (this__17919__auto__,writer__17920__auto__,opt__17921__auto__){
return cljs.core._write(writer__17920__auto__,"cljs.core/ES6EntriesIterator");
});

cljs.core.__GT_ES6EntriesIterator = (function __GT_ES6EntriesIterator(s){
return (new cljs.core.ES6EntriesIterator(s));
});

cljs.core.es6_entries_iterator = (function es6_entries_iterator(coll){
return (new cljs.core.ES6EntriesIterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6SetEntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6SetEntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [x,x]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = (function (this__17919__auto__,writer__17920__auto__,opt__17921__auto__){
return cljs.core._write(writer__17920__auto__,"cljs.core/ES6SetEntriesIterator");
});

cljs.core.__GT_ES6SetEntriesIterator = (function __GT_ES6SetEntriesIterator(s){
return (new cljs.core.ES6SetEntriesIterator(s));
});

cljs.core.es6_set_entries_iterator = (function es6_set_entries_iterator(coll){
return (new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll)));
});
cljs.core.array_map_index_of_nil_QMARK_ = (function array_map_index_of_nil_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(((arr[i]) == null)){
return i;
} else {
var G__22838 = (i + (2));
i = G__22838;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_keyword_QMARK_ = (function array_map_index_of_keyword_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.fqn;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Keyword)) && ((kstr === k_SINGLEQUOTE_.fqn));
})()){
return i;
} else {
var G__22839 = (i + (2));
i = G__22839;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_symbol_QMARK_ = (function array_map_index_of_symbol_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.str;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Symbol)) && ((kstr === k_SINGLEQUOTE_.str));
})()){
return i;
} else {
var G__22840 = (i + (2));
i = G__22840;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_identical_QMARK_ = (function array_map_index_of_identical_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((k === (arr[i]))){
return i;
} else {
var G__22841 = (i + (2));
i = G__22841;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_equiv_QMARK_ = (function array_map_index_of_equiv_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(arr[i]))){
return i;
} else {
var G__22842 = (i + (2));
i = G__22842;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of = (function array_map_index_of(m,k){
var arr = m.arr;
if((k instanceof cljs.core.Keyword)){
return cljs.core.array_map_index_of_keyword_QMARK_(arr,m,k);
} else {
if(cljs.core.truth_((function (){var or__17332__auto__ = (function (){var G__22846 = k;
return goog.isString(G__22846);
})();
if(cljs.core.truth_(or__17332__auto__)){
return or__17332__auto__;
} else {
return typeof k === 'number';
}
})())){
return cljs.core.array_map_index_of_identical_QMARK_(arr,m,k);
} else {
if((k instanceof cljs.core.Symbol)){
return cljs.core.array_map_index_of_symbol_QMARK_(arr,m,k);
} else {
if((k == null)){
return cljs.core.array_map_index_of_nil_QMARK_(arr,m,k);
} else {
return cljs.core.array_map_index_of_equiv_QMARK_(arr,m,k);

}
}
}
}
});
cljs.core.array_map_extend_kv = (function array_map_extend_kv(m,k,v){
var arr = m.arr;
var l = arr.length;
var narr = (new Array((l + (2))));
var i_22847 = (0);
while(true){
if((i_22847 < l)){
(narr[i_22847] = (arr[i_22847]));

var G__22848 = (i_22847 + (1));
i_22847 = G__22848;
continue;
} else {
}
break;
}

(narr[l] = k);

(narr[(l + (1))] = v);

return narr;
});

/**
* @constructor
*/
cljs.core.PersistentArrayMapSeq = (function (arr,i,_meta){
this.arr = arr;
this.i = i;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
})
cljs.core.PersistentArrayMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return null;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return ((self__.arr.length - self__.i) / (2));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMapSeq(self__.arr,self__.i,new_meta));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = (function (this__17919__auto__,writer__17920__auto__,opt__17921__auto__){
return cljs.core._write(writer__17920__auto__,"cljs.core/PersistentArrayMapSeq");
});

cljs.core.__GT_PersistentArrayMapSeq = (function __GT_PersistentArrayMapSeq(arr,i,_meta){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
});

(cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18310__auto__ = this;
return cljs.core.es6_iterator(this__18310__auto__);
}));
cljs.core.persistent_array_map_seq = (function persistent_array_map_seq(arr,i,_meta){
if((i <= (arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
} else {
return null;
}
});


/**
* @constructor
*/
cljs.core.PersistentArrayMapIterator = (function (arr,i,cnt){
this.arr = arr;
this.i = i;
this.cnt = cnt;
})
cljs.core.PersistentArrayMapIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.cnt);
});

cljs.core.PersistentArrayMapIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
self__.i = (self__.i + (2));

return ret;
});

cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = (function (this__17919__auto__,writer__17920__auto__,opt__17921__auto__){
return cljs.core._write(writer__17920__auto__,"cljs.core/PersistentArrayMapIterator");
});

cljs.core.__GT_PersistentArrayMapIterator = (function __GT_PersistentArrayMapIterator(arr,i,cnt){
return (new cljs.core.PersistentArrayMapIterator(arr,i,cnt));
});


/**
* @constructor
*/
cljs.core.PersistentArrayMap = (function (meta,cnt,arr,__hash){
this.meta = meta;
this.cnt = cnt;
this.arr = arr;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16647951;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentArrayMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__22850 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__22850) : cljs.core.keys.call(null,G__22850));
})());
});

cljs.core.PersistentArrayMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentArrayMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__22851 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__22851) : cljs.core.vals.call(null,G__22851));
})());
});

cljs.core.PersistentArrayMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentArrayMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__22852 = cljs.core.seq(coll);
var chunk__22853 = null;
var count__22854 = (0);
var i__22855 = (0);
while(true){
if((i__22855 < count__22854)){
var vec__22856 = chunk__22853.cljs$core$IIndexed$_nth$arity$2(null,i__22855);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22856,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22856,(1),null);
var G__22857_22870 = v;
var G__22858_22871 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22857_22870,G__22858_22871) : f.call(null,G__22857_22870,G__22858_22871));

var G__22872 = seq__22852;
var G__22873 = chunk__22853;
var G__22874 = count__22854;
var G__22875 = (i__22855 + (1));
seq__22852 = G__22872;
chunk__22853 = G__22873;
count__22854 = G__22874;
i__22855 = G__22875;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__22852);
if(temp__4126__auto__){
var seq__22852__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__22852__$1)){
var c__18119__auto__ = cljs.core.chunk_first(seq__22852__$1);
var G__22876 = cljs.core.chunk_rest(seq__22852__$1);
var G__22877 = c__18119__auto__;
var G__22878 = cljs.core.count(c__18119__auto__);
var G__22879 = (0);
seq__22852 = G__22876;
chunk__22853 = G__22877;
count__22854 = G__22878;
i__22855 = G__22879;
continue;
} else {
var vec__22859 = cljs.core.first(seq__22852__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22859,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22859,(1),null);
var G__22860_22880 = v;
var G__22861_22881 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22860_22880,G__22861_22881) : f.call(null,G__22860_22880,G__22861_22881));

var G__22882 = cljs.core.next(seq__22852__$1);
var G__22883 = null;
var G__22884 = (0);
var G__22885 = (0);
seq__22852 = G__22882;
chunk__22853 = G__22883;
count__22854 = G__22884;
i__22855 = G__22885;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var G__22862 = init__$1;
var G__22863 = (self__.arr[i]);
var G__22864 = (self__.arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22862,G__22863,G__22864) : f.call(null,G__22862,G__22863,G__22864));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__22865 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22865) : cljs.core.deref.call(null,G__22865));
} else {
var G__22886 = (i + (2));
var G__22887 = init__$2;
i = G__22886;
init__$1 = G__22887;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.PersistentArrayMapIterator(self__.arr,(0),(self__.cnt * (2))));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__17753__auto__ = self__.__hash;
if(!((h__17753__auto__ == null))){
return h__17753__auto__;
} else {
var h__17753__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__17753__auto____$1;

return h__17753__auto____$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((function (){var G__22866 = other;
if(G__22866){
var bit__18006__auto__ = (G__22866.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__18006__auto__) || (G__22866.cljs$core$IMap$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
var alen = self__.arr.length;
var other__$1 = other;
if((self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null))){
var i = (0);
while(true){
if((i < alen)){
var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null,(self__.arr[i]),cljs.core.lookup_sentinel);
if(!((v === cljs.core.lookup_sentinel))){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[(i + (1))]),v)){
var G__22888 = (i + (2));
i = G__22888;
continue;
} else {
return false;
}
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_map(coll__$1,other);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientArrayMap((function (){var obj22868 = {};
return obj22868;
})(),self__.arr.length,cljs.core.aclone(self__.arr)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY,self__.meta);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx >= (0))){
var len = self__.arr.length;
var new_len = (len - (2));
if((new_len === (0))){
return cljs.core._empty(coll__$1);
} else {
var new_arr = (new Array(new_len));
var s = (0);
var d = (0);
while(true){
if((s >= len)){
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt - (1)),new_arr,null));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(self__.arr[s]))){
var G__22889 = (s + (2));
var G__22890 = d;
s = G__22889;
d = G__22890;
continue;
} else {
(new_arr[d] = (self__.arr[s]));

(new_arr[(d + (1))] = (self__.arr[(s + (1))]));

var G__22891 = (s + (2));
var G__22892 = (d + (2));
s = G__22891;
d = G__22892;
continue;

}
}
break;
}
}
} else {
return coll__$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
if((self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr__$1 = cljs.core.array_map_extend_kv(coll__$1,k,v);
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt + (1)),arr__$1,null));
} else {
return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1),k,v),self__.meta);
}
} else {
if((v === (self__.arr[(idx + (1))]))){
return coll__$1;
} else {
var arr__$1 = (function (){var G__22869 = cljs.core.aclone(self__.arr);
(G__22869[(idx + (1))] = v);

return G__22869;
})();
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,arr__$1,null));

}
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((cljs.core.array_map_index_of(coll__$1,k) === (-1)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.persistent_array_map_seq(self__.arr,(0),null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMap(meta__$1,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__22893 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__22894 = cljs.core.next(es);
ret = G__22893;
es = G__22894;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentArrayMap.prototype.call = (function() {
var G__22895 = null;
var G__22895__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__22895__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__22895 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__22895__2.call(this,self__,k);
case 3:
return G__22895__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22895.cljs$core$IFn$_invoke$arity$2 = G__22895__2;
G__22895.cljs$core$IFn$_invoke$arity$3 = G__22895__3;
return G__22895;
})()
;

cljs.core.PersistentArrayMap.prototype.apply = (function (self__,args22849){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args22849)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.cljs$lang$type = true;

cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";

cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = (function (this__17919__auto__,writer__17920__auto__,opt__17921__auto__){
return cljs.core._write(writer__17920__auto__,"cljs.core/PersistentArrayMap");
});

cljs.core.__GT_PersistentArrayMap = (function __GT_PersistentArrayMap(meta,cnt,arr,__hash){
return (new cljs.core.PersistentArrayMap(meta,cnt,arr,__hash));
});

cljs.core.PersistentArrayMap.EMPTY = (new cljs.core.PersistentArrayMap(null,(0),[],cljs.core.empty_unordered_hash));
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = (8);
cljs.core.PersistentArrayMap.fromArray = (function (arr,no_clone,no_check){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
if(no_check){
var cnt = (arr__$1.length / (2));
return (new cljs.core.PersistentArrayMap(null,cnt,arr__$1,null));
} else {
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__22896 = (i + (2));
var G__22897 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__22896;
ret = G__22897;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
}
});
(cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18310__auto__ = this;
return cljs.core.es6_iterator(this__18310__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientArrayMap = (function (editable_QMARK_,len,arr){
this.editable_QMARK_ = editable_QMARK_;
this.len = len;
this.arr = arr;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx >= (0))){
(self__.arr[idx] = (self__.arr[(self__.len - (2))]));

(self__.arr[(idx + (1))] = (self__.arr[(self__.len - (1))]));

var G__22898_22906 = self__.arr;
G__22898_22906.pop();

G__22898_22906.pop();


self__.len = (self__.len - (2));
} else {
}

return tcoll__$1;
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx === (-1))){
if(((self__.len + (2)) <= ((2) * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD))){
self__.len = (self__.len + (2));

self__.arr.push(key);

self__.arr.push(val);

return tcoll__$1;
} else {
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3((function (){var G__22899 = self__.len;
var G__22900 = self__.arr;
return (cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__22899,G__22900) : cljs.core.array__GT_transient_hash_map.call(null,G__22899,G__22900));
})(),key,val);
}
} else {
if((val === (self__.arr[(idx + (1))]))){
return tcoll__$1;
} else {
(self__.arr[(idx + (1))] = val);

return tcoll__$1;
}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
if((function (){var G__22901 = o;
if(G__22901){
var bit__18013__auto__ = (G__22901.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__18013__auto__) || (G__22901.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__22901.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__22901);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__22901);
}
})()){
return cljs.core._assoc_BANG_(tcoll__$1,(function (){var G__22902 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__22902) : cljs.core.key.call(null,G__22902));
})(),(function (){var G__22903 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__22903) : cljs.core.val.call(null,G__22903));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$2 = tcoll__$1;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__22907 = cljs.core.next(es);
var G__22908 = cljs.core._assoc_BANG_(tcoll__$2,(function (){var G__22904 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__22904) : cljs.core.key.call(null,G__22904));
})(),(function (){var G__22905 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__22905) : cljs.core.val.call(null,G__22905));
})());
es = G__22907;
tcoll__$2 = G__22908;
continue;
} else {
return tcoll__$2;
}
break;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
self__.editable_QMARK_ = false;

return (new cljs.core.PersistentArrayMap(null,cljs.core.quot(self__.len,(2)),self__.arr,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,k,null);
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
} else {
throw (new Error("lookup after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
return cljs.core.quot(self__.len,(2));
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientArrayMap.cljs$lang$type = true;

cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";

cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = (function (this__17919__auto__,writer__17920__auto__,opt__17921__auto__){
return cljs.core._write(writer__17920__auto__,"cljs.core/TransientArrayMap");
});

cljs.core.__GT_TransientArrayMap = (function __GT_TransientArrayMap(editable_QMARK_,len,arr){
return (new cljs.core.TransientArrayMap(editable_QMARK_,len,arr));
});


cljs.core.array__GT_transient_hash_map = (function array__GT_transient_hash_map(len,arr){
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
var i = (0);
while(true){
if((i < len)){
var G__22909 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,(arr[i]),(arr[(i + (1))]));
var G__22910 = (i + (2));
out = G__22909;
i = G__22910;
continue;
} else {
return out;
}
break;
}
});

/**
* @constructor
*/
cljs.core.Box = (function (val){
this.val = val;
})

cljs.core.Box.cljs$lang$type = true;

cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";

cljs.core.Box.cljs$lang$ctorPrWriter = (function (this__17919__auto__,writer__17920__auto__,opt__17921__auto__){
return cljs.core._write(writer__17920__auto__,"cljs.core/Box");
});

cljs.core.__GT_Box = (function __GT_Box(val){
return (new cljs.core.Box(val));
});






cljs.core.key_test = (function key_test(key,other){
if((key === other)){
return true;
} else {
if(cljs.core.keyword_identical_QMARK_(key,other)){
return true;
} else {
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,other);

}
}
});
cljs.core.mask = (function mask(hash,shift){
return ((hash >>> shift) & (31));
});
cljs.core.clone_and_set = (function() {
var clone_and_set = null;
var clone_and_set__3 = (function (arr,i,a){
var G__22913 = cljs.core.aclone(arr);
(G__22913[i] = a);

return G__22913;
});
var clone_and_set__5 = (function (arr,i,a,j,b){
var G__22914 = cljs.core.aclone(arr);
(G__22914[i] = a);

(G__22914[j] = b);

return G__22914;
});
clone_and_set = function(arr,i,a,j,b){
switch(arguments.length){
case 3:
return clone_and_set__3.call(this,arr,i,a);
case 5:
return clone_and_set__5.call(this,arr,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
return clone_and_set;
})()
;
cljs.core.remove_pair = (function remove_pair(arr,i){
var new_arr = (new Array((arr.length - (2))));
cljs.core.array_copy(arr,(0),new_arr,(0),((2) * i));

cljs.core.array_copy(arr,((2) * (i + (1))),new_arr,((2) * i),(new_arr.length - ((2) * i)));

return new_arr;
});
cljs.core.bitmap_indexed_node_index = (function bitmap_indexed_node_index(bitmap,bit){
return cljs.core.bit_count((bitmap & (bit - (1))));
});
cljs.core.bitpos = (function bitpos(hash,shift){
return ((1) << ((hash >>> shift) & 0x01f));
});
cljs.core.edit_and_set = (function() {
var edit_and_set = null;
var edit_and_set__4 = (function (inode,edit,i,a){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

return editable;
});
var edit_and_set__6 = (function (inode,edit,i,a,j,b){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

(editable.arr[j] = b);

return editable;
});
edit_and_set = function(inode,edit,i,a,j,b){
switch(arguments.length){
case 4:
return edit_and_set__4.call(this,inode,edit,i,a);
case 6:
return edit_and_set__6.call(this,inode,edit,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
return edit_and_set;
})()
;
cljs.core.inode_kv_reduce = (function inode_kv_reduce(arr,f,init){
var len = arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var k = (arr[i]);
if(!((k == null))){
var G__22919 = init__$1;
var G__22920 = k;
var G__22921 = (arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22919,G__22920,G__22921) : f.call(null,G__22919,G__22920,G__22921));
} else {
var node = (arr[(i + (1))]);
if(!((node == null))){
return node.kv_reduce(f,init__$1);
} else {
return init__$1;
}
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__22922 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22922) : cljs.core.deref.call(null,G__22922));
} else {
var G__22923 = (i + (2));
var G__22924 = init__$2;
i = G__22923;
init__$1 = G__22924;
continue;
}
} else {
return init__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.BitmapIndexedNode = (function (edit,bitmap,arr){
this.edit = edit;
this.bitmap = bitmap;
this.arr = arr;
})
cljs.core.BitmapIndexedNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var n = cljs.core.bit_count(self__.bitmap);
var new_arr = (new Array((((n < (0)))?(4):((2) * (n + (1))))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * n));

return (new cljs.core.BitmapIndexedNode(e,self__.bitmap,new_arr));
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
} else {
if((self__.bitmap === bit)){
return null;
} else {
return inode.edit_and_remove_pair(edit__$1,bit,idx);

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
(removed_leaf_QMARK_[(0)] = true);

return inode.edit_and_remove_pair(edit__$1,bit,idx);
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = (function (e,bit,i){
var self__ = this;
var inode = this;
if((self__.bitmap === bit)){
return null;
} else {
var editable = inode.ensure_editable(e);
var earr = editable.arr;
var len = earr.length;
editable.bitmap = (bit ^ editable.bitmap);

cljs.core.array_copy(earr,((2) * (i + (1))),earr,((2) * i),(len - ((2) * (i + (1)))));

(earr[(len - (2))] = null);

(earr[(len - (1))] = null);

return editable;
}
});

cljs.core.BitmapIndexedNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__22925 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__22925) : cljs.core.create_inode_seq.call(null,G__22925));
});

cljs.core.BitmapIndexedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.BitmapIndexedNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return val_or_node;
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((((2) * n) < self__.arr.length)){
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
added_leaf_QMARK_.val = true;

cljs.core.array_copy_downward(earr,((2) * idx),earr,((2) * (idx + (1))),((2) * (n - idx)));

(earr[((2) * idx)] = key);

(earr[(((2) * idx) + (1))] = val);

editable.bitmap = (editable.bitmap | bit);

return editable;
} else {
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_22939 = (0);
var j_22940 = (0);
while(true){
if((i_22939 < (32))){
if((((self__.bitmap >>> i_22939) & (1)) === (0))){
var G__22941 = (i_22939 + (1));
var G__22942 = j_22940;
i_22939 = G__22941;
j_22940 = G__22942;
continue;
} else {
(nodes[i_22939] = ((!(((self__.arr[j_22940]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),cljs.core.hash((self__.arr[j_22940])),(self__.arr[j_22940]),(self__.arr[(j_22940 + (1))]),added_leaf_QMARK_):(self__.arr[(j_22940 + (1))])));

var G__22943 = (i_22939 + (1));
var G__22944 = (j_22940 + (2));
i_22939 = G__22943;
j_22940 = G__22944;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(edit__$1,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (4)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

var editable = inode.ensure_editable(edit__$1);
editable.arr = new_arr;

editable.bitmap = (editable.bitmap | bit);

return editable;

}
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),val);
}
} else {
added_leaf_QMARK_.val = true;

return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__22926 = edit__$1;
var G__22927 = (shift + (5));
var G__22928 = key_or_nil;
var G__22929 = val_or_node;
var G__22930 = hash;
var G__22931 = key;
var G__22932 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__22926,G__22927,G__22928,G__22929,G__22930,G__22931,G__22932) : cljs.core.create_node.call(null,G__22926,G__22927,G__22928,G__22929,G__22930,G__22931,G__22932));
})());

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_22945 = (0);
var j_22946 = (0);
while(true){
if((i_22945 < (32))){
if((((self__.bitmap >>> i_22945) & (1)) === (0))){
var G__22947 = (i_22945 + (1));
var G__22948 = j_22946;
i_22945 = G__22947;
j_22946 = G__22948;
continue;
} else {
(nodes[i_22945] = ((!(((self__.arr[j_22946]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),cljs.core.hash((self__.arr[j_22946])),(self__.arr[j_22946]),(self__.arr[(j_22946 + (1))]),added_leaf_QMARK_):(self__.arr[(j_22946 + (1))])));

var G__22949 = (i_22945 + (1));
var G__22950 = (j_22946 + (2));
i_22945 = G__22949;
j_22946 = G__22950;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(null,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap | bit),new_arr));
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),val)));
}
} else {
added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__22933 = (shift + (5));
var G__22934 = key_or_nil;
var G__22935 = val_or_node;
var G__22936 = hash;
var G__22937 = key;
var G__22938 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__22933,G__22934,G__22935,G__22936,G__22937,G__22938) : cljs.core.create_node.call(null,G__22933,G__22934,G__22935,G__22936,G__22937,G__22938));
})())));

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_find((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil,val_or_node], null);
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without((shift + (5)),hash,key);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
} else {
if((self__.bitmap === bit)){
return null;
} else {
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.cljs$lang$type = true;

cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";

cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = (function (this__17919__auto__,writer__17920__auto__,opt__17921__auto__){
return cljs.core._write(writer__17920__auto__,"cljs.core/BitmapIndexedNode");
});

cljs.core.__GT_BitmapIndexedNode = (function __GT_BitmapIndexedNode(edit,bitmap,arr){
return (new cljs.core.BitmapIndexedNode(edit,bitmap,arr));
});

cljs.core.BitmapIndexedNode.EMPTY = (new cljs.core.BitmapIndexedNode(null,(0),[]));
cljs.core.pack_array_node = (function pack_array_node(array_node,edit,idx){
var arr = array_node.arr;
var len = arr.length;
var new_arr = (new Array(((2) * (array_node.cnt - (1)))));
var i = (0);
var j = (1);
var bitmap = (0);
while(true){
if((i < len)){
if((!((i === idx))) && (!(((arr[i]) == null)))){
(new_arr[j] = (arr[i]));

var G__22951 = (i + (1));
var G__22952 = (j + (2));
var G__22953 = (bitmap | ((1) << i));
i = G__22951;
j = G__22952;
bitmap = G__22953;
continue;
} else {
var G__22954 = (i + (1));
var G__22955 = j;
var G__22956 = bitmap;
i = G__22954;
j = G__22955;
bitmap = G__22956;
continue;
}
} else {
return (new cljs.core.BitmapIndexedNode(edit,bitmap,new_arr));
}
break;
}
});

/**
* @constructor
*/
cljs.core.ArrayNode = (function (edit,cnt,arr){
this.edit = edit;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.ArrayNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
return (new cljs.core.ArrayNode(e,self__.cnt,cljs.core.aclone(self__.arr)));
}
});

cljs.core.ArrayNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return inode;
} else {
var n = node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,edit__$1,idx);
} else {
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
editable.cnt = (editable.cnt - (1));

return editable;
}
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);

}
}
}
});

cljs.core.ArrayNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__22957 = self__.arr;
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__22957) : cljs.core.create_array_node_seq.call(null,G__22957));
});

cljs.core.ArrayNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var node = (self__.arr[i]);
if(!((node == null))){
var init__$2 = node.kv_reduce(f,init__$1);
if(cljs.core.reduced_QMARK_(init__$2)){
var G__22958 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22958) : cljs.core.deref.call(null,G__22958));
} else {
var G__22959 = (i + (1));
var G__22960 = init__$2;
i = G__22959;
init__$1 = G__22960;
continue;
}
} else {
var G__22961 = (i + (1));
var G__22962 = init__$1;
i = G__22961;
init__$1 = G__22962;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ArrayNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));
editable.cnt = (editable.cnt + (1));

return editable;
} else {
var n = node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
}
}
});

cljs.core.ArrayNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return (new cljs.core.ArrayNode(null,(self__.cnt + (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_))));
} else {
var n = node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
}
});

cljs.core.ArrayNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_find((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
var n = node.inode_without((shift + (5)),hash,key);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,null,idx);
} else {
return (new cljs.core.ArrayNode(null,(self__.cnt - (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));

}
}
} else {
return inode;
}
});

cljs.core.ArrayNode.cljs$lang$type = true;

cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";

cljs.core.ArrayNode.cljs$lang$ctorPrWriter = (function (this__17919__auto__,writer__17920__auto__,opt__17921__auto__){
return cljs.core._write(writer__17920__auto__,"cljs.core/ArrayNode");
});

cljs.core.__GT_ArrayNode = (function __GT_ArrayNode(edit,cnt,arr){
return (new cljs.core.ArrayNode(edit,cnt,arr));
});

cljs.core.hash_collision_node_find_index = (function hash_collision_node_find_index(arr,cnt,key){
var lim = ((2) * cnt);
var i = (0);
while(true){
if((i < lim)){
if(cljs.core.key_test(key,(arr[i]))){
return i;
} else {
var G__22963 = (i + (2));
i = G__22963;
continue;
}
} else {
return (-1);
}
break;
}
});

/**
* @constructor
*/
cljs.core.HashCollisionNode = (function (edit,collision_hash,cnt,arr){
this.edit = edit;
this.collision_hash = collision_hash;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.HashCollisionNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var new_arr = (new Array(((2) * (self__.cnt + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * self__.cnt));

return (new cljs.core.HashCollisionNode(e,self__.collision_hash,self__.cnt,new_arr));
}
});

cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
(removed_leaf_QMARK_[(0)] = true);

if((self__.cnt === (1))){
return null;
} else {
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
(earr[idx] = (earr[(((2) * self__.cnt) - (2))]));

(earr[(idx + (1))] = (earr[(((2) * self__.cnt) - (1))]));

(earr[(((2) * self__.cnt) - (1))] = null);

(earr[(((2) * self__.cnt) - (2))] = null);

editable.cnt = (editable.cnt - (1));

return editable;
}
}
});

cljs.core.HashCollisionNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__22964 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__22964) : cljs.core.create_inode_seq.call(null,G__22964));
});

cljs.core.HashCollisionNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.HashCollisionNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return (self__.arr[(idx + (1))]);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
if((self__.arr.length > ((2) * self__.cnt))){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * self__.cnt),key,(((2) * self__.cnt) + (1)),val);
added_leaf_QMARK_.val = true;

editable.cnt = (editable.cnt + (1));

return editable;
} else {
var len = self__.arr.length;
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return inode.ensure_editable_array(edit__$1,(self__.cnt + (1)),new_arr);
}
} else {
if(((self__.arr[(idx + (1))]) === val)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(idx + (1)),val);
}
}
} else {
return (new cljs.core.BitmapIndexedNode(edit__$1,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode,null,null])).inode_assoc_BANG_(edit__$1,shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
var len = ((2) * self__.cnt);
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt + (1)),new_arr));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[idx]),val)){
return inode;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(idx + (1)),val)));
}
}
} else {
return (new cljs.core.BitmapIndexedNode(null,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode])).inode_assoc(shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.ensure_editable_array = (function (e,count,array){
var self__ = this;
var inode = this;
if((e === self__.edit)){
self__.arr = array;

self__.cnt = count;

return inode;
} else {
return (new cljs.core.HashCollisionNode(self__.edit,self__.collision_hash,count,array));
}
});

cljs.core.HashCollisionNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[idx]),(self__.arr[(idx + (1))])], null);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
if((self__.cnt === (1))){
return null;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt - (1)),cljs.core.remove_pair(self__.arr,cljs.core.quot(idx,(2)))));

}
}
});

cljs.core.HashCollisionNode.cljs$lang$type = true;

cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";

cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = (function (this__17919__auto__,writer__17920__auto__,opt__17921__auto__){
return cljs.core._write(writer__17920__auto__,"cljs.core/HashCollisionNode");
});

cljs.core.__GT_HashCollisionNode = (function __GT_HashCollisionNode(edit,collision_hash,cnt,arr){
return (new cljs.core.HashCollisionNode(edit,collision_hash,cnt,arr));
});

cljs.core.create_node = (function() {
var create_node = null;
var create_node__6 = (function (shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc(shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
var create_node__7 = (function (edit,shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit,shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc_BANG_(edit,shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
create_node = function(edit,shift,key1,val1,key2hash,key2,val2){
switch(arguments.length){
case 6:
return create_node__6.call(this,edit,shift,key1,val1,key2hash,key2);
case 7:
return create_node__7.call(this,edit,shift,key1,val1,key2hash,key2,val2);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
return create_node;
})()
;

/**
* @constructor
*/
cljs.core.NodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.NodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.NodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__17753__auto__ = self__.__hash;
if(!((h__17753__auto__ == null))){
return h__17753__auto__;
} else {
var h__17753__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__17753__auto____$1;

return h__17753__auto____$1;
}
});

cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.nodes[self__.i]),(self__.nodes[(self__.i + (1))])], null);
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
var G__22965 = self__.nodes;
var G__22966 = (self__.i + (2));
var G__22967 = null;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__22965,G__22966,G__22967) : cljs.core.create_inode_seq.call(null,G__22965,G__22966,G__22967));
} else {
var G__22968 = self__.nodes;
var G__22969 = self__.i;
var G__22970 = cljs.core.next(self__.s);
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__22968,G__22969,G__22970) : cljs.core.create_inode_seq.call(null,G__22968,G__22969,G__22970));
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.NodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.NodeSeq.cljs$lang$type = true;

cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";

cljs.core.NodeSeq.cljs$lang$ctorPrWriter = (function (this__17919__auto__,writer__17920__auto__,opt__17921__auto__){
return cljs.core._write(writer__17920__auto__,"cljs.core/NodeSeq");
});

cljs.core.__GT_NodeSeq = (function __GT_NodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.NodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18310__auto__ = this;
return cljs.core.es6_iterator(this__18310__auto__);
}));
cljs.core.create_inode_seq = (function() {
var create_inode_seq = null;
var create_inode_seq__1 = (function (nodes){
return create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes,(0),null);
});
var create_inode_seq__3 = (function (nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
if(!(((nodes[j]) == null))){
return (new cljs.core.NodeSeq(null,nodes,j,null,null));
} else {
var temp__4124__auto__ = (nodes[(j + (1))]);
if(cljs.core.truth_(temp__4124__auto__)){
var node = temp__4124__auto__;
var temp__4124__auto____$1 = node.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var node_seq = temp__4124__auto____$1;
return (new cljs.core.NodeSeq(null,nodes,(j + (2)),node_seq,null));
} else {
var G__22974 = (j + (2));
j = G__22974;
continue;
}
} else {
var G__22975 = (j + (2));
j = G__22975;
continue;
}
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.NodeSeq(null,nodes,i,s,null));
}
});
create_inode_seq = function(nodes,i,s){
switch(arguments.length){
case 1:
return create_inode_seq__1.call(this,nodes);
case 3:
return create_inode_seq__3.call(this,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
return create_inode_seq;
})()
;

/**
* @constructor
*/
cljs.core.ArrayNodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.ArrayNodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ArrayNodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__17753__auto__ = self__.__hash;
if(!((h__17753__auto__ == null))){
return h__17753__auto__;
} else {
var h__17753__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__17753__auto____$1;

return h__17753__auto____$1;
}
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.s);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__22976 = null;
var G__22977 = self__.nodes;
var G__22978 = self__.i;
var G__22979 = cljs.core.next(self__.s);
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__22976,G__22977,G__22978,G__22979) : cljs.core.create_array_node_seq.call(null,G__22976,G__22977,G__22978,G__22979));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ArrayNodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ArrayNodeSeq.cljs$lang$type = true;

cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";

cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = (function (this__17919__auto__,writer__17920__auto__,opt__17921__auto__){
return cljs.core._write(writer__17920__auto__,"cljs.core/ArrayNodeSeq");
});

cljs.core.__GT_ArrayNodeSeq = (function __GT_ArrayNodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18310__auto__ = this;
return cljs.core.es6_iterator(this__18310__auto__);
}));
cljs.core.create_array_node_seq = (function() {
var create_array_node_seq = null;
var create_array_node_seq__1 = (function (nodes){
return create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null,nodes,(0),null);
});
var create_array_node_seq__4 = (function (meta,nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
var temp__4124__auto__ = (nodes[j]);
if(cljs.core.truth_(temp__4124__auto__)){
var nj = temp__4124__auto__;
var temp__4124__auto____$1 = nj.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var ns = temp__4124__auto____$1;
return (new cljs.core.ArrayNodeSeq(meta,nodes,(j + (1)),ns,null));
} else {
var G__22984 = (j + (1));
j = G__22984;
continue;
}
} else {
var G__22985 = (j + (1));
j = G__22985;
continue;
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,null));
}
});
create_array_node_seq = function(meta,nodes,i,s){
switch(arguments.length){
case 1:
return create_array_node_seq__1.call(this,meta);
case 4:
return create_array_node_seq__4.call(this,meta,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
return create_array_node_seq;
})()
;

/**
* @constructor
*/
cljs.core.PersistentHashMap = (function (meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
this.meta = meta;
this.cnt = cnt;
this.root = root;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__22987 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__22987) : cljs.core.keys.call(null,G__22987));
})());
});

cljs.core.PersistentHashMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__22988 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__22988) : cljs.core.vals.call(null,G__22988));
})());
});

cljs.core.PersistentHashMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__22989 = cljs.core.seq(coll);
var chunk__22990 = null;
var count__22991 = (0);
var i__22992 = (0);
while(true){
if((i__22992 < count__22991)){
var vec__22993 = chunk__22990.cljs$core$IIndexed$_nth$arity$2(null,i__22992);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22993,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22993,(1),null);
var G__22994_23005 = v;
var G__22995_23006 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22994_23005,G__22995_23006) : f.call(null,G__22994_23005,G__22995_23006));

var G__23007 = seq__22989;
var G__23008 = chunk__22990;
var G__23009 = count__22991;
var G__23010 = (i__22992 + (1));
seq__22989 = G__23007;
chunk__22990 = G__23008;
count__22991 = G__23009;
i__22992 = G__23010;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__22989);
if(temp__4126__auto__){
var seq__22989__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__22989__$1)){
var c__18119__auto__ = cljs.core.chunk_first(seq__22989__$1);
var G__23011 = cljs.core.chunk_rest(seq__22989__$1);
var G__23012 = c__18119__auto__;
var G__23013 = cljs.core.count(c__18119__auto__);
var G__23014 = (0);
seq__22989 = G__23011;
chunk__22990 = G__23012;
count__22991 = G__23013;
i__22992 = G__23014;
continue;
} else {
var vec__22996 = cljs.core.first(seq__22989__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22996,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22996,(1),null);
var G__22997_23015 = v;
var G__22998_23016 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22997_23015,G__22998_23016) : f.call(null,G__22997_23015,G__22998_23016));

var G__23017 = cljs.core.next(seq__22989__$1);
var G__23018 = null;
var G__23019 = (0);
var G__23020 = (0);
seq__22989 = G__23017;
chunk__22990 = G__23018;
count__22991 = G__23019;
i__22992 = G__23020;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var init__$1 = ((self__.has_nil_QMARK_)?(function (){var G__22999 = init;
var G__23000 = null;
var G__23001 = self__.nil_val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22999,G__23000,G__23001) : f.call(null,G__22999,G__23000,G__23001));
})():init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__23002 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23002) : cljs.core.deref.call(null,G__23002));
} else {
if(!((self__.root == null))){
return self__.root.kv_reduce(f,init__$1);
} else {
return init__$1;

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashMap(self__.meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__17753__auto__ = self__.__hash;
if(!((h__17753__auto__ == null))){
return h__17753__auto__;
} else {
var h__17753__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__17753__auto____$1;

return h__17753__auto____$1;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashMap((function (){var obj23004 = {};
return obj23004;
})(),self__.root,self__.cnt,self__.has_nil_QMARK_,self__.nil_val));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY,self__.meta);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),self__.root,false,null,null));
} else {
return coll__$1;
}
} else {
if((self__.root == null)){
return coll__$1;
} else {
var new_root = self__.root.inode_without((0),cljs.core.hash(k),k);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if((self__.has_nil_QMARK_) && ((v === self__.nil_val))){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((self__.has_nil_QMARK_)?self__.cnt:(self__.cnt + (1))),self__.root,true,v,null));
}
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var new_root = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc((0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((added_leaf_QMARK_.val)?(self__.cnt + (1)):self__.cnt),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
return self__.has_nil_QMARK_;
} else {
if((self__.root == null)){
return false;
} else {
return !((self__.root.inode_lookup((0),cljs.core.hash(k),k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel));

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var s = ((!((self__.root == null)))?self__.root.inode_seq():null);
if(self__.has_nil_QMARK_){
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,self__.nil_val], null),s);
} else {
return s;
}
} else {
return null;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashMap(meta__$1,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__23021 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__23022 = cljs.core.next(es);
ret = G__23021;
es = G__23022;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentHashMap.prototype.call = (function() {
var G__23023 = null;
var G__23023__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__23023__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__23023 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__23023__2.call(this,self__,k);
case 3:
return G__23023__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23023.cljs$core$IFn$_invoke$arity$2 = G__23023__2;
G__23023.cljs$core$IFn$_invoke$arity$3 = G__23023__3;
return G__23023;
})()
;

cljs.core.PersistentHashMap.prototype.apply = (function (self__,args22986){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args22986)));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.cljs$lang$type = true;

cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";

cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = (function (this__17919__auto__,writer__17920__auto__,opt__17921__auto__){
return cljs.core._write(writer__17920__auto__,"cljs.core/PersistentHashMap");
});

cljs.core.__GT_PersistentHashMap = (function __GT_PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
return (new cljs.core.PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash));
});

cljs.core.PersistentHashMap.EMPTY = (new cljs.core.PersistentHashMap(null,(0),null,false,null,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashMap.fromArray = (function (arr,no_clone){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__23024 = (i + (2));
var G__23025 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__23024;
ret = G__23025;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
});
cljs.core.PersistentHashMap.fromArrays = (function (ks,vs){
var len = ks.length;
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__23026 = (i + (1));
var G__23027 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,(ks[i]),(vs[i]));
i = G__23026;
out = G__23027;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
});
(cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18310__auto__ = this;
return cljs.core.es6_iterator(this__18310__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashMap = (function (edit,root,count,has_nil_QMARK_,nil_val){
this.edit = edit;
this.root = root;
this.count = count;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.without_BANG_(key);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.assoc_BANG_(key,val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.conj_BANG_(val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.persistent_BANG_();
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return null;
}
} else {
if((self__.root == null)){
return null;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.edit){
return self__.count;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.conj_BANG_ = (function (o){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((function (){var G__23028 = o;
if(G__23028){
var bit__18013__auto__ = (G__23028.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__18013__auto__) || (G__23028.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__23028.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__23028);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__23028);
}
})()){
return tcoll.assoc_BANG_((function (){var G__23029 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__23029) : cljs.core.key.call(null,G__23029));
})(),(function (){var G__23030 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__23030) : cljs.core.val.call(null,G__23030));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$1 = tcoll;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__23033 = cljs.core.next(es);
var G__23034 = tcoll__$1.assoc_BANG_((function (){var G__23031 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__23031) : cljs.core.key.call(null,G__23031));
})(),(function (){var G__23032 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__23032) : cljs.core.val.call(null,G__23032));
})());
es = G__23033;
tcoll__$1 = G__23034;
continue;
} else {
return tcoll__$1;
}
break;
}
}
} else {
throw (new Error("conj! after persistent"));
}
});

cljs.core.TransientHashMap.prototype.assoc_BANG_ = (function (k,v){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if((self__.nil_val === v)){
} else {
self__.nil_val = v;
}

if(self__.has_nil_QMARK_){
} else {
self__.count = (self__.count + (1));

self__.has_nil_QMARK_ = true;
}

return tcoll;
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var node = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc_BANG_(self__.edit,(0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(added_leaf_QMARK_.val){
self__.count = (self__.count + (1));
} else {
}

return tcoll;
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.without_BANG_ = (function (k){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if(self__.has_nil_QMARK_){
self__.has_nil_QMARK_ = false;

self__.nil_val = null;

self__.count = (self__.count - (1));

return tcoll;
} else {
return tcoll;
}
} else {
if((self__.root == null)){
return tcoll;
} else {
var removed_leaf_QMARK_ = (new cljs.core.Box(false));
var node = self__.root.inode_without_BANG_(self__.edit,(0),cljs.core.hash(k),k,removed_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(cljs.core.truth_((removed_leaf_QMARK_[(0)]))){
self__.count = (self__.count - (1));
} else {
}

return tcoll;
}
}
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.persistent_BANG_ = (function (){
var self__ = this;
var tcoll = this;
if(self__.edit){
self__.edit = null;

return (new cljs.core.PersistentHashMap(null,self__.count,self__.root,self__.has_nil_QMARK_,self__.nil_val,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientHashMap.cljs$lang$type = true;

cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";

cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = (function (this__17919__auto__,writer__17920__auto__,opt__17921__auto__){
return cljs.core._write(writer__17920__auto__,"cljs.core/TransientHashMap");
});

cljs.core.__GT_TransientHashMap = (function __GT_TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val){
return (new cljs.core.TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val));
});

cljs.core.tree_map_seq_push = (function tree_map_seq_push(node,stack,ascending_QMARK_){
var t = node;
var stack__$1 = stack;
while(true){
if(!((t == null))){
var G__23035 = ((ascending_QMARK_)?t.left:t.right);
var G__23036 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1,t);
t = G__23035;
stack__$1 = G__23036;
continue;
} else {
return stack__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMapSeq = (function (meta,stack,ascending_QMARK_,cnt,__hash){
this.meta = meta;
this.stack = stack;
this.ascending_QMARK_ = ascending_QMARK_;
this.cnt = cnt;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374862;
})
cljs.core.PersistentTreeMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt < (0))){
return (cljs.core.count(cljs.core.next(coll__$1)) + (1));
} else {
return self__.cnt;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__17753__auto__ = self__.__hash;
if(!((h__17753__auto__ == null))){
return h__17753__auto__;
} else {
var h__17753__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__17753__auto____$1;

return h__17753__auto____$1;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.peek(self__.stack);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var t = cljs.core.first(self__.stack);
var next_stack = cljs.core.tree_map_seq_push(((self__.ascending_QMARK_)?t.right:t.left),cljs.core.next(self__.stack),self__.ascending_QMARK_);
if(!((next_stack == null))){
return (new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,(self__.cnt - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMapSeq(meta__$1,self__.stack,self__.ascending_QMARK_,self__.cnt,self__.__hash));
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = (function (this__17919__auto__,writer__17920__auto__,opt__17921__auto__){
return cljs.core._write(writer__17920__auto__,"cljs.core/PersistentTreeMapSeq");
});

cljs.core.__GT_PersistentTreeMapSeq = (function __GT_PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash){
return (new cljs.core.PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash));
});

(cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18310__auto__ = this;
return cljs.core.es6_iterator(this__18310__auto__);
}));
cljs.core.create_tree_map_seq = (function create_tree_map_seq(tree,ascending_QMARK_,cnt){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.tree_map_seq_push(tree,null,ascending_QMARK_),ascending_QMARK_,cnt,null));
});

cljs.core.balance_left = (function balance_left(key,val,ins,right){
if((ins instanceof cljs.core.RedNode)){
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,ins.left.blacken(),(new cljs.core.BlackNode(key,val,ins.right,right,null)),null));
} else {
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.right.key,ins.right.val,(new cljs.core.BlackNode(ins.key,ins.val,ins.left,ins.right.left,null)),(new cljs.core.BlackNode(key,val,ins.right.right,right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));
}
});
cljs.core.balance_right = (function balance_right(key,val,left,ins){
if((ins instanceof cljs.core.RedNode)){
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,(new cljs.core.BlackNode(key,val,left,ins.left,null)),ins.right.blacken(),null));
} else {
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.left.key,ins.left.val,(new cljs.core.BlackNode(key,val,left,ins.left.left,null)),(new cljs.core.BlackNode(ins.key,ins.val,ins.left.right,ins.right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));
}
});
cljs.core.balance_left_del = (function balance_left_del(key,val,del,right){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,del.blacken(),right,null));
} else {
if((right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right(key,val,del,right.redden());
} else {
if(((right instanceof cljs.core.RedNode)) && ((right.left instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(right.left.key,right.left.val,(new cljs.core.BlackNode(key,val,del,right.left.left,null)),cljs.core.balance_right(right.key,right.val,right.left.right,right.right.redden()),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.balance_right_del = (function balance_right_del(key,val,left,del){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,left,del.blacken(),null));
} else {
if((left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left(key,val,left.redden(),del);
} else {
if(((left instanceof cljs.core.RedNode)) && ((left.right instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(left.right.key,left.right.val,cljs.core.balance_left(left.key,left.val,left.left.redden(),left.right.left),(new cljs.core.BlackNode(key,val,left.right.right,del,null)),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.tree_map_kv_reduce = (function tree_map_kv_reduce(node,f,init){
var init__$1 = ((!((node.left == null)))?tree_map_kv_reduce(node.left,f,init):init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__23049 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23049) : cljs.core.deref.call(null,G__23049));
} else {
var init__$2 = (function (){var G__23050 = init__$1;
var G__23051 = node.key;
var G__23052 = node.val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__23050,G__23051,G__23052) : f.call(null,G__23050,G__23051,G__23052));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__23053 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23053) : cljs.core.deref.call(null,G__23053));
} else {
var init__$3 = ((!((node.right == null)))?tree_map_kv_reduce(node.right,f,init__$2):init__$2);
if(cljs.core.reduced_QMARK_(init__$3)){
var G__23054 = init__$3;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23054) : cljs.core.deref.call(null,G__23054));
} else {
return init__$3;
}
}
}
});

/**
* @constructor
*/
cljs.core.BlackNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.BlackNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return ins.balance_right(node);
});

cljs.core.BlackNode.prototype.redden = (function (){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.BlackNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return node;
});

cljs.core.BlackNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return ins.balance_left(node);
});

cljs.core.BlackNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.BlackNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));
});

cljs.core.BlackNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));
});

cljs.core.BlackNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_left_del(self__.key,self__.val,del,self__.right);
});

cljs.core.BlackNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.BlackNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_right_del(self__.key,self__.val,self__.left,del);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__17753__auto__ = self__.__hash;
if(!((h__17753__auto__ == null))){
return h__17753__auto__;
} else {
var h__17753__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__17753__auto____$1;

return h__17753__auto____$1;
}
});

cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.BlackNode.prototype.call = (function() {
var G__23056 = null;
var G__23056__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__23056__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__23056 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__23056__2.call(this,self__,k);
case 3:
return G__23056__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23056.cljs$core$IFn$_invoke$arity$2 = G__23056__2;
G__23056.cljs$core$IFn$_invoke$arity$3 = G__23056__3;
return G__23056;
})()
;

cljs.core.BlackNode.prototype.apply = (function (self__,args23055){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args23055)));
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.BlackNode.cljs$lang$type = true;

cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";

cljs.core.BlackNode.cljs$lang$ctorPrWriter = (function (this__17919__auto__,writer__17920__auto__,opt__17921__auto__){
return cljs.core._write(writer__17920__auto__,"cljs.core/BlackNode");
});

cljs.core.__GT_BlackNode = (function __GT_BlackNode(key,val,left,right,__hash){
return (new cljs.core.BlackNode(key,val,left,right,__hash));
});

(cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18310__auto__ = this;
return cljs.core.es6_iterator(this__18310__auto__);
}));

/**
* @constructor
*/
cljs.core.RedNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.RedNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,ins,null));
});

cljs.core.RedNode.prototype.redden = (function (){
var self__ = this;
var node = this;
throw (new Error("red-black tree invariant violation"));
});

cljs.core.RedNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.RedNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,ins,self__.right,null));
});

cljs.core.RedNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.RedNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,self__.left.blacken(),(new cljs.core.BlackNode(parent.key,parent.val,self__.right,parent.right,null)),null));
} else {
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.right.key,self__.right.val,(new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right.left,null)),(new cljs.core.BlackNode(parent.key,parent.val,self__.right.right,parent.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));

}
}
});

cljs.core.RedNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left,null)),self__.right.blacken(),null));
} else {
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.left.key,self__.left.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left.left,null)),(new cljs.core.BlackNode(self__.key,self__.val,self__.left.right,self__.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));

}
}
});

cljs.core.RedNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,del,self__.right,null));
});

cljs.core.RedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.RedNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,del,null));
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__17753__auto__ = self__.__hash;
if(!((h__17753__auto__ == null))){
return h__17753__auto__;
} else {
var h__17753__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__17753__auto____$1;

return h__17753__auto____$1;
}
});

cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.RedNode.prototype.call = (function() {
var G__23058 = null;
var G__23058__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__23058__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__23058 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__23058__2.call(this,self__,k);
case 3:
return G__23058__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23058.cljs$core$IFn$_invoke$arity$2 = G__23058__2;
G__23058.cljs$core$IFn$_invoke$arity$3 = G__23058__3;
return G__23058;
})()
;

cljs.core.RedNode.prototype.apply = (function (self__,args23057){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args23057)));
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.RedNode.cljs$lang$type = true;

cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";

cljs.core.RedNode.cljs$lang$ctorPrWriter = (function (this__17919__auto__,writer__17920__auto__,opt__17921__auto__){
return cljs.core._write(writer__17920__auto__,"cljs.core/RedNode");
});

cljs.core.__GT_RedNode = (function __GT_RedNode(key,val,left,right,__hash){
return (new cljs.core.RedNode(key,val,left,right,__hash));
});

(cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18310__auto__ = this;
return cljs.core.es6_iterator(this__18310__auto__);
}));
cljs.core.tree_map_add = (function tree_map_add(comp,tree,k,v,found){
if((tree == null)){
return (new cljs.core.RedNode(k,v,null,null,null));
} else {
var c = (function (){var G__23071 = k;
var G__23072 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__23071,G__23072) : comp.call(null,G__23071,G__23072));
})();
if((c === (0))){
(found[(0)] = tree);

return null;
} else {
if((c < (0))){
var ins = tree_map_add(comp,tree.left,k,v,found);
if(!((ins == null))){
return tree.add_left(ins);
} else {
return null;
}
} else {
var ins = tree_map_add(comp,tree.right,k,v,found);
if(!((ins == null))){
return tree.add_right(ins);
} else {
return null;
}

}
}
}
});
cljs.core.tree_map_append = (function tree_map_append(left,right){
if((left == null)){
return right;
} else {
if((right == null)){
return left;
} else {
if((left instanceof cljs.core.RedNode)){
if((right instanceof cljs.core.RedNode)){
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.RedNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.RedNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,(new cljs.core.RedNode(right.key,right.val,app,right.right,null)),null));
}
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,tree_map_append(left.right,right),null));
}
} else {
if((right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(right.key,right.val,tree_map_append(left,right.left),right.right,null));
} else {
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.BlackNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.BlackNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return cljs.core.balance_left_del(left.key,left.val,left.left,(new cljs.core.BlackNode(right.key,right.val,app,right.right,null)));
}

}
}
}
}
});
cljs.core.tree_map_remove = (function tree_map_remove(comp,tree,k,found){
if(!((tree == null))){
var c = (function (){var G__23091 = k;
var G__23092 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__23091,G__23092) : comp.call(null,G__23091,G__23092));
})();
if((c === (0))){
(found[(0)] = tree);

return cljs.core.tree_map_append(tree.left,tree.right);
} else {
if((c < (0))){
var del = tree_map_remove(comp,tree.left,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left_del(tree.key,tree.val,del,tree.right);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,del,tree.right,null));
}
} else {
return null;
}
} else {
var del = tree_map_remove(comp,tree.right,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right_del(tree.key,tree.val,tree.left,del);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,tree.left,del,null));
}
} else {
return null;
}

}
}
} else {
return null;
}
});
cljs.core.tree_map_replace = (function tree_map_replace(comp,tree,k,v){
var tk = tree.key;
var c = (function (){var G__23103 = k;
var G__23104 = tk;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__23103,G__23104) : comp.call(null,G__23103,G__23104));
})();
if((c === (0))){
return tree.replace(tk,v,tree.left,tree.right);
} else {
if((c < (0))){
return tree.replace(tk,tree.val,tree_map_replace(comp,tree.left,k,v),tree.right);
} else {
return tree.replace(tk,tree.val,tree.left,tree_map_replace(comp,tree.right,k,v));

}
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMap = (function (comp,tree,cnt,meta,__hash){
this.comp = comp;
this.tree = tree;
this.cnt = cnt;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 418776847;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__23106 = cljs.core.seq(coll);
var chunk__23107 = null;
var count__23108 = (0);
var i__23109 = (0);
while(true){
if((i__23109 < count__23108)){
var vec__23110 = chunk__23107.cljs$core$IIndexed$_nth$arity$2(null,i__23109);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23110,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23110,(1),null);
var G__23111_23123 = v;
var G__23112_23124 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23111_23123,G__23112_23124) : f.call(null,G__23111_23123,G__23112_23124));

var G__23125 = seq__23106;
var G__23126 = chunk__23107;
var G__23127 = count__23108;
var G__23128 = (i__23109 + (1));
seq__23106 = G__23125;
chunk__23107 = G__23126;
count__23108 = G__23127;
i__23109 = G__23128;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__23106);
if(temp__4126__auto__){
var seq__23106__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__23106__$1)){
var c__18119__auto__ = cljs.core.chunk_first(seq__23106__$1);
var G__23129 = cljs.core.chunk_rest(seq__23106__$1);
var G__23130 = c__18119__auto__;
var G__23131 = cljs.core.count(c__18119__auto__);
var G__23132 = (0);
seq__23106 = G__23129;
chunk__23107 = G__23130;
count__23108 = G__23131;
i__23109 = G__23132;
continue;
} else {
var vec__23113 = cljs.core.first(seq__23106__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23113,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23113,(1),null);
var G__23114_23133 = v;
var G__23115_23134 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23114_23133,G__23115_23134) : f.call(null,G__23114_23133,G__23115_23134));

var G__23135 = cljs.core.next(seq__23106__$1);
var G__23136 = null;
var G__23137 = (0);
var G__23138 = (0);
seq__23106 = G__23135;
chunk__23107 = G__23136;
count__23108 = G__23137;
i__23109 = G__23138;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__23116 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__23116) : cljs.core.keys.call(null,G__23116));
})());
});

cljs.core.PersistentTreeMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__23117 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__23117) : cljs.core.vals.call(null,G__23117));
})());
});

cljs.core.PersistentTreeMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMap.prototype.entry_at = (function (k){
var self__ = this;
var coll = this;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__23118 = k;
var G__23119 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__23118,G__23119) : self__.comp.call(null,G__23118,G__23119));
})();
if((c === (0))){
return t;
} else {
if((c < (0))){
var G__23139 = t.left;
t = G__23139;
continue;
} else {
var G__23140 = t.right;
t = G__23140;
continue;

}
}
} else {
return null;
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var n = coll__$1.entry_at(k);
if(!((n == null))){
return n.val;
} else {
return not_found;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
if(!((self__.tree == null))){
return cljs.core.tree_map_kv_reduce(self__.tree,f,init);
} else {
return init;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,self__.meta,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,false,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__17753__auto__ = self__.__hash;
if(!((h__17753__auto__ == null))){
return h__17753__auto__;
} else {
var h__17753__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__17753__auto____$1;

return h__17753__auto____$1;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,(0)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_remove(self__.comp,self__.tree,k,found);
if((t == null)){
if((cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0)) == null)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt - (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_add(self__.comp,self__.tree,k,v,found);
if((t == null)){
var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0));
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,found_node.val)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,cljs.core.tree_map_replace(self__.comp,self__.tree,k,v),self__.cnt,self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt + (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((coll__$1.entry_at(k) == null));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,true,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,meta__$1,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__23141 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__23142 = cljs.core.next(es);
ret = G__23141;
es = G__23142;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentTreeMap.prototype.call = (function() {
var G__23143 = null;
var G__23143__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__23143__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__23143 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__23143__2.call(this,self__,k);
case 3:
return G__23143__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23143.cljs$core$IFn$_invoke$arity$2 = G__23143__2;
G__23143.cljs$core$IFn$_invoke$arity$3 = G__23143__3;
return G__23143;
})()
;

cljs.core.PersistentTreeMap.prototype.apply = (function (self__,args23105){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args23105)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,ascending_QMARK_,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var stack = null;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__23120 = k;
var G__23121 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__23120,G__23121) : self__.comp.call(null,G__23120,G__23121));
})();
if((c === (0))){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t),ascending_QMARK_,(-1),null));
} else {
if(cljs.core.truth_(ascending_QMARK_)){
if((c < (0))){
var G__23144 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__23145 = t.left;
stack = G__23144;
t = G__23145;
continue;
} else {
var G__23146 = stack;
var G__23147 = t.right;
stack = G__23146;
t = G__23147;
continue;
}
} else {
if((c > (0))){
var G__23148 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__23149 = t.right;
stack = G__23148;
t = G__23149;
continue;
} else {
var G__23150 = stack;
var G__23151 = t.left;
stack = G__23150;
t = G__23151;
continue;
}

}
}
} else {
if((stack == null)){
return null;
} else {
return (new cljs.core.PersistentTreeMapSeq(null,stack,ascending_QMARK_,(-1),null));
}
}
break;
}
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
var G__23122 = entry;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__23122) : cljs.core.key.call(null,G__23122));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.comp;
});

cljs.core.PersistentTreeMap.cljs$lang$type = true;

cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";

cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = (function (this__17919__auto__,writer__17920__auto__,opt__17921__auto__){
return cljs.core._write(writer__17920__auto__,"cljs.core/PersistentTreeMap");
});

cljs.core.__GT_PersistentTreeMap = (function __GT_PersistentTreeMap(comp,tree,cnt,meta,__hash){
return (new cljs.core.PersistentTreeMap(comp,tree,cnt,meta,__hash));
});

cljs.core.PersistentTreeMap.EMPTY = (new cljs.core.PersistentTreeMap(cljs.core.compare,null,(0),null,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18310__auto__ = this;
return cljs.core.es6_iterator(this__18310__auto__);
}));
/**
* keyval => key val
* Returns a new hash map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.hash_map = (function() { 
var hash_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if(in$){
var G__23152 = cljs.core.nnext(in$);
var G__23153 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__23152;
out = G__23153;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
};
var hash_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__23154__i = 0, G__23154__a = new Array(arguments.length -  0);
while (G__23154__i < G__23154__a.length) {G__23154__a[G__23154__i] = arguments[G__23154__i + 0]; ++G__23154__i;}
  keyvals = new cljs.core.IndexedSeq(G__23154__a,0);
} 
return hash_map__delegate.call(this,keyvals);};
hash_map.cljs$lang$maxFixedArity = 0;
hash_map.cljs$lang$applyTo = (function (arglist__23155){
var keyvals = cljs.core.seq(arglist__23155);
return hash_map__delegate(keyvals);
});
hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
return hash_map;
})()
;
/**
* keyval => key val
* Returns a new array map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.array_map = (function() { 
var array_map__delegate = function (keyvals){
return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array,keyvals),true,false);
};
var array_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__23156__i = 0, G__23156__a = new Array(arguments.length -  0);
while (G__23156__i < G__23156__a.length) {G__23156__a[G__23156__i] = arguments[G__23156__i + 0]; ++G__23156__i;}
  keyvals = new cljs.core.IndexedSeq(G__23156__a,0);
} 
return array_map__delegate.call(this,keyvals);};
array_map.cljs$lang$maxFixedArity = 0;
array_map.cljs$lang$applyTo = (function (arglist__23157){
var keyvals = cljs.core.seq(arglist__23157);
return array_map__delegate(keyvals);
});
array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
return array_map;
})()
;
/**
* keyval => key val
* Returns a new object map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.obj_map = (function() { 
var obj_map__delegate = function (keyvals){
var ks = [];
var obj = (function (){var obj23161 = {};
return obj23161;
})();
var kvs = cljs.core.seq(keyvals);
while(true){
if(kvs){
ks.push(cljs.core.first(kvs));

(obj[cljs.core.first(kvs)] = cljs.core.second(kvs));

var G__23162 = cljs.core.nnext(kvs);
kvs = G__23162;
continue;
} else {
return cljs.core.ObjMap.fromObject(ks,obj);
}
break;
}
};
var obj_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__23163__i = 0, G__23163__a = new Array(arguments.length -  0);
while (G__23163__i < G__23163__a.length) {G__23163__a[G__23163__i] = arguments[G__23163__i + 0]; ++G__23163__i;}
  keyvals = new cljs.core.IndexedSeq(G__23163__a,0);
} 
return obj_map__delegate.call(this,keyvals);};
obj_map.cljs$lang$maxFixedArity = 0;
obj_map.cljs$lang$applyTo = (function (arglist__23164){
var keyvals = cljs.core.seq(arglist__23164);
return obj_map__delegate(keyvals);
});
obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
return obj_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.sorted_map = (function() { 
var sorted_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.PersistentTreeMap.EMPTY;
while(true){
if(in$){
var G__23165 = cljs.core.nnext(in$);
var G__23166 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__23165;
out = G__23166;
continue;
} else {
return out;
}
break;
}
};
var sorted_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__23167__i = 0, G__23167__a = new Array(arguments.length -  0);
while (G__23167__i < G__23167__a.length) {G__23167__a[G__23167__i] = arguments[G__23167__i + 0]; ++G__23167__i;}
  keyvals = new cljs.core.IndexedSeq(G__23167__a,0);
} 
return sorted_map__delegate.call(this,keyvals);};
sorted_map.cljs$lang$maxFixedArity = 0;
sorted_map.cljs$lang$applyTo = (function (arglist__23168){
var keyvals = cljs.core.seq(arglist__23168);
return sorted_map__delegate(keyvals);
});
sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
return sorted_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_map_by = (function() { 
var sorted_map_by__delegate = function (comparator,keyvals){
var in$ = cljs.core.seq(keyvals);
var out = (new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator),null,(0),null,(0)));
while(true){
if(in$){
var G__23169 = cljs.core.nnext(in$);
var G__23170 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__23169;
out = G__23170;
continue;
} else {
return out;
}
break;
}
};
var sorted_map_by = function (comparator,var_args){
var keyvals = null;
if (arguments.length > 1) {
var G__23171__i = 0, G__23171__a = new Array(arguments.length -  1);
while (G__23171__i < G__23171__a.length) {G__23171__a[G__23171__i] = arguments[G__23171__i + 1]; ++G__23171__i;}
  keyvals = new cljs.core.IndexedSeq(G__23171__a,0);
} 
return sorted_map_by__delegate.call(this,comparator,keyvals);};
sorted_map_by.cljs$lang$maxFixedArity = 1;
sorted_map_by.cljs$lang$applyTo = (function (arglist__23172){
var comparator = cljs.core.first(arglist__23172);
var keyvals = cljs.core.rest(arglist__23172);
return sorted_map_by__delegate(comparator,keyvals);
});
sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
return sorted_map_by;
})()
;

/**
* @constructor
*/
cljs.core.KeySeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.KeySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.KeySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__23173 = self__.mseq;
if(G__23173){
var bit__18013__auto__ = (G__23173.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__18013__auto__) || (G__23173.cljs$core$INext$)){
return true;
} else {
if((!G__23173.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__23173);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__23173);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.KeySeq(nseq,self__._meta));
}
});

cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_key$arity$1(null);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__23174 = self__.mseq;
if(G__23174){
var bit__18013__auto__ = (G__23174.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__18013__auto__) || (G__23174.cljs$core$INext$)){
return true;
} else {
if((!G__23174.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__23174);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__23174);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.KeySeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.KeySeq(self__.mseq,new_meta));
});

cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.KeySeq.cljs$lang$type = true;

cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";

cljs.core.KeySeq.cljs$lang$ctorPrWriter = (function (this__17919__auto__,writer__17920__auto__,opt__17921__auto__){
return cljs.core._write(writer__17920__auto__,"cljs.core/KeySeq");
});

cljs.core.__GT_KeySeq = (function __GT_KeySeq(mseq,_meta){
return (new cljs.core.KeySeq(mseq,_meta));
});

(cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18310__auto__ = this;
return cljs.core.es6_iterator(this__18310__auto__);
}));
/**
* Returns a sequence of the map's keys.
*/
cljs.core.keys = (function keys(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.KeySeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the key of the map entry.
*/
cljs.core.key = (function key(map_entry){
return cljs.core._key(map_entry);
});

/**
* @constructor
*/
cljs.core.ValSeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.ValSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ValSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__23175 = self__.mseq;
if(G__23175){
var bit__18013__auto__ = (G__23175.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__18013__auto__) || (G__23175.cljs$core$INext$)){
return true;
} else {
if((!G__23175.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__23175);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__23175);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.ValSeq(nseq,self__._meta));
}
});

cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_val$arity$1(null);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__23176 = self__.mseq;
if(G__23176){
var bit__18013__auto__ = (G__23176.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__18013__auto__) || (G__23176.cljs$core$INext$)){
return true;
} else {
if((!G__23176.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__23176);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__23176);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.ValSeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ValSeq(self__.mseq,new_meta));
});

cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ValSeq.cljs$lang$type = true;

cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";

cljs.core.ValSeq.cljs$lang$ctorPrWriter = (function (this__17919__auto__,writer__17920__auto__,opt__17921__auto__){
return cljs.core._write(writer__17920__auto__,"cljs.core/ValSeq");
});

cljs.core.__GT_ValSeq = (function __GT_ValSeq(mseq,_meta){
return (new cljs.core.ValSeq(mseq,_meta));
});

(cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18310__auto__ = this;
return cljs.core.es6_iterator(this__18310__auto__);
}));
/**
* Returns a sequence of the map's values.
*/
cljs.core.vals = (function vals(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.ValSeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the value in the map entry.
*/
cljs.core.val = (function val(map_entry){
return cljs.core._val(map_entry);
});
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping from
* the latter (left-to-right) will be the mapping in the result.
* @param {...*} var_args
*/
cljs.core.merge = (function() { 
var merge__delegate = function (maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((function (p1__23177_SHARP_,p2__23178_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__17332__auto__ = p1__23177_SHARP_;
if(cljs.core.truth_(or__17332__auto__)){
return or__17332__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),p2__23178_SHARP_);
}),maps);
} else {
return null;
}
};
var merge = function (var_args){
var maps = null;
if (arguments.length > 0) {
var G__23179__i = 0, G__23179__a = new Array(arguments.length -  0);
while (G__23179__i < G__23179__a.length) {G__23179__a[G__23179__i] = arguments[G__23179__i + 0]; ++G__23179__i;}
  maps = new cljs.core.IndexedSeq(G__23179__a,0);
} 
return merge__delegate.call(this,maps);};
merge.cljs$lang$maxFixedArity = 0;
merge.cljs$lang$applyTo = (function (arglist__23180){
var maps = cljs.core.seq(arglist__23180);
return merge__delegate(maps);
});
merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
return merge;
})()
;
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping(s)
* from the latter (left-to-right) will be combined with the mapping in
* the result by calling (f val-in-result val-in-latter).
* @param {...*} var_args
*/
cljs.core.merge_with = (function() { 
var merge_with__delegate = function (f,maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
var merge_entry = (function (m,e){
var k = cljs.core.first(e);
var v = cljs.core.second(e);
if(cljs.core.contains_QMARK_(m,k)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__23183 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__23184 = v;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23183,G__23184) : f.call(null,G__23183,G__23184));
})());
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
var merge2 = ((function (merge_entry){
return (function (m1,m2){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry,(function (){var or__17332__auto__ = m1;
if(cljs.core.truth_(or__17332__auto__)){
return or__17332__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),cljs.core.seq(m2));
});})(merge_entry))
;
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2,maps);
} else {
return null;
}
};
var merge_with = function (f,var_args){
var maps = null;
if (arguments.length > 1) {
var G__23185__i = 0, G__23185__a = new Array(arguments.length -  1);
while (G__23185__i < G__23185__a.length) {G__23185__a[G__23185__i] = arguments[G__23185__i + 1]; ++G__23185__i;}
  maps = new cljs.core.IndexedSeq(G__23185__a,0);
} 
return merge_with__delegate.call(this,f,maps);};
merge_with.cljs$lang$maxFixedArity = 1;
merge_with.cljs$lang$applyTo = (function (arglist__23186){
var f = cljs.core.first(arglist__23186);
var maps = cljs.core.rest(arglist__23186);
return merge_with__delegate(f,maps);
});
merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
return merge_with;
})()
;
/**
* Returns a map containing only those entries in map whose key is in keys
*/
cljs.core.select_keys = (function select_keys(map,keyseq){
var ret = cljs.core.PersistentArrayMap.EMPTY;
var keys = cljs.core.seq(keyseq);
while(true){
if(keys){
var key = cljs.core.first(keys);
var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map,key,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185));
var G__23187 = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185)))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,key,entry):ret);
var G__23188 = cljs.core.next(keys);
ret = G__23187;
keys = G__23188;
continue;
} else {
return cljs.core.with_meta(ret,cljs.core.meta(map));
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentHashSet = (function (meta,hash_map,__hash){
this.meta = meta;
this.hash_map = hash_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 15077647;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__23191 = cljs.core.seq(coll);
var chunk__23192 = null;
var count__23193 = (0);
var i__23194 = (0);
while(true){
if((i__23194 < count__23193)){
var vec__23195 = chunk__23192.cljs$core$IIndexed$_nth$arity$2(null,i__23194);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23195,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23195,(1),null);
var G__23196_23201 = v;
var G__23197_23202 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23196_23201,G__23197_23202) : f.call(null,G__23196_23201,G__23197_23202));

var G__23203 = seq__23191;
var G__23204 = chunk__23192;
var G__23205 = count__23193;
var G__23206 = (i__23194 + (1));
seq__23191 = G__23203;
chunk__23192 = G__23204;
count__23193 = G__23205;
i__23194 = G__23206;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__23191);
if(temp__4126__auto__){
var seq__23191__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__23191__$1)){
var c__18119__auto__ = cljs.core.chunk_first(seq__23191__$1);
var G__23207 = cljs.core.chunk_rest(seq__23191__$1);
var G__23208 = c__18119__auto__;
var G__23209 = cljs.core.count(c__18119__auto__);
var G__23210 = (0);
seq__23191 = G__23207;
chunk__23192 = G__23208;
count__23193 = G__23209;
i__23194 = G__23210;
continue;
} else {
var vec__23198 = cljs.core.first(seq__23191__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23198,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23198,(1),null);
var G__23199_23211 = v;
var G__23200_23212 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23199_23211,G__23200_23212) : f.call(null,G__23199_23211,G__23200_23212));

var G__23213 = cljs.core.next(seq__23191__$1);
var G__23214 = null;
var G__23215 = (0);
var G__23216 = (0);
seq__23191 = G__23213;
chunk__23192 = G__23214;
count__23193 = G__23215;
i__23194 = G__23216;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core._contains_key_QMARK_(self__.hash_map,v)){
return v;
} else {
return not_found;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._count(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__17753__auto__ = self__.__hash;
if(!((h__17753__auto__ == null))){
return h__17753__auto__;
} else {
var h__17753__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__17753__auto____$1;

return h__17753__auto____$1;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__23189_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__23189_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,self__.meta);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core._dissoc(self__.hash_map,v),null));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(meta__$1,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map,o,null),null));
});

cljs.core.PersistentHashSet.prototype.call = (function() {
var G__23217 = null;
var G__23217__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__23217__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__23217 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__23217__2.call(this,self__,k);
case 3:
return G__23217__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23217.cljs$core$IFn$_invoke$arity$2 = G__23217__2;
G__23217.cljs$core$IFn$_invoke$arity$3 = G__23217__3;
return G__23217;
})()
;

cljs.core.PersistentHashSet.prototype.apply = (function (self__,args23190){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args23190)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashSet.cljs$lang$type = true;

cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";

cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = (function (this__17919__auto__,writer__17920__auto__,opt__17921__auto__){
return cljs.core._write(writer__17920__auto__,"cljs.core/PersistentHashSet");
});

cljs.core.__GT_PersistentHashSet = (function __GT_PersistentHashSet(meta,hash_map,__hash){
return (new cljs.core.PersistentHashSet(meta,hash_map,__hash));
});

cljs.core.PersistentHashSet.EMPTY = (new cljs.core.PersistentHashSet(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashSet.fromArray = (function (items,no_clone){
var len = items.length;
if((len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr = ((no_clone)?items:cljs.core.aclone(items));
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__23218 = (i + (1));
var G__23219 = cljs.core._assoc_BANG_(out,(items[i]),null);
i = G__23218;
out = G__23219;
continue;
} else {
return (new cljs.core.PersistentHashSet(null,cljs.core._persistent_BANG_(out),null));
}
break;
}
} else {
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < len)){
var G__23220 = (i + (1));
var G__23221 = cljs.core._conj_BANG_(out,(items[i]));
i = G__23220;
out = G__23221;
continue;
} else {
return cljs.core._persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18310__auto__ = this;
return cljs.core.es6_iterator(this__18310__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashSet = (function (transient_map){
this.transient_map = transient_map;
this.cljs$lang$protocol_mask$partition0$ = 259;
this.cljs$lang$protocol_mask$partition1$ = 136;
})
cljs.core.TransientHashSet.prototype.call = (function() {
var G__23223 = null;
var G__23223__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});
var G__23223__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});
G__23223 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__23223__2.call(this,self__,k);
case 3:
return G__23223__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23223.cljs$core$IFn$_invoke$arity$2 = G__23223__2;
G__23223.cljs$core$IFn$_invoke$arity$3 = G__23223__3;
return G__23223;
})()
;

cljs.core.TransientHashSet.prototype.apply = (function (self__,args23222){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args23222)));
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,v,null);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,v,not_found){
var self__ = this;
var tcoll__$1 = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return v;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return cljs.core.count(self__.transient_map);
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map,v);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map,o,null);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return (new cljs.core.PersistentHashSet(null,cljs.core.persistent_BANG_(self__.transient_map),null));
});

cljs.core.TransientHashSet.cljs$lang$type = true;

cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";

cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = (function (this__17919__auto__,writer__17920__auto__,opt__17921__auto__){
return cljs.core._write(writer__17920__auto__,"cljs.core/TransientHashSet");
});

cljs.core.__GT_TransientHashSet = (function __GT_TransientHashSet(transient_map){
return (new cljs.core.TransientHashSet(transient_map));
});


/**
* @constructor
*/
cljs.core.PersistentTreeSet = (function (meta,tree_map,__hash){
this.meta = meta;
this.tree_map = tree_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 417730831;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__23226 = cljs.core.seq(coll);
var chunk__23227 = null;
var count__23228 = (0);
var i__23229 = (0);
while(true){
if((i__23229 < count__23228)){
var vec__23230 = chunk__23227.cljs$core$IIndexed$_nth$arity$2(null,i__23229);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23230,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23230,(1),null);
var G__23231_23236 = v;
var G__23232_23237 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23231_23236,G__23232_23237) : f.call(null,G__23231_23236,G__23232_23237));

var G__23238 = seq__23226;
var G__23239 = chunk__23227;
var G__23240 = count__23228;
var G__23241 = (i__23229 + (1));
seq__23226 = G__23238;
chunk__23227 = G__23239;
count__23228 = G__23240;
i__23229 = G__23241;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__23226);
if(temp__4126__auto__){
var seq__23226__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__23226__$1)){
var c__18119__auto__ = cljs.core.chunk_first(seq__23226__$1);
var G__23242 = cljs.core.chunk_rest(seq__23226__$1);
var G__23243 = c__18119__auto__;
var G__23244 = cljs.core.count(c__18119__auto__);
var G__23245 = (0);
seq__23226 = G__23242;
chunk__23227 = G__23243;
count__23228 = G__23244;
i__23229 = G__23245;
continue;
} else {
var vec__23233 = cljs.core.first(seq__23226__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23233,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23233,(1),null);
var G__23234_23246 = v;
var G__23235_23247 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23234_23246,G__23235_23247) : f.call(null,G__23234_23246,G__23235_23247));

var G__23248 = cljs.core.next(seq__23226__$1);
var G__23249 = null;
var G__23250 = (0);
var G__23251 = (0);
seq__23226 = G__23248;
chunk__23227 = G__23249;
count__23228 = G__23250;
i__23229 = G__23251;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
var n = self__.tree_map.entry_at(v);
if(!((n == null))){
return n.key;
} else {
return not_found;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.count(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core.count(self__.tree_map) > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core.rseq(self__.tree_map));
} else {
return null;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__17753__auto__ = self__.__hash;
if(!((h__17753__auto__ == null))){
return h__17753__auto__;
} else {
var h__17753__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__17753__auto____$1;

return h__17753__auto____$1;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__23224_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__23224_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core._empty(self__.tree_map),(0)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map,v),null));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(meta__$1,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map,o,null),null));
});

cljs.core.PersistentTreeSet.prototype.call = (function() {
var G__23252 = null;
var G__23252__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__23252__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__23252 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__23252__2.call(this,self__,k);
case 3:
return G__23252__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23252.cljs$core$IFn$_invoke$arity$2 = G__23252__2;
G__23252.cljs$core$IFn$_invoke$arity$3 = G__23252__3;
return G__23252;
})()
;

cljs.core.PersistentTreeSet.prototype.apply = (function (self__,args23225){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args23225)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq(self__.tree_map,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq_from(self__.tree_map,k,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
return entry;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._comparator(self__.tree_map);
});

cljs.core.PersistentTreeSet.cljs$lang$type = true;

cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";

cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = (function (this__17919__auto__,writer__17920__auto__,opt__17921__auto__){
return cljs.core._write(writer__17920__auto__,"cljs.core/PersistentTreeSet");
});

cljs.core.__GT_PersistentTreeSet = (function __GT_PersistentTreeSet(meta,tree_map,__hash){
return (new cljs.core.PersistentTreeSet(meta,tree_map,__hash));
});

cljs.core.PersistentTreeSet.EMPTY = (new cljs.core.PersistentTreeSet(null,cljs.core.PersistentTreeMap.EMPTY,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18310__auto__ = this;
return cljs.core.es6_iterator(this__18310__auto__);
}));
cljs.core.set_from_indexed_seq = (function set_from_indexed_seq(iseq){
var arr = iseq.arr;
var ret = (function (){var a__18213__auto__ = arr;
var i = (0);
var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < a__18213__auto__.length)){
var G__23253 = (i + (1));
var G__23254 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,(arr[i]));
i = G__23253;
res = G__23254;
continue;
} else {
return res;
}
break;
}
})();
return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
});
/**
* Returns a set of the distinct elements of coll.
*/
cljs.core.set = (function set(coll){
var in$ = cljs.core.seq(coll);
if((in$ == null)){
return cljs.core.PersistentHashSet.EMPTY;
} else {
if(((in$ instanceof cljs.core.IndexedSeq)) && ((in$.i === (0)))){
return cljs.core.set_from_indexed_seq(in$);
} else {
var in$__$1 = in$;
var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if(!((in$__$1 == null))){
var G__23255 = in$__$1.cljs$core$INext$_next$arity$1(null);
var G__23256 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,in$__$1.cljs$core$ISeq$_first$arity$1(null));
in$__$1 = G__23255;
out = G__23256;
continue;
} else {
return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
}
break;
}

}
}
});
/**
* @param {...*} var_args
*/
cljs.core.hash_set = (function() {
var hash_set = null;
var hash_set__0 = (function (){
return cljs.core.PersistentHashSet.EMPTY;
});
var hash_set__1 = (function() { 
var G__23257__delegate = function (keys){
return cljs.core.set(keys);
};
var G__23257 = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__23258__i = 0, G__23258__a = new Array(arguments.length -  0);
while (G__23258__i < G__23258__a.length) {G__23258__a[G__23258__i] = arguments[G__23258__i + 0]; ++G__23258__i;}
  keys = new cljs.core.IndexedSeq(G__23258__a,0);
} 
return G__23257__delegate.call(this,keys);};
G__23257.cljs$lang$maxFixedArity = 0;
G__23257.cljs$lang$applyTo = (function (arglist__23259){
var keys = cljs.core.seq(arglist__23259);
return G__23257__delegate(keys);
});
G__23257.cljs$core$IFn$_invoke$arity$variadic = G__23257__delegate;
return G__23257;
})()
;
hash_set = function(var_args){
var keys = var_args;
switch(arguments.length){
case 0:
return hash_set__0.call(this);
default:
var G__23260 = null;
if (arguments.length > 0) {
var G__23261__i = 0, G__23261__a = new Array(arguments.length -  0);
while (G__23261__i < G__23261__a.length) {G__23261__a[G__23261__i] = arguments[G__23261__i + 0]; ++G__23261__i;}
G__23260 = new cljs.core.IndexedSeq(G__23261__a,0);
}
return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__23260);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
hash_set.cljs$lang$maxFixedArity = 0;
hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
return hash_set;
})()
;
/**
* Returns a new sorted set with supplied keys.
* @param {...*} var_args
*/
cljs.core.sorted_set = (function() { 
var sorted_set__delegate = function (keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,cljs.core.PersistentTreeSet.EMPTY,keys);
};
var sorted_set = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__23262__i = 0, G__23262__a = new Array(arguments.length -  0);
while (G__23262__i < G__23262__a.length) {G__23262__a[G__23262__i] = arguments[G__23262__i + 0]; ++G__23262__i;}
  keys = new cljs.core.IndexedSeq(G__23262__a,0);
} 
return sorted_set__delegate.call(this,keys);};
sorted_set.cljs$lang$maxFixedArity = 0;
sorted_set.cljs$lang$applyTo = (function (arglist__23263){
var keys = cljs.core.seq(arglist__23263);
return sorted_set__delegate(keys);
});
sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
return sorted_set;
})()
;
/**
* Returns a new sorted set with supplied keys, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_set_by = (function() { 
var sorted_set_by__delegate = function (comparator,keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,(new cljs.core.PersistentTreeSet(null,cljs.core.sorted_map_by(comparator),(0))),keys);
};
var sorted_set_by = function (comparator,var_args){
var keys = null;
if (arguments.length > 1) {
var G__23264__i = 0, G__23264__a = new Array(arguments.length -  1);
while (G__23264__i < G__23264__a.length) {G__23264__a[G__23264__i] = arguments[G__23264__i + 1]; ++G__23264__i;}
  keys = new cljs.core.IndexedSeq(G__23264__a,0);
} 
return sorted_set_by__delegate.call(this,comparator,keys);};
sorted_set_by.cljs$lang$maxFixedArity = 1;
sorted_set_by.cljs$lang$applyTo = (function (arglist__23265){
var comparator = cljs.core.first(arglist__23265);
var keys = cljs.core.rest(arglist__23265);
return sorted_set_by__delegate(comparator,keys);
});
sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
return sorted_set_by;
})()
;
/**
* Given a map of replacement pairs and a vector/collection, returns a
* vector/seq with any elements = a key in smap replaced with the
* corresponding val in smap.  Returns a transducer when no collection
* is provided.
*/
cljs.core.replace = (function() {
var replace = null;
var replace__1 = (function (smap){
return cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__23266_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__23266_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.val(e);
} else {
return p1__23266_SHARP_;
}
}));
});
var replace__2 = (function (smap,coll){
if(cljs.core.vector_QMARK_(coll)){
var n = cljs.core.count(coll);
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (n){
return (function (v,i){
var temp__4124__auto__ = cljs.core.find(smap,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,i));
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,i,cljs.core.second(e));
} else {
return v;
}
});})(n))
,coll,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.iterate(cljs.core.inc,(0))));
} else {
return cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__23267_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__23267_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.second(e);
} else {
return p1__23267_SHARP_;
}
}),coll);
}
});
replace = function(smap,coll){
switch(arguments.length){
case 1:
return replace__1.call(this,smap);
case 2:
return replace__2.call(this,smap,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
return replace;
})()
;
/**
* Returns a lazy sequence of the elements of coll with duplicates removed
*/
cljs.core.distinct = (function() {
var distinct = null;
var distinct__0 = (function (){
return (function (rf){
var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
return ((function (seen){
return (function() {
var G__23288 = null;
var G__23288__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__23288__1 = (function (result){
var G__23278 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__23278) : rf.call(null,G__23278));
});
var G__23288__2 = (function (result,input){
if(cljs.core.contains_QMARK_((function (){var G__23279 = seen;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23279) : cljs.core.deref.call(null,G__23279));
})(),input)){
return result;
} else {
seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null),input));

var G__23280 = result;
var G__23281 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__23280,G__23281) : rf.call(null,G__23280,G__23281));
}
});
G__23288 = function(result,input){
switch(arguments.length){
case 0:
return G__23288__0.call(this);
case 1:
return G__23288__1.call(this,result);
case 2:
return G__23288__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23288.cljs$core$IFn$_invoke$arity$0 = G__23288__0;
G__23288.cljs$core$IFn$_invoke$arity$1 = G__23288__1;
G__23288.cljs$core$IFn$_invoke$arity$2 = G__23288__2;
return G__23288;
})()
;})(seen))
});
});
var distinct__1 = (function (coll){
var step = (function step(xs,seen){
return (new cljs.core.LazySeq(null,(function (){
return (function (p__23286,seen__$1){
while(true){
var vec__23287 = p__23286;
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23287,(0),null);
var xs__$1 = vec__23287;
var temp__4126__auto__ = cljs.core.seq(xs__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.contains_QMARK_(seen__$1,f)){
var G__23289 = cljs.core.rest(s);
var G__23290 = seen__$1;
p__23286 = G__23289;
seen__$1 = G__23290;
continue;
} else {
return cljs.core.cons(f,step(cljs.core.rest(s),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1,f)));
}
} else {
return null;
}
break;
}
}).call(null,xs,seen);
}),null,null));
});
return step(coll,cljs.core.PersistentHashSet.EMPTY);
});
distinct = function(coll){
switch(arguments.length){
case 0:
return distinct__0.call(this);
case 1:
return distinct__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct.cljs$core$IFn$_invoke$arity$0 = distinct__0;
distinct.cljs$core$IFn$_invoke$arity$1 = distinct__1;
return distinct;
})()
;
cljs.core.butlast = (function butlast(s){
var ret = cljs.core.PersistentVector.EMPTY;
var s__$1 = s;
while(true){
if(cljs.core.next(s__$1)){
var G__23291 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,cljs.core.first(s__$1));
var G__23292 = cljs.core.next(s__$1);
ret = G__23291;
s__$1 = G__23292;
continue;
} else {
return cljs.core.seq(ret);
}
break;
}
});
/**
* Returns the name String of a string, symbol or keyword.
*/
cljs.core.name = (function name(x){
if((function (){var G__23294 = x;
if(G__23294){
var bit__18006__auto__ = (G__23294.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__18006__auto__) || (G__23294.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_name$arity$1(null);
} else {
if(typeof x === 'string'){
return x;
} else {
throw (new Error([cljs.core.str("Doesn't support name: "),cljs.core.str(x)].join('')));
}
}
});
/**
* Returns a map with the keys mapped to the corresponding vals.
*/
cljs.core.zipmap = (function zipmap(keys,vals){
var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
var ks = cljs.core.seq(keys);
var vs = cljs.core.seq(vals);
while(true){
if((ks) && (vs)){
var G__23295 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map,cljs.core.first(ks),cljs.core.first(vs));
var G__23296 = cljs.core.next(ks);
var G__23297 = cljs.core.next(vs);
map = G__23295;
ks = G__23296;
vs = G__23297;
continue;
} else {
return cljs.core.persistent_BANG_(map);
}
break;
}
});
/**
* Returns the x for which (k x), a number, is greatest.
* @param {...*} var_args
*/
cljs.core.max_key = (function() {
var max_key = null;
var max_key__2 = (function (k,x){
return x;
});
var max_key__3 = (function (k,x,y){
if(((function (){var G__23308 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__23308) : k.call(null,G__23308));
})() > (function (){var G__23309 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__23309) : k.call(null,G__23309));
})())){
return x;
} else {
return y;
}
});
var max_key__4 = (function() { 
var G__23310__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__23298_SHARP_,p2__23299_SHARP_){
return max_key.cljs$core$IFn$_invoke$arity$3(k,p1__23298_SHARP_,p2__23299_SHARP_);
}),max_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__23310 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__23311__i = 0, G__23311__a = new Array(arguments.length -  3);
while (G__23311__i < G__23311__a.length) {G__23311__a[G__23311__i] = arguments[G__23311__i + 3]; ++G__23311__i;}
  more = new cljs.core.IndexedSeq(G__23311__a,0);
} 
return G__23310__delegate.call(this,k,x,y,more);};
G__23310.cljs$lang$maxFixedArity = 3;
G__23310.cljs$lang$applyTo = (function (arglist__23312){
var k = cljs.core.first(arglist__23312);
arglist__23312 = cljs.core.next(arglist__23312);
var x = cljs.core.first(arglist__23312);
arglist__23312 = cljs.core.next(arglist__23312);
var y = cljs.core.first(arglist__23312);
var more = cljs.core.rest(arglist__23312);
return G__23310__delegate(k,x,y,more);
});
G__23310.cljs$core$IFn$_invoke$arity$variadic = G__23310__delegate;
return G__23310;
})()
;
max_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return max_key__2.call(this,k,x);
case 3:
return max_key__3.call(this,k,x,y);
default:
var G__23313 = null;
if (arguments.length > 3) {
var G__23314__i = 0, G__23314__a = new Array(arguments.length -  3);
while (G__23314__i < G__23314__a.length) {G__23314__a[G__23314__i] = arguments[G__23314__i + 3]; ++G__23314__i;}
G__23313 = new cljs.core.IndexedSeq(G__23314__a,0);
}
return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__23313);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max_key.cljs$lang$maxFixedArity = 3;
max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
return max_key;
})()
;
/**
* Returns the x for which (k x), a number, is least.
* @param {...*} var_args
*/
cljs.core.min_key = (function() {
var min_key = null;
var min_key__2 = (function (k,x){
return x;
});
var min_key__3 = (function (k,x,y){
if(((function (){var G__23325 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__23325) : k.call(null,G__23325));
})() < (function (){var G__23326 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__23326) : k.call(null,G__23326));
})())){
return x;
} else {
return y;
}
});
var min_key__4 = (function() { 
var G__23327__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__23315_SHARP_,p2__23316_SHARP_){
return min_key.cljs$core$IFn$_invoke$arity$3(k,p1__23315_SHARP_,p2__23316_SHARP_);
}),min_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__23327 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__23328__i = 0, G__23328__a = new Array(arguments.length -  3);
while (G__23328__i < G__23328__a.length) {G__23328__a[G__23328__i] = arguments[G__23328__i + 3]; ++G__23328__i;}
  more = new cljs.core.IndexedSeq(G__23328__a,0);
} 
return G__23327__delegate.call(this,k,x,y,more);};
G__23327.cljs$lang$maxFixedArity = 3;
G__23327.cljs$lang$applyTo = (function (arglist__23329){
var k = cljs.core.first(arglist__23329);
arglist__23329 = cljs.core.next(arglist__23329);
var x = cljs.core.first(arglist__23329);
arglist__23329 = cljs.core.next(arglist__23329);
var y = cljs.core.first(arglist__23329);
var more = cljs.core.rest(arglist__23329);
return G__23327__delegate(k,x,y,more);
});
G__23327.cljs$core$IFn$_invoke$arity$variadic = G__23327__delegate;
return G__23327;
})()
;
min_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return min_key__2.call(this,k,x);
case 3:
return min_key__3.call(this,k,x,y);
default:
var G__23330 = null;
if (arguments.length > 3) {
var G__23331__i = 0, G__23331__a = new Array(arguments.length -  3);
while (G__23331__i < G__23331__a.length) {G__23331__a[G__23331__i] = arguments[G__23331__i + 3]; ++G__23331__i;}
G__23330 = new cljs.core.IndexedSeq(G__23331__a,0);
}
return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__23330);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min_key.cljs$lang$maxFixedArity = 3;
min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
return min_key;
})()
;

/**
* @constructor
*/
cljs.core.ArrayList = (function (arr){
this.arr = arr;
})
cljs.core.ArrayList.prototype.add = (function (x){
var self__ = this;
var _ = this;
return self__.arr.push(x);
});

cljs.core.ArrayList.prototype.size = (function (){
var self__ = this;
var _ = this;
return self__.arr.length;
});

cljs.core.ArrayList.prototype.clear = (function (){
var self__ = this;
var _ = this;
return self__.arr = [];
});

cljs.core.ArrayList.prototype.isEmpty = (function (){
var self__ = this;
var _ = this;
return (self__.arr.length === (0));
});

cljs.core.ArrayList.prototype.toArray = (function (){
var self__ = this;
var _ = this;
return self__.arr;
});

cljs.core.ArrayList.cljs$lang$type = true;

cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";

cljs.core.ArrayList.cljs$lang$ctorPrWriter = (function (this__17919__auto__,writer__17920__auto__,opt__17921__auto__){
return cljs.core._write(writer__17920__auto__,"cljs.core/ArrayList");
});

cljs.core.__GT_ArrayList = (function __GT_ArrayList(arr){
return (new cljs.core.ArrayList(arr));
});

cljs.core.array_list = (function array_list(){
return (new cljs.core.ArrayList([]));
});
/**
* Returns a lazy sequence of lists like partition, but may include
* partitions with fewer than n items at the end.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_all = (function() {
var partition_all = null;
var partition_all__1 = (function (n){
return (function (rf){
var a = cljs.core.array_list();
return ((function (a){
return (function() {
var G__23348 = null;
var G__23348__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__23348__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__23343 = result;
var G__23344 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__23343,G__23344) : rf.call(null,G__23343,G__23344));
})());
})());
var G__23345 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__23345) : rf.call(null,G__23345));
});
var G__23348__2 = (function (result,input){
a.add(input);

if((n === a.size())){
var v = cljs.core.vec(a.toArray());
a.clear();

var G__23346 = result;
var G__23347 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__23346,G__23347) : rf.call(null,G__23346,G__23347));
} else {
return result;
}
});
G__23348 = function(result,input){
switch(arguments.length){
case 0:
return G__23348__0.call(this);
case 1:
return G__23348__1.call(this,result);
case 2:
return G__23348__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23348.cljs$core$IFn$_invoke$arity$0 = G__23348__0;
G__23348.cljs$core$IFn$_invoke$arity$1 = G__23348__1;
G__23348.cljs$core$IFn$_invoke$arity$2 = G__23348__2;
return G__23348;
})()
;})(a))
});
});
var partition_all__2 = (function (n,coll){
return partition_all.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition_all__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s),partition_all.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
}),null,null));
});
partition_all = function(n,step,coll){
switch(arguments.length){
case 1:
return partition_all__1.call(this,n);
case 2:
return partition_all__2.call(this,n,step);
case 3:
return partition_all__3.call(this,n,step,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
return partition_all;
})()
;
/**
* Returns a lazy sequence of successive items from coll while
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.take_while = (function() {
var take_while = null;
var take_while__1 = (function (pred){
return (function (rf){
return (function() {
var G__23361 = null;
var G__23361__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__23361__1 = (function (result){
var G__23356 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__23356) : rf.call(null,G__23356));
});
var G__23361__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__23357 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__23357) : pred.call(null,G__23357));
})())){
var G__23358 = result;
var G__23359 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__23358,G__23359) : rf.call(null,G__23358,G__23359));
} else {
return cljs.core.reduced(result);
}
});
G__23361 = function(result,input){
switch(arguments.length){
case 0:
return G__23361__0.call(this);
case 1:
return G__23361__1.call(this,result);
case 2:
return G__23361__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23361.cljs$core$IFn$_invoke$arity$0 = G__23361__0;
G__23361.cljs$core$IFn$_invoke$arity$1 = G__23361__1;
G__23361.cljs$core$IFn$_invoke$arity$2 = G__23361__2;
return G__23361;
})()
});
});
var take_while__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.truth_((function (){var G__23360 = cljs.core.first(s);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__23360) : pred.call(null,G__23360));
})())){
return cljs.core.cons(cljs.core.first(s),take_while.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take_while = function(pred,coll){
switch(arguments.length){
case 1:
return take_while__1.call(this,pred);
case 2:
return take_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
return take_while;
})()
;
cljs.core.mk_bound_fn = (function mk_bound_fn(sc,test,key){
return (function (e){
var comp = cljs.core._comparator(sc);
var G__23366 = (function (){var G__23368 = cljs.core._entry_key(sc,e);
var G__23369 = key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__23368,G__23369) : comp.call(null,G__23368,G__23369));
})();
var G__23367 = (0);
return (test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__23366,G__23367) : test.call(null,G__23366,G__23367));
});
});
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.subseq = (function() {
var subseq = null;
var subseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_,cljs.core._GT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__23373 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23373,(0),null);
var s = vec__23373;
if(cljs.core.truth_((function (){var G__23374 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__23374) : include.call(null,G__23374));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,true));
}
});
var subseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,start_key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__23375 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23375,(0),null);
var s = vec__23375;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,end_test,end_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,start_test,start_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
subseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return subseq__3.call(this,sc,start_test,start_key);
case 5:
return subseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
return subseq;
})()
;
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a reverse seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.rsubseq = (function() {
var rsubseq = null;
var rsubseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_,cljs.core._LT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__23379 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23379,(0),null);
var s = vec__23379;
if(cljs.core.truth_((function (){var G__23380 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__23380) : include.call(null,G__23380));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,false));
}
});
var rsubseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,end_key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__23381 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23381,(0),null);
var s = vec__23381;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,start_test,start_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,end_test,end_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
rsubseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return rsubseq__3.call(this,sc,start_test,start_key);
case 5:
return rsubseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
return rsubseq;
})()
;

/**
* @constructor
*/
cljs.core.RangeIterator = (function (i,end,step){
this.i = i;
this.end = end;
this.step = step;
})
cljs.core.RangeIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__.step > (0))){
return (self__.i < self__.end);
} else {
return (self__.i > self__.end);
}
});

cljs.core.RangeIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.i;
self__.i = (self__.i + self__.step);

return ret;
});

cljs.core.RangeIterator.cljs$lang$type = true;

cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";

cljs.core.RangeIterator.cljs$lang$ctorPrWriter = (function (this__17919__auto__,writer__17920__auto__,opt__17921__auto__){
return cljs.core._write(writer__17920__auto__,"cljs.core/RangeIterator");
});

cljs.core.__GT_RangeIterator = (function __GT_RangeIterator(i,end,step){
return (new cljs.core.RangeIterator(i,end,step));
});


/**
* @constructor
*/
cljs.core.Range = (function (meta,start,end,step,__hash){
this.meta = meta;
this.start = start;
this.end = end;
this.step = step;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375006;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Range.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Range.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (rng,n){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
throw (new Error("Index out of bounds"));
}
}
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (rng,n,not_found){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
return not_found;
}
}
});

cljs.core.Range.prototype.cljs$core$IIterable$ = true;

cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RangeIterator(self__.start,self__.end,self__.step));
});

cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return self__.meta;
});

cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Range(self__.meta,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if(((self__.start + self__.step) < self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
} else {
if(((self__.start + self__.step) > self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(cljs.core.not(cljs.core._seq(rng__$1))){
return (0);
} else {
var G__23382 = ((self__.end - self__.start) / self__.step);
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__23382) : Math.ceil.call(null,G__23382));
}
});

cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
var h__17753__auto__ = self__.__hash;
if(!((h__17753__auto__ == null))){
return h__17753__auto__;
} else {
var h__17753__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
self__.__hash = h__17753__auto____$1;

return h__17753__auto____$1;
}
});

cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (rng,other){
var self__ = this;
var rng__$1 = this;
return cljs.core.equiv_sequential(rng__$1,other);
});

cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (rng,f){
var self__ = this;
var rng__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1,f);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (rng,f,init){
var self__ = this;
var rng__$1 = this;
var i = self__.start;
var ret = init;
while(true){
if((((self__.step > (0)))?(i < self__.end):(i > self__.end))){
var ret__$1 = (function (){var G__23383 = ret;
var G__23384 = i;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23383,G__23384) : f.call(null,G__23383,G__23384));
})();
if(cljs.core.reduced_QMARK_(ret__$1)){
var G__23385 = ret__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23385) : cljs.core.deref.call(null,G__23385));
} else {
var G__23386 = (i + self__.step);
var G__23387 = ret__$1;
i = G__23386;
ret = G__23387;
continue;
}
} else {
return ret;
}
break;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((cljs.core._seq(rng__$1) == null)){
return null;
} else {
return self__.start;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(!((cljs.core._seq(rng__$1) == null))){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if((self__.start < self__.end)){
return rng__$1;
} else {
return null;
}
} else {
if((self__.start > self__.end)){
return rng__$1;
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (rng,meta__$1){
var self__ = this;
var rng__$1 = this;
return (new cljs.core.Range(meta__$1,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = (function (rng,o){
var self__ = this;
var rng__$1 = this;
return cljs.core.cons(o,rng__$1);
});

cljs.core.Range.cljs$lang$type = true;

cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";

cljs.core.Range.cljs$lang$ctorPrWriter = (function (this__17919__auto__,writer__17920__auto__,opt__17921__auto__){
return cljs.core._write(writer__17920__auto__,"cljs.core/Range");
});

cljs.core.__GT_Range = (function __GT_Range(meta,start,end,step,__hash){
return (new cljs.core.Range(meta,start,end,step,__hash));
});

(cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18310__auto__ = this;
return cljs.core.es6_iterator(this__18310__auto__);
}));
/**
* Returns a lazy seq of nums from start (inclusive) to end
* (exclusive), by step, where start defaults to 0, step to 1,
* and end to infinity.
*/
cljs.core.range = (function() {
var range = null;
var range__0 = (function (){
return range.cljs$core$IFn$_invoke$arity$3((0),Number.MAX_VALUE,(1));
});
var range__1 = (function (end){
return range.cljs$core$IFn$_invoke$arity$3((0),end,(1));
});
var range__2 = (function (start,end){
return range.cljs$core$IFn$_invoke$arity$3(start,end,(1));
});
var range__3 = (function (start,end,step){
return (new cljs.core.Range(null,start,end,step,null));
});
range = function(start,end,step){
switch(arguments.length){
case 0:
return range__0.call(this);
case 1:
return range__1.call(this,start);
case 2:
return range__2.call(this,start,end);
case 3:
return range__3.call(this,start,end,step);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
range.cljs$core$IFn$_invoke$arity$0 = range__0;
range.cljs$core$IFn$_invoke$arity$1 = range__1;
range.cljs$core$IFn$_invoke$arity$2 = range__2;
range.cljs$core$IFn$_invoke$arity$3 = range__3;
return range;
})()
;
/**
* Returns a lazy seq of every nth item in coll.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.take_nth = (function() {
var take_nth = null;
var take_nth__1 = (function (n){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__23405 = null;
var G__23405__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__23405__1 = (function (result){
var G__23402 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__23402) : rf.call(null,G__23402));
});
var G__23405__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
if((cljs.core.rem(i,n) === (0))){
var G__23403 = result;
var G__23404 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__23403,G__23404) : rf.call(null,G__23403,G__23404));
} else {
return result;
}
});
G__23405 = function(result,input){
switch(arguments.length){
case 0:
return G__23405__0.call(this);
case 1:
return G__23405__1.call(this,result);
case 2:
return G__23405__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23405.cljs$core$IFn$_invoke$arity$0 = G__23405__0;
G__23405.cljs$core$IFn$_invoke$arity$1 = G__23405__1;
G__23405.cljs$core$IFn$_invoke$arity$2 = G__23405__2;
return G__23405;
})()
;})(ia))
});
});
var take_nth__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take_nth.cljs$core$IFn$_invoke$arity$2(n,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s)));
} else {
return null;
}
}),null,null));
});
take_nth = function(n,coll){
switch(arguments.length){
case 1:
return take_nth__1.call(this,n);
case 2:
return take_nth__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
return take_nth;
})()
;
/**
* Returns a vector of [(take-while pred coll) (drop-while pred coll)]
*/
cljs.core.split_with = (function split_with(pred,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,coll),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred,coll)], null);
});
/**
* Applies f to each value in coll, splitting it each time f returns a
* new value.  Returns a lazy seq of partitions.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_by = (function() {
var partition_by = null;
var partition_by__1 = (function (f){
return (function (rf){
var a = cljs.core.array_list();
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (a,pa){
return (function() {
var G__23427 = null;
var G__23427__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__23427__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__23418 = result;
var G__23419 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__23418,G__23419) : rf.call(null,G__23418,G__23419));
})());
})());
var G__23420 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__23420) : rf.call(null,G__23420));
});
var G__23427__2 = (function (result,input){
var pval = (function (){var G__23421 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23421) : cljs.core.deref.call(null,G__23421));
})();
var val = (function (){var G__23422 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23422) : f.call(null,G__23422));
})();
cljs.core.vreset_BANG_(pa,val);

if((cljs.core.keyword_identical_QMARK_(pval,new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439))) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val,pval))){
a.add(input);

return result;
} else {
var v = cljs.core.vec(a.toArray());
a.clear();

var ret = (function (){var G__23423 = result;
var G__23424 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__23423,G__23424) : rf.call(null,G__23423,G__23424));
})();
if(cljs.core.reduced_QMARK_(ret)){
} else {
a.add(input);
}

return ret;
}
});
G__23427 = function(result,input){
switch(arguments.length){
case 0:
return G__23427__0.call(this);
case 1:
return G__23427__1.call(this,result);
case 2:
return G__23427__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23427.cljs$core$IFn$_invoke$arity$0 = G__23427__0;
G__23427.cljs$core$IFn$_invoke$arity$1 = G__23427__1;
G__23427.cljs$core$IFn$_invoke$arity$2 = G__23427__2;
return G__23427;
})()
;})(a,pa))
});
});
var partition_by__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var fst = cljs.core.first(s);
var fv = (function (){var G__23425 = fst;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23425) : f.call(null,G__23425));
})();
var run = cljs.core.cons(fst,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(((function (fst,fv,s,temp__4126__auto__){
return (function (p1__23406_SHARP_){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv,(function (){var G__23426 = p1__23406_SHARP_;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23426) : f.call(null,G__23426));
})());
});})(fst,fv,s,temp__4126__auto__))
,cljs.core.next(s)));
return cljs.core.cons(run,partition_by.cljs$core$IFn$_invoke$arity$2(f,cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run),s))));
} else {
return null;
}
}),null,null));
});
partition_by = function(f,coll){
switch(arguments.length){
case 1:
return partition_by__1.call(this,f);
case 2:
return partition_by__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
return partition_by;
})()
;
/**
* Returns a map from distinct items in coll to the number of times
* they appear.
*/
cljs.core.frequencies = (function frequencies(coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (counts,x){
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts,x,(cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts,x,(0)) + (1)));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Returns a lazy seq of the intermediate values of the reduction (as
* per reduce) of coll by f, starting with init.
*/
cljs.core.reductions = (function() {
var reductions = null;
var reductions__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,cljs.core.first(s),cljs.core.rest(s));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
}
}),null,null));
});
var reductions__3 = (function (f,init,coll){
return cljs.core.cons(init,(new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,(function (){var G__23436 = init;
var G__23437 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23436,G__23437) : f.call(null,G__23436,G__23437));
})(),cljs.core.rest(s));
} else {
return null;
}
}),null,null)));
});
reductions = function(f,init,coll){
switch(arguments.length){
case 2:
return reductions__2.call(this,f,init);
case 3:
return reductions__3.call(this,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
return reductions;
})()
;
/**
* Takes a set of functions and returns a fn that is the juxtaposition
* of those fns.  The returned fn takes a variable number of args, and
* returns a vector containing the result of applying each fn to the
* args (left-to-right).
* ((juxt a b c) x) => [(a x) (b x) (c x)]
* @param {...*} var_args
*/
cljs.core.juxt = (function() {
var juxt = null;
var juxt__1 = (function (f){
return (function() {
var G__23532 = null;
var G__23532__0 = (function (){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})()],null));
});
var G__23532__1 = (function (x){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__23490 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23490) : f.call(null,G__23490));
})()],null));
});
var G__23532__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__23491 = x;
var G__23492 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23491,G__23492) : f.call(null,G__23491,G__23492));
})()],null));
});
var G__23532__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__23493 = x;
var G__23494 = y;
var G__23495 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__23493,G__23494,G__23495) : f.call(null,G__23493,G__23494,G__23495));
})()],null));
});
var G__23532__4 = (function() { 
var G__23533__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args)],null));
};
var G__23533 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__23534__i = 0, G__23534__a = new Array(arguments.length -  3);
while (G__23534__i < G__23534__a.length) {G__23534__a[G__23534__i] = arguments[G__23534__i + 3]; ++G__23534__i;}
  args = new cljs.core.IndexedSeq(G__23534__a,0);
} 
return G__23533__delegate.call(this,x,y,z,args);};
G__23533.cljs$lang$maxFixedArity = 3;
G__23533.cljs$lang$applyTo = (function (arglist__23535){
var x = cljs.core.first(arglist__23535);
arglist__23535 = cljs.core.next(arglist__23535);
var y = cljs.core.first(arglist__23535);
arglist__23535 = cljs.core.next(arglist__23535);
var z = cljs.core.first(arglist__23535);
var args = cljs.core.rest(arglist__23535);
return G__23533__delegate(x,y,z,args);
});
G__23533.cljs$core$IFn$_invoke$arity$variadic = G__23533__delegate;
return G__23533;
})()
;
G__23532 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__23532__0.call(this);
case 1:
return G__23532__1.call(this,x);
case 2:
return G__23532__2.call(this,x,y);
case 3:
return G__23532__3.call(this,x,y,z);
default:
var G__23536 = null;
if (arguments.length > 3) {
var G__23537__i = 0, G__23537__a = new Array(arguments.length -  3);
while (G__23537__i < G__23537__a.length) {G__23537__a[G__23537__i] = arguments[G__23537__i + 3]; ++G__23537__i;}
G__23536 = new cljs.core.IndexedSeq(G__23537__a,0);
}
return G__23532__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__23536);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23532.cljs$lang$maxFixedArity = 3;
G__23532.cljs$lang$applyTo = G__23532__4.cljs$lang$applyTo;
G__23532.cljs$core$IFn$_invoke$arity$0 = G__23532__0;
G__23532.cljs$core$IFn$_invoke$arity$1 = G__23532__1;
G__23532.cljs$core$IFn$_invoke$arity$2 = G__23532__2;
G__23532.cljs$core$IFn$_invoke$arity$3 = G__23532__3;
G__23532.cljs$core$IFn$_invoke$arity$variadic = G__23532__4.cljs$core$IFn$_invoke$arity$variadic;
return G__23532;
})()
});
var juxt__2 = (function (f,g){
return (function() {
var G__23538 = null;
var G__23538__0 = (function (){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})()],null));
});
var G__23538__1 = (function (x){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__23496 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23496) : f.call(null,G__23496));
})(),(function (){var G__23497 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__23497) : g.call(null,G__23497));
})()],null));
});
var G__23538__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__23498 = x;
var G__23499 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23498,G__23499) : f.call(null,G__23498,G__23499));
})(),(function (){var G__23500 = x;
var G__23501 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__23500,G__23501) : g.call(null,G__23500,G__23501));
})()],null));
});
var G__23538__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__23502 = x;
var G__23503 = y;
var G__23504 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__23502,G__23503,G__23504) : f.call(null,G__23502,G__23503,G__23504));
})(),(function (){var G__23505 = x;
var G__23506 = y;
var G__23507 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__23505,G__23506,G__23507) : g.call(null,G__23505,G__23506,G__23507));
})()],null));
});
var G__23538__4 = (function() { 
var G__23539__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args)],null));
};
var G__23539 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__23540__i = 0, G__23540__a = new Array(arguments.length -  3);
while (G__23540__i < G__23540__a.length) {G__23540__a[G__23540__i] = arguments[G__23540__i + 3]; ++G__23540__i;}
  args = new cljs.core.IndexedSeq(G__23540__a,0);
} 
return G__23539__delegate.call(this,x,y,z,args);};
G__23539.cljs$lang$maxFixedArity = 3;
G__23539.cljs$lang$applyTo = (function (arglist__23541){
var x = cljs.core.first(arglist__23541);
arglist__23541 = cljs.core.next(arglist__23541);
var y = cljs.core.first(arglist__23541);
arglist__23541 = cljs.core.next(arglist__23541);
var z = cljs.core.first(arglist__23541);
var args = cljs.core.rest(arglist__23541);
return G__23539__delegate(x,y,z,args);
});
G__23539.cljs$core$IFn$_invoke$arity$variadic = G__23539__delegate;
return G__23539;
})()
;
G__23538 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__23538__0.call(this);
case 1:
return G__23538__1.call(this,x);
case 2:
return G__23538__2.call(this,x,y);
case 3:
return G__23538__3.call(this,x,y,z);
default:
var G__23542 = null;
if (arguments.length > 3) {
var G__23543__i = 0, G__23543__a = new Array(arguments.length -  3);
while (G__23543__i < G__23543__a.length) {G__23543__a[G__23543__i] = arguments[G__23543__i + 3]; ++G__23543__i;}
G__23542 = new cljs.core.IndexedSeq(G__23543__a,0);
}
return G__23538__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__23542);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23538.cljs$lang$maxFixedArity = 3;
G__23538.cljs$lang$applyTo = G__23538__4.cljs$lang$applyTo;
G__23538.cljs$core$IFn$_invoke$arity$0 = G__23538__0;
G__23538.cljs$core$IFn$_invoke$arity$1 = G__23538__1;
G__23538.cljs$core$IFn$_invoke$arity$2 = G__23538__2;
G__23538.cljs$core$IFn$_invoke$arity$3 = G__23538__3;
G__23538.cljs$core$IFn$_invoke$arity$variadic = G__23538__4.cljs$core$IFn$_invoke$arity$variadic;
return G__23538;
})()
});
var juxt__3 = (function (f,g,h){
return (function() {
var G__23544 = null;
var G__23544__0 = (function (){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})(),(function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})()],null));
});
var G__23544__1 = (function (x){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__23508 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23508) : f.call(null,G__23508));
})(),(function (){var G__23509 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__23509) : g.call(null,G__23509));
})(),(function (){var G__23510 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__23510) : h.call(null,G__23510));
})()],null));
});
var G__23544__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__23511 = x;
var G__23512 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23511,G__23512) : f.call(null,G__23511,G__23512));
})(),(function (){var G__23513 = x;
var G__23514 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__23513,G__23514) : g.call(null,G__23513,G__23514));
})(),(function (){var G__23515 = x;
var G__23516 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__23515,G__23516) : h.call(null,G__23515,G__23516));
})()],null));
});
var G__23544__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__23517 = x;
var G__23518 = y;
var G__23519 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__23517,G__23518,G__23519) : f.call(null,G__23517,G__23518,G__23519));
})(),(function (){var G__23520 = x;
var G__23521 = y;
var G__23522 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__23520,G__23521,G__23522) : g.call(null,G__23520,G__23521,G__23522));
})(),(function (){var G__23523 = x;
var G__23524 = y;
var G__23525 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__23523,G__23524,G__23525) : h.call(null,G__23523,G__23524,G__23525));
})()],null));
});
var G__23544__4 = (function() { 
var G__23545__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args)],null));
};
var G__23545 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__23546__i = 0, G__23546__a = new Array(arguments.length -  3);
while (G__23546__i < G__23546__a.length) {G__23546__a[G__23546__i] = arguments[G__23546__i + 3]; ++G__23546__i;}
  args = new cljs.core.IndexedSeq(G__23546__a,0);
} 
return G__23545__delegate.call(this,x,y,z,args);};
G__23545.cljs$lang$maxFixedArity = 3;
G__23545.cljs$lang$applyTo = (function (arglist__23547){
var x = cljs.core.first(arglist__23547);
arglist__23547 = cljs.core.next(arglist__23547);
var y = cljs.core.first(arglist__23547);
arglist__23547 = cljs.core.next(arglist__23547);
var z = cljs.core.first(arglist__23547);
var args = cljs.core.rest(arglist__23547);
return G__23545__delegate(x,y,z,args);
});
G__23545.cljs$core$IFn$_invoke$arity$variadic = G__23545__delegate;
return G__23545;
})()
;
G__23544 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__23544__0.call(this);
case 1:
return G__23544__1.call(this,x);
case 2:
return G__23544__2.call(this,x,y);
case 3:
return G__23544__3.call(this,x,y,z);
default:
var G__23548 = null;
if (arguments.length > 3) {
var G__23549__i = 0, G__23549__a = new Array(arguments.length -  3);
while (G__23549__i < G__23549__a.length) {G__23549__a[G__23549__i] = arguments[G__23549__i + 3]; ++G__23549__i;}
G__23548 = new cljs.core.IndexedSeq(G__23549__a,0);
}
return G__23544__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__23548);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23544.cljs$lang$maxFixedArity = 3;
G__23544.cljs$lang$applyTo = G__23544__4.cljs$lang$applyTo;
G__23544.cljs$core$IFn$_invoke$arity$0 = G__23544__0;
G__23544.cljs$core$IFn$_invoke$arity$1 = G__23544__1;
G__23544.cljs$core$IFn$_invoke$arity$2 = G__23544__2;
G__23544.cljs$core$IFn$_invoke$arity$3 = G__23544__3;
G__23544.cljs$core$IFn$_invoke$arity$variadic = G__23544__4.cljs$core$IFn$_invoke$arity$variadic;
return G__23544;
})()
});
var juxt__4 = (function() { 
var G__23550__delegate = function (f,g,h,fs){
var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f,g,h,fs);
return ((function (fs__$1){
return (function() {
var G__23551 = null;
var G__23551__0 = (function (){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__23438_SHARP_,p2__23439_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__23438_SHARP_,(function (){return (p2__23439_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__23439_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__23439_SHARP_.call(null));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__23551__1 = (function (x){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__23440_SHARP_,p2__23441_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__23440_SHARP_,(function (){var G__23526 = x;
return (p2__23441_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__23441_SHARP_.cljs$core$IFn$_invoke$arity$1(G__23526) : p2__23441_SHARP_.call(null,G__23526));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__23551__2 = (function (x,y){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__23442_SHARP_,p2__23443_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__23442_SHARP_,(function (){var G__23527 = x;
var G__23528 = y;
return (p2__23443_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__23443_SHARP_.cljs$core$IFn$_invoke$arity$2(G__23527,G__23528) : p2__23443_SHARP_.call(null,G__23527,G__23528));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__23551__3 = (function (x,y,z){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__23444_SHARP_,p2__23445_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__23444_SHARP_,(function (){var G__23529 = x;
var G__23530 = y;
var G__23531 = z;
return (p2__23445_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__23445_SHARP_.cljs$core$IFn$_invoke$arity$3(G__23529,G__23530,G__23531) : p2__23445_SHARP_.call(null,G__23529,G__23530,G__23531));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__23551__4 = (function() { 
var G__23552__delegate = function (x,y,z,args){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__23446_SHARP_,p2__23447_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__23446_SHARP_,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__23447_SHARP_,x,y,z,args));
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
};
var G__23552 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__23553__i = 0, G__23553__a = new Array(arguments.length -  3);
while (G__23553__i < G__23553__a.length) {G__23553__a[G__23553__i] = arguments[G__23553__i + 3]; ++G__23553__i;}
  args = new cljs.core.IndexedSeq(G__23553__a,0);
} 
return G__23552__delegate.call(this,x,y,z,args);};
G__23552.cljs$lang$maxFixedArity = 3;
G__23552.cljs$lang$applyTo = (function (arglist__23554){
var x = cljs.core.first(arglist__23554);
arglist__23554 = cljs.core.next(arglist__23554);
var y = cljs.core.first(arglist__23554);
arglist__23554 = cljs.core.next(arglist__23554);
var z = cljs.core.first(arglist__23554);
var args = cljs.core.rest(arglist__23554);
return G__23552__delegate(x,y,z,args);
});
G__23552.cljs$core$IFn$_invoke$arity$variadic = G__23552__delegate;
return G__23552;
})()
;
G__23551 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__23551__0.call(this);
case 1:
return G__23551__1.call(this,x);
case 2:
return G__23551__2.call(this,x,y);
case 3:
return G__23551__3.call(this,x,y,z);
default:
var G__23555 = null;
if (arguments.length > 3) {
var G__23556__i = 0, G__23556__a = new Array(arguments.length -  3);
while (G__23556__i < G__23556__a.length) {G__23556__a[G__23556__i] = arguments[G__23556__i + 3]; ++G__23556__i;}
G__23555 = new cljs.core.IndexedSeq(G__23556__a,0);
}
return G__23551__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__23555);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23551.cljs$lang$maxFixedArity = 3;
G__23551.cljs$lang$applyTo = G__23551__4.cljs$lang$applyTo;
G__23551.cljs$core$IFn$_invoke$arity$0 = G__23551__0;
G__23551.cljs$core$IFn$_invoke$arity$1 = G__23551__1;
G__23551.cljs$core$IFn$_invoke$arity$2 = G__23551__2;
G__23551.cljs$core$IFn$_invoke$arity$3 = G__23551__3;
G__23551.cljs$core$IFn$_invoke$arity$variadic = G__23551__4.cljs$core$IFn$_invoke$arity$variadic;
return G__23551;
})()
;})(fs__$1))
};
var G__23550 = function (f,g,h,var_args){
var fs = null;
if (arguments.length > 3) {
var G__23557__i = 0, G__23557__a = new Array(arguments.length -  3);
while (G__23557__i < G__23557__a.length) {G__23557__a[G__23557__i] = arguments[G__23557__i + 3]; ++G__23557__i;}
  fs = new cljs.core.IndexedSeq(G__23557__a,0);
} 
return G__23550__delegate.call(this,f,g,h,fs);};
G__23550.cljs$lang$maxFixedArity = 3;
G__23550.cljs$lang$applyTo = (function (arglist__23558){
var f = cljs.core.first(arglist__23558);
arglist__23558 = cljs.core.next(arglist__23558);
var g = cljs.core.first(arglist__23558);
arglist__23558 = cljs.core.next(arglist__23558);
var h = cljs.core.first(arglist__23558);
var fs = cljs.core.rest(arglist__23558);
return G__23550__delegate(f,g,h,fs);
});
G__23550.cljs$core$IFn$_invoke$arity$variadic = G__23550__delegate;
return G__23550;
})()
;
juxt = function(f,g,h,var_args){
var fs = var_args;
switch(arguments.length){
case 1:
return juxt__1.call(this,f);
case 2:
return juxt__2.call(this,f,g);
case 3:
return juxt__3.call(this,f,g,h);
default:
var G__23559 = null;
if (arguments.length > 3) {
var G__23560__i = 0, G__23560__a = new Array(arguments.length -  3);
while (G__23560__i < G__23560__a.length) {G__23560__a[G__23560__i] = arguments[G__23560__i + 3]; ++G__23560__i;}
G__23559 = new cljs.core.IndexedSeq(G__23560__a,0);
}
return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f,g,h, G__23559);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
juxt.cljs$lang$maxFixedArity = 3;
juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
return juxt;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. dorun can
* be used to force any effects. Walks through the successive nexts of
* the seq, does not retain the head and returns nil.
*/
cljs.core.dorun = (function() {
var dorun = null;
var dorun__1 = (function (coll){
while(true){
if(cljs.core.seq(coll)){
var G__23561 = cljs.core.next(coll);
coll = G__23561;
continue;
} else {
return null;
}
break;
}
});
var dorun__2 = (function (n,coll){
while(true){
if((cljs.core.seq(coll)) && ((n > (0)))){
var G__23562 = (n - (1));
var G__23563 = cljs.core.next(coll);
n = G__23562;
coll = G__23563;
continue;
} else {
return null;
}
break;
}
});
dorun = function(n,coll){
switch(arguments.length){
case 1:
return dorun__1.call(this,n);
case 2:
return dorun__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
return dorun;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. doall can
* be used to force any effects. Walks through the successive nexts of
* the seq, retains the head and returns it, thus causing the entire
* seq to reside in memory at one time.
*/
cljs.core.doall = (function() {
var doall = null;
var doall__1 = (function (coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);

return coll;
});
var doall__2 = (function (n,coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n,coll);

return coll;
});
doall = function(n,coll){
switch(arguments.length){
case 1:
return doall__1.call(this,n);
case 2:
return doall__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
return doall;
})()
;
cljs.core.regexp_QMARK_ = (function regexp_QMARK_(o){
return (o instanceof RegExp);
});
/**
* Returns the result of (re-find re s) if re fully matches s.
*/
cljs.core.re_matches = (function re_matches(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches),s)){
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
} else {
return null;
}
} else {
throw (new TypeError("re-matches must match against a string."));
}
});
/**
* Returns the first regex match, if any, of s to re, using
* re.exec(s). Returns a vector, containing first the matching
* substring, then any capturing groups if the regular expression contains
* capturing groups.
*/
cljs.core.re_find = (function re_find(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if((matches == null)){
return null;
} else {
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
}
} else {
throw (new TypeError("re-find must match against a string."));
}
});
/**
* Returns a lazy sequence of successive matches of re in s.
*/
cljs.core.re_seq = (function re_seq(re,s){
var match_data = cljs.core.re_find(re,s);
var match_idx = s.search(re);
var match_str = ((cljs.core.coll_QMARK_(match_data))?cljs.core.first(match_data):match_data);
var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(match_idx + cljs.core.count(match_str)));
if(cljs.core.truth_(match_data)){
return (new cljs.core.LazySeq(null,((function (match_data,match_idx,match_str,post_match){
return (function (){
return cljs.core.cons(match_data,((cljs.core.seq(post_match))?re_seq(re,post_match):null));
});})(match_data,match_idx,match_str,post_match))
,null,null));
} else {
return null;
}
});
/**
* Returns an instance of RegExp which has compiled the provided string.
*/
cljs.core.re_pattern = (function re_pattern(s){
if((s instanceof RegExp)){
return s;
} else {
var vec__23567 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/,s);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23567,(0),null);
var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23567,(1),null);
var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23567,(2),null);
return (new RegExp(pattern,flags));
}
});
cljs.core.pr_sequential_writer = (function pr_sequential_writer(writer,print_one,begin,sep,end,opts,coll){
var _STAR_print_level_STAR_23575 = cljs.core._STAR_print_level_STAR_;
cljs.core._STAR_print_level_STAR_ = (((cljs.core._STAR_print_level_STAR_ == null))?null:(cljs.core._STAR_print_level_STAR_ - (1)));

try{if((!((cljs.core._STAR_print_level_STAR_ == null))) && ((cljs.core._STAR_print_level_STAR_ < (0)))){
return cljs.core._write(writer,"#");
} else {
cljs.core._write(writer,begin);

if((new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) === (0))){
if(cljs.core.seq(coll)){
cljs.core._write(writer,(function (){var or__17332__auto__ = new cljs.core.Keyword(null,"more-marker","more-marker",-14717935).cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(or__17332__auto__)){
return or__17332__auto__;
} else {
return "...";
}
})());
} else {
}
} else {
if(cljs.core.seq(coll)){
var G__23576_23582 = cljs.core.first(coll);
var G__23577_23583 = writer;
var G__23578_23584 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__23576_23582,G__23577_23583,G__23578_23584) : print_one.call(null,G__23576_23582,G__23577_23583,G__23578_23584));
} else {
}

var coll_23585__$1 = cljs.core.next(coll);
var n_23586 = (new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) - (1));
while(true){
if((coll_23585__$1) && (((n_23586 == null)) || (!((n_23586 === (0)))))){
cljs.core._write(writer,sep);

var G__23579_23587 = cljs.core.first(coll_23585__$1);
var G__23580_23588 = writer;
var G__23581_23589 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__23579_23587,G__23580_23588,G__23581_23589) : print_one.call(null,G__23579_23587,G__23580_23588,G__23581_23589));

var G__23590 = cljs.core.next(coll_23585__$1);
var G__23591 = (n_23586 - (1));
coll_23585__$1 = G__23590;
n_23586 = G__23591;
continue;
} else {
if((cljs.core.seq(coll_23585__$1)) && ((n_23586 === (0)))){
cljs.core._write(writer,sep);

cljs.core._write(writer,(function (){var or__17332__auto__ = new cljs.core.Keyword(null,"more-marker","more-marker",-14717935).cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(or__17332__auto__)){
return or__17332__auto__;
} else {
return "...";
}
})());
} else {
}
}
break;
}
}

return cljs.core._write(writer,end);
}
}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_23575;
}});
/**
* @param {...*} var_args
*/
cljs.core.write_all = (function() { 
var write_all__delegate = function (writer,ss){
var seq__23596 = cljs.core.seq(ss);
var chunk__23597 = null;
var count__23598 = (0);
var i__23599 = (0);
while(true){
if((i__23599 < count__23598)){
var s = chunk__23597.cljs$core$IIndexed$_nth$arity$2(null,i__23599);
cljs.core._write(writer,s);

var G__23600 = seq__23596;
var G__23601 = chunk__23597;
var G__23602 = count__23598;
var G__23603 = (i__23599 + (1));
seq__23596 = G__23600;
chunk__23597 = G__23601;
count__23598 = G__23602;
i__23599 = G__23603;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__23596);
if(temp__4126__auto__){
var seq__23596__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__23596__$1)){
var c__18119__auto__ = cljs.core.chunk_first(seq__23596__$1);
var G__23604 = cljs.core.chunk_rest(seq__23596__$1);
var G__23605 = c__18119__auto__;
var G__23606 = cljs.core.count(c__18119__auto__);
var G__23607 = (0);
seq__23596 = G__23604;
chunk__23597 = G__23605;
count__23598 = G__23606;
i__23599 = G__23607;
continue;
} else {
var s = cljs.core.first(seq__23596__$1);
cljs.core._write(writer,s);

var G__23608 = cljs.core.next(seq__23596__$1);
var G__23609 = null;
var G__23610 = (0);
var G__23611 = (0);
seq__23596 = G__23608;
chunk__23597 = G__23609;
count__23598 = G__23610;
i__23599 = G__23611;
continue;
}
} else {
return null;
}
}
break;
}
};
var write_all = function (writer,var_args){
var ss = null;
if (arguments.length > 1) {
var G__23612__i = 0, G__23612__a = new Array(arguments.length -  1);
while (G__23612__i < G__23612__a.length) {G__23612__a[G__23612__i] = arguments[G__23612__i + 1]; ++G__23612__i;}
  ss = new cljs.core.IndexedSeq(G__23612__a,0);
} 
return write_all__delegate.call(this,writer,ss);};
write_all.cljs$lang$maxFixedArity = 1;
write_all.cljs$lang$applyTo = (function (arglist__23613){
var writer = cljs.core.first(arglist__23613);
var ss = cljs.core.rest(arglist__23613);
return write_all__delegate(writer,ss);
});
write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
return write_all;
})()
;
cljs.core.string_print = (function string_print(x){
(cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null,x));

return null;
});
cljs.core.flush = (function flush(){
return null;
});
cljs.core.char_escapes = (function (){var obj23615 = {"\"":"\\\"","\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"};
return obj23615;
})();
cljs.core.quote_string = (function quote_string(s){
return [cljs.core.str("\""),cljs.core.str(s.replace((function (){var G__23618 = "[\\\\\"\b\f\n\r\t]";
var G__23619 = "g";
return RegExp(G__23618,G__23619);
})(),(function (match){
return (cljs.core.char_escapes[match]);
}))),cljs.core.str("\"")].join('');
});
cljs.core.pr_writer_impl = (function pr_writer_impl(obj,writer,opts){
if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if((void 0 === obj)){
return cljs.core._write(writer,"#<undefined>");
} else {
if(cljs.core.truth_((function (){var and__17320__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"meta","meta",1499536964));
if(cljs.core.truth_(and__17320__auto__)){
var and__17320__auto____$1 = (function (){var G__23633 = obj;
if(G__23633){
var bit__18013__auto__ = (G__23633.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__18013__auto__) || (G__23633.cljs$core$IMeta$)){
return true;
} else {
if((!G__23633.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__23633);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__23633);
}
})();
if(and__17320__auto____$1){
return cljs.core.meta(obj);
} else {
return and__17320__auto____$1;
}
} else {
return and__17320__auto__;
}
})())){
cljs.core._write(writer,"^");

var G__23634_23644 = cljs.core.meta(obj);
var G__23635_23645 = writer;
var G__23636_23646 = opts;
(cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3 ? cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3(G__23634_23644,G__23635_23645,G__23636_23646) : cljs.core.pr_writer.call(null,G__23634_23644,G__23635_23645,G__23636_23646));

cljs.core._write(writer," ");
} else {
}

if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if(obj.cljs$lang$type){
return obj.cljs$lang$ctorPrWriter(obj,writer,opts);
} else {
if((function (){var G__23637 = obj;
if(G__23637){
var bit__18006__auto__ = (G__23637.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__18006__auto__) || (G__23637.cljs$core$IPrintWithWriter$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,opts);
} else {
if(((cljs.core.type(obj) === Boolean)) || (typeof obj === 'number')){
return cljs.core._write(writer,[cljs.core.str(obj)].join(''));
} else {
if(cljs.core.object_QMARK_(obj)){
cljs.core._write(writer,"#js ");

var G__23638 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (k){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k),(obj[k])], null);
}),cljs.core.js_keys(obj));
var G__23639 = cljs.core.pr_writer;
var G__23640 = writer;
var G__23641 = opts;
return (cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__23638,G__23639,G__23640,G__23641) : cljs.core.print_map.call(null,G__23638,G__23639,G__23640,G__23641));
} else {
if(obj instanceof Array){
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#js ["," ","]",opts,obj);
} else {
if(cljs.core.truth_((function (){var G__23642 = obj;
return goog.isString(G__23642);
})())){
if(cljs.core.truth_(new cljs.core.Keyword(null,"readably","readably",1129599760).cljs$core$IFn$_invoke$arity$1(opts))){
return cljs.core._write(writer,cljs.core.quote_string(obj));
} else {
return cljs.core._write(writer,obj);
}
} else {
if(cljs.core.fn_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));
} else {
if((obj instanceof Date)){
var normalize = (function (n,len){
var ns = [cljs.core.str(n)].join('');
while(true){
if((cljs.core.count(ns) < len)){
var G__23647 = [cljs.core.str("0"),cljs.core.str(ns)].join('');
ns = G__23647;
continue;
} else {
return ns;
}
break;
}
});
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#inst \"",[cljs.core.str(obj.getUTCFullYear())].join(''),"-",normalize((obj.getUTCMonth() + (1)),(2)),"-",normalize(obj.getUTCDate(),(2)),"T",normalize(obj.getUTCHours(),(2)),":",normalize(obj.getUTCMinutes(),(2)),":",normalize(obj.getUTCSeconds(),(2)),".",normalize(obj.getUTCMilliseconds(),(3)),"-","00:00\""], 0));
} else {
if(cljs.core.regexp_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#\"",obj.source,"\""], 0));
} else {
if((function (){var G__23643 = obj;
if(G__23643){
var bit__18013__auto__ = (G__23643.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__18013__auto__) || (G__23643.cljs$core$IPrintWithWriter$)){
return true;
} else {
if((!G__23643.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__23643);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__23643);
}
})()){
return cljs.core._pr_writer(obj,writer,opts);
} else {
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));

}
}
}
}
}
}
}
}
}
}
}

}
}
});
/**
* Prefer this to pr-seq, because it makes the printing function
* configurable, allowing efficient implementations such as appending
* to a StringBuffer.
*/
cljs.core.pr_writer = (function pr_writer(obj,writer,opts){
var temp__4124__auto__ = new cljs.core.Keyword(null,"alt-impl","alt-impl",670969595).cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(temp__4124__auto__)){
var alt_impl = temp__4124__auto__;
var G__23651 = obj;
var G__23652 = writer;
var G__23653 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts,new cljs.core.Keyword(null,"fallback-impl","fallback-impl",-1501286995),cljs.core.pr_writer_impl);
return (alt_impl.cljs$core$IFn$_invoke$arity$3 ? alt_impl.cljs$core$IFn$_invoke$arity$3(G__23651,G__23652,G__23653) : alt_impl.call(null,G__23651,G__23652,G__23653));
} else {
return cljs.core.pr_writer_impl(obj,writer,opts);
}
});
cljs.core.pr_seq_writer = (function pr_seq_writer(objs,writer,opts){
cljs.core.pr_writer(cljs.core.first(objs),writer,opts);

var seq__23658 = cljs.core.seq(cljs.core.next(objs));
var chunk__23659 = null;
var count__23660 = (0);
var i__23661 = (0);
while(true){
if((i__23661 < count__23660)){
var obj = chunk__23659.cljs$core$IIndexed$_nth$arity$2(null,i__23661);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__23662 = seq__23658;
var G__23663 = chunk__23659;
var G__23664 = count__23660;
var G__23665 = (i__23661 + (1));
seq__23658 = G__23662;
chunk__23659 = G__23663;
count__23660 = G__23664;
i__23661 = G__23665;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__23658);
if(temp__4126__auto__){
var seq__23658__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__23658__$1)){
var c__18119__auto__ = cljs.core.chunk_first(seq__23658__$1);
var G__23666 = cljs.core.chunk_rest(seq__23658__$1);
var G__23667 = c__18119__auto__;
var G__23668 = cljs.core.count(c__18119__auto__);
var G__23669 = (0);
seq__23658 = G__23666;
chunk__23659 = G__23667;
count__23660 = G__23668;
i__23661 = G__23669;
continue;
} else {
var obj = cljs.core.first(seq__23658__$1);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__23670 = cljs.core.next(seq__23658__$1);
var G__23671 = null;
var G__23672 = (0);
var G__23673 = (0);
seq__23658 = G__23670;
chunk__23659 = G__23671;
count__23660 = G__23672;
i__23661 = G__23673;
continue;
}
} else {
return null;
}
}
break;
}
});
cljs.core.pr_sb_with_opts = (function pr_sb_with_opts(objs,opts){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
cljs.core.pr_seq_writer(objs,writer,opts);

writer.cljs$core$IWriter$_flush$arity$1(null);

return sb;
});
/**
* Prints a sequence of objects to a string, observing all the
* options given in opts
*/
cljs.core.pr_str_with_opts = (function pr_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "";
} else {
return [cljs.core.str(cljs.core.pr_sb_with_opts(objs,opts))].join('');
}
});
/**
* Same as pr-str-with-opts followed by (newline)
*/
cljs.core.prn_str_with_opts = (function prn_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "\n";
} else {
var sb = cljs.core.pr_sb_with_opts(objs,opts);
sb.append("\n");

return [cljs.core.str(sb)].join('');
}
});
/**
* Prints a sequence of objects using string-print, observing all
* the options given in opts
*/
cljs.core.pr_with_opts = (function pr_with_opts(objs,opts){
return cljs.core.string_print(cljs.core.pr_str_with_opts(objs,opts));
});
cljs.core.newline = (function newline(opts){
cljs.core.string_print("\n");

if(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939)))){
return cljs.core.flush();
} else {
return null;
}
});
/**
* pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter.
* @param {...*} var_args
*/
cljs.core.pr_str = (function() { 
var pr_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.pr_opts());
};
var pr_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__23674__i = 0, G__23674__a = new Array(arguments.length -  0);
while (G__23674__i < G__23674__a.length) {G__23674__a[G__23674__i] = arguments[G__23674__i + 0]; ++G__23674__i;}
  objs = new cljs.core.IndexedSeq(G__23674__a,0);
} 
return pr_str__delegate.call(this,objs);};
pr_str.cljs$lang$maxFixedArity = 0;
pr_str.cljs$lang$applyTo = (function (arglist__23675){
var objs = cljs.core.seq(arglist__23675);
return pr_str__delegate(objs);
});
pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
return pr_str;
})()
;
/**
* Same as pr-str followed by (newline)
* @param {...*} var_args
*/
cljs.core.prn_str = (function() { 
var prn_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.pr_opts());
};
var prn_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__23676__i = 0, G__23676__a = new Array(arguments.length -  0);
while (G__23676__i < G__23676__a.length) {G__23676__a[G__23676__i] = arguments[G__23676__i + 0]; ++G__23676__i;}
  objs = new cljs.core.IndexedSeq(G__23676__a,0);
} 
return prn_str__delegate.call(this,objs);};
prn_str.cljs$lang$maxFixedArity = 0;
prn_str.cljs$lang$applyTo = (function (arglist__23677){
var objs = cljs.core.seq(arglist__23677);
return prn_str__delegate(objs);
});
prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
return prn_str;
})()
;
/**
* Prints the object(s) using string-print.  Prints the
* object(s), separated by spaces if there is more than one.
* By default, pr and prn print in a way that objects can be
* read by the reader
* @param {...*} var_args
*/
cljs.core.pr = (function() { 
var pr__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.pr_opts());
};
var pr = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__23678__i = 0, G__23678__a = new Array(arguments.length -  0);
while (G__23678__i < G__23678__a.length) {G__23678__a[G__23678__i] = arguments[G__23678__i + 0]; ++G__23678__i;}
  objs = new cljs.core.IndexedSeq(G__23678__a,0);
} 
return pr__delegate.call(this,objs);};
pr.cljs$lang$maxFixedArity = 0;
pr.cljs$lang$applyTo = (function (arglist__23679){
var objs = cljs.core.seq(arglist__23679);
return pr__delegate(objs);
});
pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
return pr;
})()
;
/**
* Prints the object(s) using string-print.
* print and println produce output for human consumption.
* @param {...*} var_args
*/
cljs.core.print = (function() { 
var cljs_core_print__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var cljs_core_print = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__23680__i = 0, G__23680__a = new Array(arguments.length -  0);
while (G__23680__i < G__23680__a.length) {G__23680__a[G__23680__i] = arguments[G__23680__i + 0]; ++G__23680__i;}
  objs = new cljs.core.IndexedSeq(G__23680__a,0);
} 
return cljs_core_print__delegate.call(this,objs);};
cljs_core_print.cljs$lang$maxFixedArity = 0;
cljs_core_print.cljs$lang$applyTo = (function (arglist__23681){
var objs = cljs.core.seq(arglist__23681);
return cljs_core_print__delegate(objs);
});
cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
return cljs_core_print;
})()
;
/**
* print to a string, returning it
* @param {...*} var_args
*/
cljs.core.print_str = (function() { 
var print_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var print_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__23682__i = 0, G__23682__a = new Array(arguments.length -  0);
while (G__23682__i < G__23682__a.length) {G__23682__a[G__23682__i] = arguments[G__23682__i + 0]; ++G__23682__i;}
  objs = new cljs.core.IndexedSeq(G__23682__a,0);
} 
return print_str__delegate.call(this,objs);};
print_str.cljs$lang$maxFixedArity = 0;
print_str.cljs$lang$applyTo = (function (arglist__23683){
var objs = cljs.core.seq(arglist__23683);
return print_str__delegate(objs);
});
print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
return print_str;
})()
;
/**
* Same as print followed by (newline)
* @param {...*} var_args
*/
cljs.core.println = (function() { 
var println__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var println = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__23684__i = 0, G__23684__a = new Array(arguments.length -  0);
while (G__23684__i < G__23684__a.length) {G__23684__a[G__23684__i] = arguments[G__23684__i + 0]; ++G__23684__i;}
  objs = new cljs.core.IndexedSeq(G__23684__a,0);
} 
return println__delegate.call(this,objs);};
println.cljs$lang$maxFixedArity = 0;
println.cljs$lang$applyTo = (function (arglist__23685){
var objs = cljs.core.seq(arglist__23685);
return println__delegate(objs);
});
println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
return println;
})()
;
/**
* println to a string, returning it
* @param {...*} var_args
*/
cljs.core.println_str = (function() { 
var println_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var println_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__23686__i = 0, G__23686__a = new Array(arguments.length -  0);
while (G__23686__i < G__23686__a.length) {G__23686__a[G__23686__i] = arguments[G__23686__i + 0]; ++G__23686__i;}
  objs = new cljs.core.IndexedSeq(G__23686__a,0);
} 
return println_str__delegate.call(this,objs);};
println_str.cljs$lang$maxFixedArity = 0;
println_str.cljs$lang$applyTo = (function (arglist__23687){
var objs = cljs.core.seq(arglist__23687);
return println_str__delegate(objs);
});
println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
return println_str;
})()
;
/**
* Same as pr followed by (newline).
* @param {...*} var_args
*/
cljs.core.prn = (function() { 
var prn__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.pr_opts());

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var prn = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__23688__i = 0, G__23688__a = new Array(arguments.length -  0);
while (G__23688__i < G__23688__a.length) {G__23688__a[G__23688__i] = arguments[G__23688__i + 0]; ++G__23688__i;}
  objs = new cljs.core.IndexedSeq(G__23688__a,0);
} 
return prn__delegate.call(this,objs);};
prn.cljs$lang$maxFixedArity = 0;
prn.cljs$lang$applyTo = (function (arglist__23689){
var objs = cljs.core.seq(arglist__23689);
return prn__delegate(objs);
});
prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
return prn;
})()
;
cljs.core.print_map = (function print_map(m,print_one,writer,opts){
return cljs.core.pr_sequential_writer(writer,(function (e,w,opts__$1){
var G__23696_23702 = cljs.core.key(e);
var G__23697_23703 = w;
var G__23698_23704 = opts__$1;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__23696_23702,G__23697_23703,G__23698_23704) : print_one.call(null,G__23696_23702,G__23697_23703,G__23698_23704));

cljs.core._write(w," ");

var G__23699 = cljs.core.val(e);
var G__23700 = w;
var G__23701 = opts__$1;
return (print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__23699,G__23700,G__23701) : print_one.call(null,G__23699,G__23700,G__23701));
}),"{",", ","}",opts,cljs.core.seq(m));
});
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Volatile: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#'");

return cljs.core.pr_writer(a__$1.sym,writer,opts);
});

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Atom: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core._write(writer,"()");
});

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#queue ["," ","]",opts,cljs.core.seq(coll__$1));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;

cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;

cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_keywords(x__$1,y);
});

cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;

cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_symbols(x__$1,y);
});
/**
* Atomically sets the metadata for a namespace/var/ref/agent/atom to be:
* 
* (apply f its-current-meta args)
* 
* f must be free of side-effects
* @param {...*} var_args
*/
cljs.core.alter_meta_BANG_ = (function() { 
var alter_meta_BANG___delegate = function (iref,f,args){
return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,iref.meta,args);
};
var alter_meta_BANG_ = function (iref,f,var_args){
var args = null;
if (arguments.length > 2) {
var G__23705__i = 0, G__23705__a = new Array(arguments.length -  2);
while (G__23705__i < G__23705__a.length) {G__23705__a[G__23705__i] = arguments[G__23705__i + 2]; ++G__23705__i;}
  args = new cljs.core.IndexedSeq(G__23705__a,0);
} 
return alter_meta_BANG___delegate.call(this,iref,f,args);};
alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
alter_meta_BANG_.cljs$lang$applyTo = (function (arglist__23706){
var iref = cljs.core.first(arglist__23706);
arglist__23706 = cljs.core.next(arglist__23706);
var f = cljs.core.first(arglist__23706);
var args = cljs.core.rest(arglist__23706);
return alter_meta_BANG___delegate(iref,f,args);
});
alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
return alter_meta_BANG_;
})()
;
/**
* Atomically resets the metadata for an atom
*/
cljs.core.reset_meta_BANG_ = (function reset_meta_BANG_(iref,m){
return iref.meta = m;
});
/**
* Alpha - subject to change.
* 
* Adds a watch function to an atom reference. The watch fn must be a
* fn of 4 args: a key, the reference, its old-state, its
* new-state. Whenever the reference's state might have been changed,
* any registered watches will have their functions called. The watch
* fn will be called synchronously. Note that an atom's state
* may have changed again prior to the fn call, so use old/new-state
* rather than derefing the reference. Keys must be unique per
* reference, and can be used to remove the watch with remove-watch,
* but are otherwise considered opaque by the watch mechanism.  Bear in
* mind that regardless of the result or action of the watch fns the
* atom's value will change.  Example:
* 
* (def a (atom 0))
* (add-watch a :inc (fn [k r o n] (assert (== 0 n))))
* (swap! a inc)
* ;; Assertion Error
* (deref a)
* ;=> 1
*/
cljs.core.add_watch = (function add_watch(iref,key,f){
cljs.core._add_watch(iref,key,f);

return iref;
});
/**
* Alpha - subject to change.
* 
* Removes a watch (set by add-watch) from a reference
*/
cljs.core.remove_watch = (function remove_watch(iref,key){
cljs.core._remove_watch(iref,key);

return iref;
});
cljs.core.gensym_counter = null;
/**
* Returns a new symbol with a unique name. If a prefix string is
* supplied, the name is prefix# where # is some unique number. If
* prefix is not supplied, the prefix is 'G__'.
*/
cljs.core.gensym = (function() {
var gensym = null;
var gensym__0 = (function (){
return gensym.cljs$core$IFn$_invoke$arity$1("G__");
});
var gensym__1 = (function (prefix_string){
if((cljs.core.gensym_counter == null)){
cljs.core.gensym_counter = (function (){var G__23709 = (0);
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__23709) : cljs.core.atom.call(null,G__23709));
})();
} else {
}

return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string),cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter,cljs.core.inc))].join(''));
});
gensym = function(prefix_string){
switch(arguments.length){
case 0:
return gensym__0.call(this);
case 1:
return gensym__1.call(this,prefix_string);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
return gensym;
})()
;
cljs.core.fixture1 = (1);
cljs.core.fixture2 = (2);

/**
* @constructor
*/
cljs.core.Delay = (function (f,value){
this.f = f;
this.value = value;
this.cljs$lang$protocol_mask$partition1$ = 1;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = (function (d){
var self__ = this;
var d__$1 = this;
return cljs.core.not(self__.f);
});

cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(cljs.core.truth_(self__.f)){
self__.value = (function (){return (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null));
})();

self__.f = null;
} else {
}

return self__.value;
});

cljs.core.Delay.cljs$lang$type = true;

cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";

cljs.core.Delay.cljs$lang$ctorPrWriter = (function (this__17919__auto__,writer__17920__auto__,opt__17921__auto__){
return cljs.core._write(writer__17920__auto__,"cljs.core/Delay");
});

cljs.core.__GT_Delay = (function __GT_Delay(f,value){
return (new cljs.core.Delay(f,value));
});

/**
* returns true if x is a Delay created with delay
*/
cljs.core.delay_QMARK_ = (function delay_QMARK_(x){
return (x instanceof cljs.core.Delay);
});
/**
* If x is a Delay, returns the (possibly cached) value of its expression, else returns x
*/
cljs.core.force = (function force(x){
if(cljs.core.delay_QMARK_(x)){
var G__23711 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23711) : cljs.core.deref.call(null,G__23711));
} else {
return x;
}
});
/**
* Returns true if a value has been produced for a promise, delay, future or lazy sequence.
*/
cljs.core.realized_QMARK_ = (function realized_QMARK_(d){
return cljs.core._realized_QMARK_(d);
});
cljs.core.preserving_reduced = (function preserving_reduced(rf){
return (function (p1__23712_SHARP_,p2__23713_SHARP_){
var ret = (function (){var G__23716 = p1__23712_SHARP_;
var G__23717 = p2__23713_SHARP_;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__23716,G__23717) : rf.call(null,G__23716,G__23717));
})();
if(cljs.core.reduced_QMARK_(ret)){
return cljs.core.reduced(ret);
} else {
return ret;
}
});
});
/**
* A transducer which concatenates the contents of each input, which must be a
* collection, into the reduction.
*/
cljs.core.cat = (function cat(rf){
var rf1 = cljs.core.preserving_reduced(rf);
return ((function (rf1){
return (function() {
var G__23720 = null;
var G__23720__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__23720__1 = (function (result){
var G__23719 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__23719) : rf.call(null,G__23719));
});
var G__23720__2 = (function (result,input){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1,result,input);
});
G__23720 = function(result,input){
switch(arguments.length){
case 0:
return G__23720__0.call(this);
case 1:
return G__23720__1.call(this,result);
case 2:
return G__23720__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23720.cljs$core$IFn$_invoke$arity$0 = G__23720__0;
G__23720.cljs$core$IFn$_invoke$arity$1 = G__23720__1;
G__23720.cljs$core$IFn$_invoke$arity$2 = G__23720__2;
return G__23720;
})()
;})(rf1))
});
/**
* Returns a lazy sequence removing consecutive duplicates in coll.
* Returns a transducer when no collection is provided.
*/
cljs.core.dedupe = (function() {
var dedupe = null;
var dedupe__0 = (function (){
return (function (rf){
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (pa){
return (function() {
var G__23729 = null;
var G__23729__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__23729__1 = (function (result){
var G__23725 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__23725) : rf.call(null,G__23725));
});
var G__23729__2 = (function (result,input){
var prior = (function (){var G__23726 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23726) : cljs.core.deref.call(null,G__23726));
})();
cljs.core.vreset_BANG_(pa,input);

if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior,input)){
return result;
} else {
var G__23727 = result;
var G__23728 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__23727,G__23728) : rf.call(null,G__23727,G__23728));
}
});
G__23729 = function(result,input){
switch(arguments.length){
case 0:
return G__23729__0.call(this);
case 1:
return G__23729__1.call(this,result);
case 2:
return G__23729__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23729.cljs$core$IFn$_invoke$arity$0 = G__23729__0;
G__23729.cljs$core$IFn$_invoke$arity$1 = G__23729__1;
G__23729.cljs$core$IFn$_invoke$arity$2 = G__23729__2;
return G__23729;
})()
;})(pa))
});
});
var dedupe__1 = (function (coll){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(dedupe.cljs$core$IFn$_invoke$arity$0(),coll);
});
dedupe = function(coll){
switch(arguments.length){
case 0:
return dedupe__0.call(this);
case 1:
return dedupe__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
return dedupe;
})()
;
/**
* Returns items from coll with random probability of prob (0.0 -
* 1.0).  Returns a transducer when no collection is provided.
*/
cljs.core.random_sample = (function() {
var random_sample = null;
var random_sample__1 = (function (prob){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}));
});
var random_sample__2 = (function (prob,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}),coll);
});
random_sample = function(prob,coll){
switch(arguments.length){
case 1:
return random_sample__1.call(this,prob);
case 2:
return random_sample__2.call(this,prob,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
return random_sample;
})()
;

/**
* @constructor
*/
cljs.core.Eduction = (function (xform,coll){
this.xform = xform;
this.coll = coll;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2173173760;
})
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll__$1,writer,opts){
var self__ = this;
var coll__$2 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$2);
});

cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (_,f,init){
var self__ = this;
var ___$1 = this;
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform,f,init,self__.coll);
});

cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform,self__.coll));
});

cljs.core.Eduction.cljs$lang$type = true;

cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";

cljs.core.Eduction.cljs$lang$ctorPrWriter = (function (this__17919__auto__,writer__17920__auto__,opt__17921__auto__){
return cljs.core._write(writer__17920__auto__,"cljs.core/Eduction");
});

cljs.core.__GT_Eduction = (function __GT_Eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});

(cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18310__auto__ = this;
return cljs.core.es6_iterator(this__18310__auto__);
}));
/**
* Returns a reducible/iterable/seqable application of
* the transducer to the items in coll. Note that these applications
* will be performed every time iterator/seq/reduce is called.
*/
cljs.core.eduction = (function eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});
/**
* Runs the supplied procedure (via reduce), for purposes of side
* effects, on successive items in the collection. Returns nil
*/
cljs.core.run_BANG_ = (function run_BANG_(proc,coll){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__23731_SHARP_,p2__23730_SHARP_){
var G__23733 = p2__23730_SHARP_;
return (proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__23733) : proc.call(null,G__23733));
}),null,coll);
});

cljs.core.IEncodeJS = (function (){var obj23735 = {};
return obj23735;
})();

cljs.core._clj__GT_js = (function _clj__GT_js(x){
if((function (){var and__17320__auto__ = x;
if(and__17320__auto__){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
} else {
return and__17320__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
} else {
var x__17976__auto__ = (((x == null))?null:x);
return (function (){var or__17332__auto__ = (cljs.core._clj__GT_js[(function (){var G__23739 = x__17976__auto__;
return goog.typeOf(G__23739);
})()]);
if(or__17332__auto__){
return or__17332__auto__;
} else {
var or__17332__auto____$1 = (cljs.core._clj__GT_js["_"]);
if(or__17332__auto____$1){
return or__17332__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-clj->js",x);
}
}
})().call(null,x);
}
});

cljs.core._key__GT_js = (function _key__GT_js(x){
if((function (){var and__17320__auto__ = x;
if(and__17320__auto__){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
} else {
return and__17320__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
} else {
var x__17976__auto__ = (((x == null))?null:x);
return (function (){var or__17332__auto__ = (cljs.core._key__GT_js[(function (){var G__23743 = x__17976__auto__;
return goog.typeOf(G__23743);
})()]);
if(or__17332__auto__){
return or__17332__auto__;
} else {
var or__17332__auto____$1 = (cljs.core._key__GT_js["_"]);
if(or__17332__auto____$1){
return or__17332__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-key->js",x);
}
}
})().call(null,x);
}
});

cljs.core.key__GT_js = (function key__GT_js(k){
if((function (){var G__23746 = k;
if(G__23746){
var bit__18013__auto__ = null;
if(cljs.core.truth_((function (){var or__17332__auto__ = bit__18013__auto__;
if(cljs.core.truth_(or__17332__auto__)){
return or__17332__auto__;
} else {
return G__23746.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__23746.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__23746);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__23746);
}
})()){
return cljs.core._clj__GT_js(k);
} else {
if((typeof k === 'string') || (typeof k === 'number') || ((k instanceof cljs.core.Keyword)) || ((k instanceof cljs.core.Symbol))){
var G__23747 = k;
return (cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__23747) : cljs.core.clj__GT_js.call(null,G__23747));
} else {
return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
}
}
});
/**
* Recursively transforms ClojureScript values to JavaScript.
* sets/vectors/lists become Arrays, Keywords and Symbol become Strings,
* Maps become Objects. Arbitrary keys are encoded to by key->js.
*/
cljs.core.clj__GT_js = (function clj__GT_js(x){
if((x == null)){
return null;
} else {
if((function (){var G__23763 = x;
if(G__23763){
var bit__18013__auto__ = null;
if(cljs.core.truth_((function (){var or__17332__auto__ = bit__18013__auto__;
if(cljs.core.truth_(or__17332__auto__)){
return or__17332__auto__;
} else {
return G__23763.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__23763.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__23763);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__23763);
}
})()){
return cljs.core._clj__GT_js(x);
} else {
if((x instanceof cljs.core.Keyword)){
return cljs.core.name(x);
} else {
if((x instanceof cljs.core.Symbol)){
return [cljs.core.str(x)].join('');
} else {
if(cljs.core.map_QMARK_(x)){
var m = (function (){var obj23765 = {};
return obj23765;
})();
var seq__23766_23776 = cljs.core.seq(x);
var chunk__23767_23777 = null;
var count__23768_23778 = (0);
var i__23769_23779 = (0);
while(true){
if((i__23769_23779 < count__23768_23778)){
var vec__23770_23780 = chunk__23767_23777.cljs$core$IIndexed$_nth$arity$2(null,i__23769_23779);
var k_23781 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23770_23780,(0),null);
var v_23782 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23770_23780,(1),null);
(m[cljs.core.key__GT_js(k_23781)] = clj__GT_js(v_23782));

var G__23783 = seq__23766_23776;
var G__23784 = chunk__23767_23777;
var G__23785 = count__23768_23778;
var G__23786 = (i__23769_23779 + (1));
seq__23766_23776 = G__23783;
chunk__23767_23777 = G__23784;
count__23768_23778 = G__23785;
i__23769_23779 = G__23786;
continue;
} else {
var temp__4126__auto___23787 = cljs.core.seq(seq__23766_23776);
if(temp__4126__auto___23787){
var seq__23766_23788__$1 = temp__4126__auto___23787;
if(cljs.core.chunked_seq_QMARK_(seq__23766_23788__$1)){
var c__18119__auto___23789 = cljs.core.chunk_first(seq__23766_23788__$1);
var G__23790 = cljs.core.chunk_rest(seq__23766_23788__$1);
var G__23791 = c__18119__auto___23789;
var G__23792 = cljs.core.count(c__18119__auto___23789);
var G__23793 = (0);
seq__23766_23776 = G__23790;
chunk__23767_23777 = G__23791;
count__23768_23778 = G__23792;
i__23769_23779 = G__23793;
continue;
} else {
var vec__23771_23794 = cljs.core.first(seq__23766_23788__$1);
var k_23795 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23771_23794,(0),null);
var v_23796 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23771_23794,(1),null);
(m[cljs.core.key__GT_js(k_23795)] = clj__GT_js(v_23796));

var G__23797 = cljs.core.next(seq__23766_23788__$1);
var G__23798 = null;
var G__23799 = (0);
var G__23800 = (0);
seq__23766_23776 = G__23797;
chunk__23767_23777 = G__23798;
count__23768_23778 = G__23799;
i__23769_23779 = G__23800;
continue;
}
} else {
}
}
break;
}

return m;
} else {
if(cljs.core.coll_QMARK_(x)){
var arr = [];
var seq__23772_23801 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clj__GT_js,x));
var chunk__23773_23802 = null;
var count__23774_23803 = (0);
var i__23775_23804 = (0);
while(true){
if((i__23775_23804 < count__23774_23803)){
var x_23805__$1 = chunk__23773_23802.cljs$core$IIndexed$_nth$arity$2(null,i__23775_23804);
arr.push(x_23805__$1);

var G__23806 = seq__23772_23801;
var G__23807 = chunk__23773_23802;
var G__23808 = count__23774_23803;
var G__23809 = (i__23775_23804 + (1));
seq__23772_23801 = G__23806;
chunk__23773_23802 = G__23807;
count__23774_23803 = G__23808;
i__23775_23804 = G__23809;
continue;
} else {
var temp__4126__auto___23810 = cljs.core.seq(seq__23772_23801);
if(temp__4126__auto___23810){
var seq__23772_23811__$1 = temp__4126__auto___23810;
if(cljs.core.chunked_seq_QMARK_(seq__23772_23811__$1)){
var c__18119__auto___23812 = cljs.core.chunk_first(seq__23772_23811__$1);
var G__23813 = cljs.core.chunk_rest(seq__23772_23811__$1);
var G__23814 = c__18119__auto___23812;
var G__23815 = cljs.core.count(c__18119__auto___23812);
var G__23816 = (0);
seq__23772_23801 = G__23813;
chunk__23773_23802 = G__23814;
count__23774_23803 = G__23815;
i__23775_23804 = G__23816;
continue;
} else {
var x_23817__$1 = cljs.core.first(seq__23772_23811__$1);
arr.push(x_23817__$1);

var G__23818 = cljs.core.next(seq__23772_23811__$1);
var G__23819 = null;
var G__23820 = (0);
var G__23821 = (0);
seq__23772_23801 = G__23818;
chunk__23773_23802 = G__23819;
count__23774_23803 = G__23820;
i__23775_23804 = G__23821;
continue;
}
} else {
}
}
break;
}

return arr;
} else {
return x;

}
}
}
}
}
}
});

cljs.core.IEncodeClojure = (function (){var obj23823 = {};
return obj23823;
})();

cljs.core._js__GT_clj = (function _js__GT_clj(x,options){
if((function (){var and__17320__auto__ = x;
if(and__17320__auto__){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
} else {
return and__17320__auto__;
}
})()){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x,options);
} else {
var x__17976__auto__ = (((x == null))?null:x);
return (function (){var or__17332__auto__ = (cljs.core._js__GT_clj[(function (){var G__23827 = x__17976__auto__;
return goog.typeOf(G__23827);
})()]);
if(or__17332__auto__){
return or__17332__auto__;
} else {
var or__17332__auto____$1 = (cljs.core._js__GT_clj["_"]);
if(or__17332__auto____$1){
return or__17332__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeClojure.-js->clj",x);
}
}
})().call(null,x,options);
}
});

/**
* Recursively transforms JavaScript arrays into ClojureScript
* vectors, and JavaScript objects into ClojureScript maps.  With
* option ':keywordize-keys true' will convert object fields from
* strings to keywords.
* @param {...*} var_args
*/
cljs.core.js__GT_clj = (function() {
var js__GT_clj = null;
var js__GT_clj__1 = (function (x){
return js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252),false], null)], 0));
});
var js__GT_clj__2 = (function() { 
var G__23884__delegate = function (x,opts){
var map__23857 = opts;
var map__23857__$1 = ((cljs.core.seq_QMARK_(map__23857))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__23857):map__23857);
var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23857__$1,new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252));
var keyfn = (cljs.core.truth_(keywordize_keys)?cljs.core.keyword:cljs.core.str);
var f = ((function (map__23857,map__23857__$1,keywordize_keys,keyfn){
return (function thisfn(x__$1){
if((function (){var G__23873 = x__$1;
if(G__23873){
var bit__18013__auto__ = null;
if(cljs.core.truth_((function (){var or__17332__auto__ = bit__18013__auto__;
if(cljs.core.truth_(or__17332__auto__)){
return or__17332__auto__;
} else {
return G__23873.cljs$core$IEncodeClojure$;
}
})())){
return true;
} else {
if((!G__23873.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__23873);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__23873);
}
})()){
return cljs.core._js__GT_clj(x__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,opts));
} else {
if(cljs.core.seq_QMARK_(x__$1)){
return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(cljs.core.coll_QMARK_(x__$1)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(x__$1 instanceof Array){
return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if((cljs.core.type(x__$1) === Object)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__18088__auto__ = ((function (map__23857,map__23857__$1,keywordize_keys,keyfn){
return (function iter__23874(s__23875){
return (new cljs.core.LazySeq(null,((function (map__23857,map__23857__$1,keywordize_keys,keyfn){
return (function (){
var s__23875__$1 = s__23875;
while(true){
var temp__4126__auto__ = cljs.core.seq(s__23875__$1);
if(temp__4126__auto__){
var s__23875__$2 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s__23875__$2)){
var c__18086__auto__ = cljs.core.chunk_first(s__23875__$2);
var size__18087__auto__ = cljs.core.count(c__18086__auto__);
var b__23877 = cljs.core.chunk_buffer(size__18087__auto__);
if((function (){var i__23876 = (0);
while(true){
if((i__23876 < size__18087__auto__)){
var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__18086__auto__,i__23876);
cljs.core.chunk_append(b__23877,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__23882 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__23882) : keyfn.call(null,G__23882));
})(),thisfn((x__$1[k]))], null));

var G__23885 = (i__23876 + (1));
i__23876 = G__23885;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons(cljs.core.chunk(b__23877),iter__23874(cljs.core.chunk_rest(s__23875__$2)));
} else {
return cljs.core.chunk_cons(cljs.core.chunk(b__23877),null);
}
} else {
var k = cljs.core.first(s__23875__$2);
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__23883 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__23883) : keyfn.call(null,G__23883));
})(),thisfn((x__$1[k]))], null),iter__23874(cljs.core.rest(s__23875__$2)));
}
} else {
return null;
}
break;
}
});})(map__23857,map__23857__$1,keywordize_keys,keyfn))
,null,null));
});})(map__23857,map__23857__$1,keywordize_keys,keyfn))
;
return iter__18088__auto__(cljs.core.js_keys(x__$1));
})());
} else {
return x__$1;

}
}
}
}
}
});})(map__23857,map__23857__$1,keywordize_keys,keyfn))
;
return f(x);
};
var G__23884 = function (x,var_args){
var opts = null;
if (arguments.length > 1) {
var G__23886__i = 0, G__23886__a = new Array(arguments.length -  1);
while (G__23886__i < G__23886__a.length) {G__23886__a[G__23886__i] = arguments[G__23886__i + 1]; ++G__23886__i;}
  opts = new cljs.core.IndexedSeq(G__23886__a,0);
} 
return G__23884__delegate.call(this,x,opts);};
G__23884.cljs$lang$maxFixedArity = 1;
G__23884.cljs$lang$applyTo = (function (arglist__23887){
var x = cljs.core.first(arglist__23887);
var opts = cljs.core.rest(arglist__23887);
return G__23884__delegate(x,opts);
});
G__23884.cljs$core$IFn$_invoke$arity$variadic = G__23884__delegate;
return G__23884;
})()
;
js__GT_clj = function(x,var_args){
var opts = var_args;
switch(arguments.length){
case 1:
return js__GT_clj__1.call(this,x);
default:
var G__23888 = null;
if (arguments.length > 1) {
var G__23889__i = 0, G__23889__a = new Array(arguments.length -  1);
while (G__23889__i < G__23889__a.length) {G__23889__a[G__23889__i] = arguments[G__23889__i + 1]; ++G__23889__i;}
G__23888 = new cljs.core.IndexedSeq(G__23889__a,0);
}
return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__23888);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js__GT_clj.cljs$lang$maxFixedArity = 1;
js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
return js__GT_clj;
})()
;
/**
* Returns a memoized version of a referentially transparent function. The
* memoized version of the function keeps a cache of the mapping from arguments
* to results and, when calls with the same arguments are repeated often, has
* higher performance at the expense of higher memory use.
*/
cljs.core.memoize = (function memoize(f){
var mem = (function (){var G__23892 = cljs.core.PersistentArrayMap.EMPTY;
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__23892) : cljs.core.atom.call(null,G__23892));
})();
return ((function (mem){
return (function() { 
var G__23894__delegate = function (args){
var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3((function (){var G__23893 = mem;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23893) : cljs.core.deref.call(null,G__23893));
})(),args,cljs.core.lookup_sentinel);
if((v === cljs.core.lookup_sentinel)){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem,cljs.core.assoc,args,ret);

return ret;
} else {
return v;
}
};
var G__23894 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__23895__i = 0, G__23895__a = new Array(arguments.length -  0);
while (G__23895__i < G__23895__a.length) {G__23895__a[G__23895__i] = arguments[G__23895__i + 0]; ++G__23895__i;}
  args = new cljs.core.IndexedSeq(G__23895__a,0);
} 
return G__23894__delegate.call(this,args);};
G__23894.cljs$lang$maxFixedArity = 0;
G__23894.cljs$lang$applyTo = (function (arglist__23896){
var args = cljs.core.seq(arglist__23896);
return G__23894__delegate(args);
});
G__23894.cljs$core$IFn$_invoke$arity$variadic = G__23894__delegate;
return G__23894;
})()
;
;})(mem))
});
/**
* trampoline can be used to convert algorithms requiring mutual
* recursion without stack consumption. Calls f with supplied args, if
* any. If f returns a fn, calls that fn with no arguments, and
* continues to repeat, until the return value is not a fn, then
* returns that non-fn value. Note that if you want to return a fn as a
* final value, you must wrap it in some data structure and unpack it
* after trampoline returns.
* @param {...*} var_args
*/
cljs.core.trampoline = (function() {
var trampoline = null;
var trampoline__1 = (function (f){
while(true){
var ret = (function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})();
if(cljs.core.fn_QMARK_(ret)){
var G__23898 = ret;
f = G__23898;
continue;
} else {
return ret;
}
break;
}
});
var trampoline__2 = (function() { 
var G__23899__delegate = function (f,args){
return trampoline.cljs$core$IFn$_invoke$arity$1((function (){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
}));
};
var G__23899 = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__23900__i = 0, G__23900__a = new Array(arguments.length -  1);
while (G__23900__i < G__23900__a.length) {G__23900__a[G__23900__i] = arguments[G__23900__i + 1]; ++G__23900__i;}
  args = new cljs.core.IndexedSeq(G__23900__a,0);
} 
return G__23899__delegate.call(this,f,args);};
G__23899.cljs$lang$maxFixedArity = 1;
G__23899.cljs$lang$applyTo = (function (arglist__23901){
var f = cljs.core.first(arglist__23901);
var args = cljs.core.rest(arglist__23901);
return G__23899__delegate(f,args);
});
G__23899.cljs$core$IFn$_invoke$arity$variadic = G__23899__delegate;
return G__23899;
})()
;
trampoline = function(f,var_args){
var args = var_args;
switch(arguments.length){
case 1:
return trampoline__1.call(this,f);
default:
var G__23902 = null;
if (arguments.length > 1) {
var G__23903__i = 0, G__23903__a = new Array(arguments.length -  1);
while (G__23903__i < G__23903__a.length) {G__23903__a[G__23903__i] = arguments[G__23903__i + 1]; ++G__23903__i;}
G__23902 = new cljs.core.IndexedSeq(G__23903__a,0);
}
return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__23902);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
trampoline.cljs$lang$maxFixedArity = 1;
trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
return trampoline;
})()
;
/**
* Returns a random floating point number between 0 (inclusive) and
* n (default 1) (exclusive).
*/
cljs.core.rand = (function() {
var rand = null;
var rand__0 = (function (){
return rand.cljs$core$IFn$_invoke$arity$1((1));
});
var rand__1 = (function (n){
return ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
});
rand = function(n){
switch(arguments.length){
case 0:
return rand__0.call(this);
case 1:
return rand__1.call(this,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
return rand;
})()
;
/**
* Returns a random integer between 0 (inclusive) and n (exclusive).
*/
cljs.core.rand_int = (function rand_int(n){
var G__23906 = ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__23906) : Math.floor.call(null,G__23906));
});
/**
* Return a random element of the (sequential) collection. Will have
* the same performance characteristics as nth for the given
* collection.
*/
cljs.core.rand_nth = (function rand_nth(coll){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,cljs.core.rand_int(cljs.core.count(coll)));
});
/**
* Returns a map of the elements of coll keyed by the result of
* f on each element. The value at each key will be a vector of the
* corresponding elements, in the order they appeared in coll.
*/
cljs.core.group_by = (function group_by(f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,x){
var k = (function (){var G__23908 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23908) : f.call(null,G__23908));
})();
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.PersistentVector.EMPTY),x));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Creates a hierarchy object for use with derive, isa? etc.
*/
cljs.core.make_hierarchy = (function make_hierarchy(){
return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"descendants","descendants",1824886031),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),cljs.core.PersistentArrayMap.EMPTY], null);
});
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = (function get_global_hierarchy(){
if((cljs.core._global_hierarchy == null)){
cljs.core._global_hierarchy = (function (){var G__23910 = cljs.core.make_hierarchy();
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__23910) : cljs.core.atom.call(null,G__23910));
})();
} else {
}

return cljs.core._global_hierarchy;
});
/**
* @param {...*} var_args
*/
cljs.core.swap_global_hierarchy_BANG_ = (function() { 
var swap_global_hierarchy_BANG___delegate = function (f,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_,cljs.core.get_global_hierarchy(),f,args);
};
var swap_global_hierarchy_BANG_ = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__23911__i = 0, G__23911__a = new Array(arguments.length -  1);
while (G__23911__i < G__23911__a.length) {G__23911__a[G__23911__i] = arguments[G__23911__i + 1]; ++G__23911__i;}
  args = new cljs.core.IndexedSeq(G__23911__a,0);
} 
return swap_global_hierarchy_BANG___delegate.call(this,f,args);};
swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
swap_global_hierarchy_BANG_.cljs$lang$applyTo = (function (arglist__23912){
var f = cljs.core.first(arglist__23912);
var args = cljs.core.rest(arglist__23912);
return swap_global_hierarchy_BANG___delegate(f,args);
});
swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
return swap_global_hierarchy_BANG_;
})()
;
/**
* Returns true if (= child parent), or child is directly or indirectly derived from
* parent, either via a JavaScript type inheritance relationship or a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy
*/
cljs.core.isa_QMARK_ = (function() {
var isa_QMARK_ = null;
var isa_QMARK___2 = (function (child,parent){
return isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__23977 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23977) : cljs.core.deref.call(null,G__23977));
})(),child,parent);
});
var isa_QMARK___3 = (function (h,child,parent){
var or__17332__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child,parent);
if(or__17332__auto__){
return or__17332__auto__;
} else {
var or__17332__auto____$1 = cljs.core.contains_QMARK_(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h).call(null,child),parent);
if(or__17332__auto____$1){
return or__17332__auto____$1;
} else {
var and__17320__auto__ = cljs.core.vector_QMARK_(parent);
if(and__17320__auto__){
var and__17320__auto____$1 = cljs.core.vector_QMARK_(child);
if(and__17320__auto____$1){
var and__17320__auto____$2 = (cljs.core.count(parent) === cljs.core.count(child));
if(and__17320__auto____$2){
var ret = true;
var i = (0);
while(true){
if((!(ret)) || ((i === cljs.core.count(parent)))){
return ret;
} else {
var G__24002 = isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h,(function (){var G__24000 = i;
return (child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__24000) : child.call(null,G__24000));
})(),(function (){var G__24001 = i;
return (parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__24001) : parent.call(null,G__24001));
})());
var G__24003 = (i + (1));
ret = G__24002;
i = G__24003;
continue;
}
break;
}
} else {
return and__17320__auto____$2;
}
} else {
return and__17320__auto____$1;
}
} else {
return and__17320__auto__;
}
}
}
});
isa_QMARK_ = function(h,child,parent){
switch(arguments.length){
case 2:
return isa_QMARK___2.call(this,h,child);
case 3:
return isa_QMARK___3.call(this,h,child,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
return isa_QMARK_;
})()
;
/**
* Returns the immediate parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.parents = (function() {
var parents = null;
var parents__1 = (function (tag){
return parents.cljs$core$IFn$_invoke$arity$2((function (){var G__24007 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24007) : cljs.core.deref.call(null,G__24007));
})(),tag);
});
var parents__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag));
});
parents = function(h,tag){
switch(arguments.length){
case 1:
return parents__1.call(this,h);
case 2:
return parents__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
return parents;
})()
;
/**
* Returns the immediate and indirect parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.ancestors = (function() {
var ancestors = null;
var ancestors__1 = (function (tag){
return ancestors.cljs$core$IFn$_invoke$arity$2((function (){var G__24011 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24011) : cljs.core.deref.call(null,G__24011));
})(),tag);
});
var ancestors__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag));
});
ancestors = function(h,tag){
switch(arguments.length){
case 1:
return ancestors__1.call(this,h);
case 2:
return ancestors__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
return ancestors;
})()
;
/**
* Returns the immediate and indirect children of tag, through a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy. Note: does not work on JavaScript type inheritance
* relationships.
*/
cljs.core.descendants = (function() {
var descendants = null;
var descendants__1 = (function (tag){
return descendants.cljs$core$IFn$_invoke$arity$2((function (){var G__24015 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24015) : cljs.core.deref.call(null,G__24015));
})(),tag);
});
var descendants__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),tag));
});
descendants = function(h,tag){
switch(arguments.length){
case 1:
return descendants__1.call(this,h);
case 2:
return descendants__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
return descendants;
})()
;
/**
* Establishes a parent/child relationship between parent and
* tag. Parent must be a namespace-qualified symbol or keyword and
* child can be either a namespace-qualified symbol or keyword or a
* class. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.derive = (function() {
var derive = null;
var derive__2 = (function (tag,parent){
if(cljs.core.truth_(cljs.core.namespace(parent))){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"namespace","namespace",1263021155,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(derive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var derive__3 = (function (h,tag,parent){
if(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag,parent)){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"not=","not=",1466536204,null),new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

var tp = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var td = new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h);
var ta = new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h);
var tf = ((function (tp,td,ta){
return (function (m,source,sources,target,targets){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (tp,td,ta){
return (function (ret,k){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets,k,cljs.core.PersistentHashSet.EMPTY),cljs.core.cons(target,(function (){var G__24024 = target;
return (targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__24024) : targets.call(null,G__24024));
})())));
});})(tp,td,ta))
,m,cljs.core.cons(source,(function (){var G__24025 = source;
return (sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__24025) : sources.call(null,G__24025));
})()));
});})(tp,td,ta))
;
var or__17332__auto__ = ((cljs.core.contains_QMARK_((function (){var G__24029 = tag;
return (tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__24029) : tp.call(null,G__24029));
})(),parent))?null:(function (){
if(cljs.core.contains_QMARK_((function (){var G__24030 = tag;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__24030) : ta.call(null,G__24030));
})(),parent)){
throw (new Error([cljs.core.str(tag),cljs.core.str("already has"),cljs.core.str(parent),cljs.core.str("as ancestor")].join('')));
} else {
}

if(cljs.core.contains_QMARK_((function (){var G__24031 = parent;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__24031) : ta.call(null,G__24031));
})(),tag)){
throw (new Error([cljs.core.str("Cyclic derivation:"),cljs.core.str(parent),cljs.core.str("has"),cljs.core.str(tag),cljs.core.str("as ancestor")].join('')));
} else {
}

return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp,tag,cljs.core.PersistentHashSet.EMPTY),parent)),new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),tf(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag,td,parent,ta),new cljs.core.Keyword(null,"descendants","descendants",1824886031),tf(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),parent,ta,tag,td)], null);
})()
);
if(cljs.core.truth_(or__17332__auto__)){
return or__17332__auto__;
} else {
return h;
}
});
derive = function(h,tag,parent){
switch(arguments.length){
case 2:
return derive__2.call(this,h,tag);
case 3:
return derive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
return derive;
})()
;
/**
* Removes a parent/child relationship between parent and
* tag. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.underive = (function() {
var underive = null;
var underive__2 = (function (tag,parent){
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(underive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var underive__3 = (function (h,tag,parent){
var parentMap = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var childsParents = (cljs.core.truth_((function (){var G__24038 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__24038) : parentMap.call(null,G__24038));
})())?cljs.core.disj.cljs$core$IFn$_invoke$arity$2((function (){var G__24039 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__24039) : parentMap.call(null,G__24039));
})(),parent):cljs.core.PersistentHashSet.EMPTY);
var newParents = (cljs.core.truth_(cljs.core.not_empty(childsParents))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap,tag,childsParents):cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap,tag));
var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (parentMap,childsParents,newParents){
return (function (p1__24032_SHARP_){
return cljs.core.cons(cljs.core.first(p1__24032_SHARP_),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__24032_SHARP_),cljs.core.second(p1__24032_SHARP_)));
});})(parentMap,childsParents,newParents))
,cljs.core.seq(newParents)));
if(cljs.core.contains_QMARK_((function (){var G__24040 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__24040) : parentMap.call(null,G__24040));
})(),parent)){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (parentMap,childsParents,newParents,deriv_seq){
return (function (p1__24033_SHARP_,p2__24034_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive,p1__24033_SHARP_,p2__24034_SHARP_);
});})(parentMap,childsParents,newParents,deriv_seq))
,cljs.core.make_hierarchy(),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),deriv_seq));
} else {
return h;
}
});
underive = function(h,tag,parent){
switch(arguments.length){
case 2:
return underive__2.call(this,h,tag);
case 3:
return underive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
return underive;
})()
;
cljs.core.reset_cache = (function reset_cache(method_cache,method_table,cached_hierarchy,hierarchy){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache,(function (_){
var G__24043 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24043) : cljs.core.deref.call(null,G__24043));
}));

return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy,(function (_){
var G__24044 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24044) : cljs.core.deref.call(null,G__24044));
}));
});
cljs.core.prefers_STAR_ = (function prefers_STAR_(x,y,prefer_table){
var xprefs = (function (){var G__24060 = prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24060) : cljs.core.deref.call(null,G__24060));
})().call(null,x);
var or__17332__auto__ = (cljs.core.truth_((function (){var and__17320__auto__ = xprefs;
if(cljs.core.truth_(and__17320__auto__)){
var G__24062 = y;
return (xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__24062) : xprefs.call(null,G__24062));
} else {
return and__17320__auto__;
}
})())?true:null);
if(cljs.core.truth_(or__17332__auto__)){
return or__17332__auto__;
} else {
var or__17332__auto____$1 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(x,cljs.core.first(ps),prefer_table))){
} else {
}

var G__24063 = cljs.core.rest(ps);
ps = G__24063;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__17332__auto____$1)){
return or__17332__auto____$1;
} else {
var or__17332__auto____$2 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(cljs.core.first(ps),y,prefer_table))){
} else {
}

var G__24064 = cljs.core.rest(ps);
ps = G__24064;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__17332__auto____$2)){
return or__17332__auto____$2;
} else {
return false;
}
}
}
});
cljs.core.dominates = (function dominates(x,y,prefer_table){
var or__17332__auto__ = cljs.core.prefers_STAR_(x,y,prefer_table);
if(cljs.core.truth_(or__17332__auto__)){
return or__17332__auto__;
} else {
return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x,y);
}
});
cljs.core.find_and_cache_best_method = (function find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (be,p__24078){
var vec__24079 = p__24078;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24079,(0),null);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24079,(1),null);
var e = vec__24079;
if(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__24080 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24080) : cljs.core.deref.call(null,G__24080));
})(),dispatch_val,k)){
var be2 = (cljs.core.truth_((function (){var or__17332__auto__ = (be == null);
if(or__17332__auto__){
return or__17332__auto__;
} else {
return cljs.core.dominates(k,cljs.core.first(be),prefer_table);
}
})())?e:be);
if(cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2),k,prefer_table))){
} else {
throw (new Error([cljs.core.str("Multiple methods in multimethod '"),cljs.core.str(name),cljs.core.str("' match dispatch value: "),cljs.core.str(dispatch_val),cljs.core.str(" -> "),cljs.core.str(k),cljs.core.str(" and "),cljs.core.str(cljs.core.first(be2)),cljs.core.str(", and neither is preferred")].join('')));
}

return be2;
} else {
return be;
}
}),null,(function (){var G__24081 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24081) : cljs.core.deref.call(null,G__24081));
})());
if(cljs.core.truth_(best_entry)){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__24082 = cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24082) : cljs.core.deref.call(null,G__24082));
})(),(function (){var G__24083 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24083) : cljs.core.deref.call(null,G__24083));
})())){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache,cljs.core.assoc,dispatch_val,cljs.core.second(best_entry));

return cljs.core.second(best_entry);
} else {
cljs.core.reset_cache(method_cache,method_table,cached_hierarchy,hierarchy);

return find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy);
}
} else {
return null;
}
});

cljs.core.IMultiFn = (function (){var obj24085 = {};
return obj24085;
})();

cljs.core._reset = (function _reset(mf){
if((function (){var and__17320__auto__ = mf;
if(and__17320__auto__){
return mf.cljs$core$IMultiFn$_reset$arity$1;
} else {
return and__17320__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
} else {
var x__17976__auto__ = (((mf == null))?null:mf);
return (function (){var or__17332__auto__ = (cljs.core._reset[(function (){var G__24089 = x__17976__auto__;
return goog.typeOf(G__24089);
})()]);
if(or__17332__auto__){
return or__17332__auto__;
} else {
var or__17332__auto____$1 = (cljs.core._reset["_"]);
if(or__17332__auto____$1){
return or__17332__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-reset",mf);
}
}
})().call(null,mf);
}
});

cljs.core._add_method = (function _add_method(mf,dispatch_val,method){
if((function (){var and__17320__auto__ = mf;
if(and__17320__auto__){
return mf.cljs$core$IMultiFn$_add_method$arity$3;
} else {
return and__17320__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_add_method$arity$3(mf,dispatch_val,method);
} else {
var x__17976__auto__ = (((mf == null))?null:mf);
return (function (){var or__17332__auto__ = (cljs.core._add_method[(function (){var G__24093 = x__17976__auto__;
return goog.typeOf(G__24093);
})()]);
if(or__17332__auto__){
return or__17332__auto__;
} else {
var or__17332__auto____$1 = (cljs.core._add_method["_"]);
if(or__17332__auto____$1){
return or__17332__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-add-method",mf);
}
}
})().call(null,mf,dispatch_val,method);
}
});

cljs.core._remove_method = (function _remove_method(mf,dispatch_val){
if((function (){var and__17320__auto__ = mf;
if(and__17320__auto__){
return mf.cljs$core$IMultiFn$_remove_method$arity$2;
} else {
return and__17320__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf,dispatch_val);
} else {
var x__17976__auto__ = (((mf == null))?null:mf);
return (function (){var or__17332__auto__ = (cljs.core._remove_method[(function (){var G__24097 = x__17976__auto__;
return goog.typeOf(G__24097);
})()]);
if(or__17332__auto__){
return or__17332__auto__;
} else {
var or__17332__auto____$1 = (cljs.core._remove_method["_"]);
if(or__17332__auto____$1){
return or__17332__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-remove-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._prefer_method = (function _prefer_method(mf,dispatch_val,dispatch_val_y){
if((function (){var and__17320__auto__ = mf;
if(and__17320__auto__){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
} else {
return and__17320__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf,dispatch_val,dispatch_val_y);
} else {
var x__17976__auto__ = (((mf == null))?null:mf);
return (function (){var or__17332__auto__ = (cljs.core._prefer_method[(function (){var G__24101 = x__17976__auto__;
return goog.typeOf(G__24101);
})()]);
if(or__17332__auto__){
return or__17332__auto__;
} else {
var or__17332__auto____$1 = (cljs.core._prefer_method["_"]);
if(or__17332__auto____$1){
return or__17332__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefer-method",mf);
}
}
})().call(null,mf,dispatch_val,dispatch_val_y);
}
});

cljs.core._get_method = (function _get_method(mf,dispatch_val){
if((function (){var and__17320__auto__ = mf;
if(and__17320__auto__){
return mf.cljs$core$IMultiFn$_get_method$arity$2;
} else {
return and__17320__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_get_method$arity$2(mf,dispatch_val);
} else {
var x__17976__auto__ = (((mf == null))?null:mf);
return (function (){var or__17332__auto__ = (cljs.core._get_method[(function (){var G__24105 = x__17976__auto__;
return goog.typeOf(G__24105);
})()]);
if(or__17332__auto__){
return or__17332__auto__;
} else {
var or__17332__auto____$1 = (cljs.core._get_method["_"]);
if(or__17332__auto____$1){
return or__17332__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-get-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._methods = (function _methods(mf){
if((function (){var and__17320__auto__ = mf;
if(and__17320__auto__){
return mf.cljs$core$IMultiFn$_methods$arity$1;
} else {
return and__17320__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
} else {
var x__17976__auto__ = (((mf == null))?null:mf);
return (function (){var or__17332__auto__ = (cljs.core._methods[(function (){var G__24109 = x__17976__auto__;
return goog.typeOf(G__24109);
})()]);
if(or__17332__auto__){
return or__17332__auto__;
} else {
var or__17332__auto____$1 = (cljs.core._methods["_"]);
if(or__17332__auto____$1){
return or__17332__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-methods",mf);
}
}
})().call(null,mf);
}
});

cljs.core._prefers = (function _prefers(mf){
if((function (){var and__17320__auto__ = mf;
if(and__17320__auto__){
return mf.cljs$core$IMultiFn$_prefers$arity$1;
} else {
return and__17320__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
} else {
var x__17976__auto__ = (((mf == null))?null:mf);
return (function (){var or__17332__auto__ = (cljs.core._prefers[(function (){var G__24113 = x__17976__auto__;
return goog.typeOf(G__24113);
})()]);
if(or__17332__auto__){
return or__17332__auto__;
} else {
var or__17332__auto____$1 = (cljs.core._prefers["_"]);
if(or__17332__auto____$1){
return or__17332__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefers",mf);
}
}
})().call(null,mf);
}
});

cljs.core.throw_no_method_error = (function throw_no_method_error(name,dispatch_val){
throw (new Error([cljs.core.str("No method in multimethod '"),cljs.core.str(name),cljs.core.str("' for dispatch value: "),cljs.core.str(dispatch_val)].join('')));
});

/**
* @constructor
*/
cljs.core.MultiFn = (function (name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
this.name = name;
this.dispatch_fn = dispatch_fn;
this.default_dispatch_val = default_dispatch_val;
this.hierarchy = hierarchy;
this.method_table = method_table;
this.prefer_table = prefer_table;
this.method_cache = method_cache;
this.cached_hierarchy = cached_hierarchy;
this.cljs$lang$protocol_mask$partition0$ = 4194305;
this.cljs$lang$protocol_mask$partition1$ = 4352;
})
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__24115 = this$__$1;
return goog.getUid(G__24115);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._name(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._namespace(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy,((function (mf__$1){
return (function (mf__$2){
return null;
});})(mf__$1))
);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = (function (mf,dispatch_val,method){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table,cljs.core.assoc,dispatch_val,method);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table,cljs.core.dissoc,dispatch_val);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__24116 = self__.cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24116) : cljs.core.deref.call(null,G__24116));
})(),(function (){var G__24117 = self__.hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24117) : cljs.core.deref.call(null,G__24117));
})())){
} else {
cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
}

var temp__4124__auto__ = (function (){var G__24118 = self__.method_cache;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24118) : cljs.core.deref.call(null,G__24118));
})().call(null,dispatch_val);
if(cljs.core.truth_(temp__4124__auto__)){
var target_fn = temp__4124__auto__;
return target_fn;
} else {
var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method(self__.name,dispatch_val,self__.hierarchy,self__.method_table,self__.prefer_table,self__.method_cache,self__.cached_hierarchy);
if(cljs.core.truth_(temp__4124__auto____$1)){
var target_fn = temp__4124__auto____$1;
return target_fn;
} else {
return (function (){var G__24119 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24119) : cljs.core.deref.call(null,G__24119));
})().call(null,self__.default_dispatch_val);
}
}
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = (function (mf,dispatch_val_x,dispatch_val_y){
var self__ = this;
var mf__$1 = this;
if(cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x,dispatch_val_y,self__.prefer_table))){
throw (new Error([cljs.core.str("Preference conflict in multimethod '"),cljs.core.str(self__.name),cljs.core.str("': "),cljs.core.str(dispatch_val_y),cljs.core.str(" is already preferred to "),cljs.core.str(dispatch_val_x)].join('')));
} else {
}

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (old){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.PersistentHashSet.EMPTY),dispatch_val_y));
});})(mf__$1))
);

return cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__24120 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24120) : cljs.core.deref.call(null,G__24120));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__24121 = self__.prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24121) : cljs.core.deref.call(null,G__24121));
});

cljs.core.MultiFn.prototype.call = (function() {
var G__24962 = null;
var G__24962__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});
var G__24962__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__24122 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__24122) : self__.dispatch_fn.call(null,G__24122));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24123 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__24123) : target_fn.call(null,G__24123));
});
var G__24962__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__24124 = a;
var G__24125 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__24124,G__24125) : self__.dispatch_fn.call(null,G__24124,G__24125));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24126 = a;
var G__24127 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__24126,G__24127) : target_fn.call(null,G__24126,G__24127));
});
var G__24962__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__24128 = a;
var G__24129 = b;
var G__24130 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__24128,G__24129,G__24130) : self__.dispatch_fn.call(null,G__24128,G__24129,G__24130));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24131 = a;
var G__24132 = b;
var G__24133 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__24131,G__24132,G__24133) : target_fn.call(null,G__24131,G__24132,G__24133));
});
var G__24962__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__24134 = a;
var G__24135 = b;
var G__24136 = c;
var G__24137 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__24134,G__24135,G__24136,G__24137) : self__.dispatch_fn.call(null,G__24134,G__24135,G__24136,G__24137));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24138 = a;
var G__24139 = b;
var G__24140 = c;
var G__24141 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__24138,G__24139,G__24140,G__24141) : target_fn.call(null,G__24138,G__24139,G__24140,G__24141));
});
var G__24962__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__24142 = a;
var G__24143 = b;
var G__24144 = c;
var G__24145 = d;
var G__24146 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__24142,G__24143,G__24144,G__24145,G__24146) : self__.dispatch_fn.call(null,G__24142,G__24143,G__24144,G__24145,G__24146));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24147 = a;
var G__24148 = b;
var G__24149 = c;
var G__24150 = d;
var G__24151 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__24147,G__24148,G__24149,G__24150,G__24151) : target_fn.call(null,G__24147,G__24148,G__24149,G__24150,G__24151));
});
var G__24962__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__24152 = a;
var G__24153 = b;
var G__24154 = c;
var G__24155 = d;
var G__24156 = e;
var G__24157 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__24152,G__24153,G__24154,G__24155,G__24156,G__24157) : self__.dispatch_fn.call(null,G__24152,G__24153,G__24154,G__24155,G__24156,G__24157));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24158 = a;
var G__24159 = b;
var G__24160 = c;
var G__24161 = d;
var G__24162 = e;
var G__24163 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__24158,G__24159,G__24160,G__24161,G__24162,G__24163) : target_fn.call(null,G__24158,G__24159,G__24160,G__24161,G__24162,G__24163));
});
var G__24962__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__24164 = a;
var G__24165 = b;
var G__24166 = c;
var G__24167 = d;
var G__24168 = e;
var G__24169 = f;
var G__24170 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__24164,G__24165,G__24166,G__24167,G__24168,G__24169,G__24170) : self__.dispatch_fn.call(null,G__24164,G__24165,G__24166,G__24167,G__24168,G__24169,G__24170));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24171 = a;
var G__24172 = b;
var G__24173 = c;
var G__24174 = d;
var G__24175 = e;
var G__24176 = f;
var G__24177 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__24171,G__24172,G__24173,G__24174,G__24175,G__24176,G__24177) : target_fn.call(null,G__24171,G__24172,G__24173,G__24174,G__24175,G__24176,G__24177));
});
var G__24962__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__24178 = a;
var G__24179 = b;
var G__24180 = c;
var G__24181 = d;
var G__24182 = e;
var G__24183 = f;
var G__24184 = g;
var G__24185 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__24178,G__24179,G__24180,G__24181,G__24182,G__24183,G__24184,G__24185) : self__.dispatch_fn.call(null,G__24178,G__24179,G__24180,G__24181,G__24182,G__24183,G__24184,G__24185));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24186 = a;
var G__24187 = b;
var G__24188 = c;
var G__24189 = d;
var G__24190 = e;
var G__24191 = f;
var G__24192 = g;
var G__24193 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__24186,G__24187,G__24188,G__24189,G__24190,G__24191,G__24192,G__24193) : target_fn.call(null,G__24186,G__24187,G__24188,G__24189,G__24190,G__24191,G__24192,G__24193));
});
var G__24962__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__24194 = a;
var G__24195 = b;
var G__24196 = c;
var G__24197 = d;
var G__24198 = e;
var G__24199 = f;
var G__24200 = g;
var G__24201 = h;
var G__24202 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__24194,G__24195,G__24196,G__24197,G__24198,G__24199,G__24200,G__24201,G__24202) : self__.dispatch_fn.call(null,G__24194,G__24195,G__24196,G__24197,G__24198,G__24199,G__24200,G__24201,G__24202));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24203 = a;
var G__24204 = b;
var G__24205 = c;
var G__24206 = d;
var G__24207 = e;
var G__24208 = f;
var G__24209 = g;
var G__24210 = h;
var G__24211 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__24203,G__24204,G__24205,G__24206,G__24207,G__24208,G__24209,G__24210,G__24211) : target_fn.call(null,G__24203,G__24204,G__24205,G__24206,G__24207,G__24208,G__24209,G__24210,G__24211));
});
var G__24962__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__24212 = a;
var G__24213 = b;
var G__24214 = c;
var G__24215 = d;
var G__24216 = e;
var G__24217 = f;
var G__24218 = g;
var G__24219 = h;
var G__24220 = i;
var G__24221 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__24212,G__24213,G__24214,G__24215,G__24216,G__24217,G__24218,G__24219,G__24220,G__24221) : self__.dispatch_fn.call(null,G__24212,G__24213,G__24214,G__24215,G__24216,G__24217,G__24218,G__24219,G__24220,G__24221));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24222 = a;
var G__24223 = b;
var G__24224 = c;
var G__24225 = d;
var G__24226 = e;
var G__24227 = f;
var G__24228 = g;
var G__24229 = h;
var G__24230 = i;
var G__24231 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__24222,G__24223,G__24224,G__24225,G__24226,G__24227,G__24228,G__24229,G__24230,G__24231) : target_fn.call(null,G__24222,G__24223,G__24224,G__24225,G__24226,G__24227,G__24228,G__24229,G__24230,G__24231));
});
var G__24962__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__24232 = a;
var G__24233 = b;
var G__24234 = c;
var G__24235 = d;
var G__24236 = e;
var G__24237 = f;
var G__24238 = g;
var G__24239 = h;
var G__24240 = i;
var G__24241 = j;
var G__24242 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__24232,G__24233,G__24234,G__24235,G__24236,G__24237,G__24238,G__24239,G__24240,G__24241,G__24242) : self__.dispatch_fn.call(null,G__24232,G__24233,G__24234,G__24235,G__24236,G__24237,G__24238,G__24239,G__24240,G__24241,G__24242));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24243 = a;
var G__24244 = b;
var G__24245 = c;
var G__24246 = d;
var G__24247 = e;
var G__24248 = f;
var G__24249 = g;
var G__24250 = h;
var G__24251 = i;
var G__24252 = j;
var G__24253 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__24243,G__24244,G__24245,G__24246,G__24247,G__24248,G__24249,G__24250,G__24251,G__24252,G__24253) : target_fn.call(null,G__24243,G__24244,G__24245,G__24246,G__24247,G__24248,G__24249,G__24250,G__24251,G__24252,G__24253));
});
var G__24962__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__24254 = a;
var G__24255 = b;
var G__24256 = c;
var G__24257 = d;
var G__24258 = e;
var G__24259 = f;
var G__24260 = g;
var G__24261 = h;
var G__24262 = i;
var G__24263 = j;
var G__24264 = k;
var G__24265 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__24254,G__24255,G__24256,G__24257,G__24258,G__24259,G__24260,G__24261,G__24262,G__24263,G__24264,G__24265) : self__.dispatch_fn.call(null,G__24254,G__24255,G__24256,G__24257,G__24258,G__24259,G__24260,G__24261,G__24262,G__24263,G__24264,G__24265));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24266 = a;
var G__24267 = b;
var G__24268 = c;
var G__24269 = d;
var G__24270 = e;
var G__24271 = f;
var G__24272 = g;
var G__24273 = h;
var G__24274 = i;
var G__24275 = j;
var G__24276 = k;
var G__24277 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__24266,G__24267,G__24268,G__24269,G__24270,G__24271,G__24272,G__24273,G__24274,G__24275,G__24276,G__24277) : target_fn.call(null,G__24266,G__24267,G__24268,G__24269,G__24270,G__24271,G__24272,G__24273,G__24274,G__24275,G__24276,G__24277));
});
var G__24962__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__24278 = a;
var G__24279 = b;
var G__24280 = c;
var G__24281 = d;
var G__24282 = e;
var G__24283 = f;
var G__24284 = g;
var G__24285 = h;
var G__24286 = i;
var G__24287 = j;
var G__24288 = k;
var G__24289 = l;
var G__24290 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__24278,G__24279,G__24280,G__24281,G__24282,G__24283,G__24284,G__24285,G__24286,G__24287,G__24288,G__24289,G__24290) : self__.dispatch_fn.call(null,G__24278,G__24279,G__24280,G__24281,G__24282,G__24283,G__24284,G__24285,G__24286,G__24287,G__24288,G__24289,G__24290));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24291 = a;
var G__24292 = b;
var G__24293 = c;
var G__24294 = d;
var G__24295 = e;
var G__24296 = f;
var G__24297 = g;
var G__24298 = h;
var G__24299 = i;
var G__24300 = j;
var G__24301 = k;
var G__24302 = l;
var G__24303 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__24291,G__24292,G__24293,G__24294,G__24295,G__24296,G__24297,G__24298,G__24299,G__24300,G__24301,G__24302,G__24303) : target_fn.call(null,G__24291,G__24292,G__24293,G__24294,G__24295,G__24296,G__24297,G__24298,G__24299,G__24300,G__24301,G__24302,G__24303));
});
var G__24962__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__24304 = a;
var G__24305 = b;
var G__24306 = c;
var G__24307 = d;
var G__24308 = e;
var G__24309 = f;
var G__24310 = g;
var G__24311 = h;
var G__24312 = i;
var G__24313 = j;
var G__24314 = k;
var G__24315 = l;
var G__24316 = m;
var G__24317 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__24304,G__24305,G__24306,G__24307,G__24308,G__24309,G__24310,G__24311,G__24312,G__24313,G__24314,G__24315,G__24316,G__24317) : self__.dispatch_fn.call(null,G__24304,G__24305,G__24306,G__24307,G__24308,G__24309,G__24310,G__24311,G__24312,G__24313,G__24314,G__24315,G__24316,G__24317));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24318 = a;
var G__24319 = b;
var G__24320 = c;
var G__24321 = d;
var G__24322 = e;
var G__24323 = f;
var G__24324 = g;
var G__24325 = h;
var G__24326 = i;
var G__24327 = j;
var G__24328 = k;
var G__24329 = l;
var G__24330 = m;
var G__24331 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__24318,G__24319,G__24320,G__24321,G__24322,G__24323,G__24324,G__24325,G__24326,G__24327,G__24328,G__24329,G__24330,G__24331) : target_fn.call(null,G__24318,G__24319,G__24320,G__24321,G__24322,G__24323,G__24324,G__24325,G__24326,G__24327,G__24328,G__24329,G__24330,G__24331));
});
var G__24962__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__24332 = a;
var G__24333 = b;
var G__24334 = c;
var G__24335 = d;
var G__24336 = e;
var G__24337 = f;
var G__24338 = g;
var G__24339 = h;
var G__24340 = i;
var G__24341 = j;
var G__24342 = k;
var G__24343 = l;
var G__24344 = m;
var G__24345 = n;
var G__24346 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__24332,G__24333,G__24334,G__24335,G__24336,G__24337,G__24338,G__24339,G__24340,G__24341,G__24342,G__24343,G__24344,G__24345,G__24346) : self__.dispatch_fn.call(null,G__24332,G__24333,G__24334,G__24335,G__24336,G__24337,G__24338,G__24339,G__24340,G__24341,G__24342,G__24343,G__24344,G__24345,G__24346));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24347 = a;
var G__24348 = b;
var G__24349 = c;
var G__24350 = d;
var G__24351 = e;
var G__24352 = f;
var G__24353 = g;
var G__24354 = h;
var G__24355 = i;
var G__24356 = j;
var G__24357 = k;
var G__24358 = l;
var G__24359 = m;
var G__24360 = n;
var G__24361 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__24347,G__24348,G__24349,G__24350,G__24351,G__24352,G__24353,G__24354,G__24355,G__24356,G__24357,G__24358,G__24359,G__24360,G__24361) : target_fn.call(null,G__24347,G__24348,G__24349,G__24350,G__24351,G__24352,G__24353,G__24354,G__24355,G__24356,G__24357,G__24358,G__24359,G__24360,G__24361));
});
var G__24962__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__24362 = a;
var G__24363 = b;
var G__24364 = c;
var G__24365 = d;
var G__24366 = e;
var G__24367 = f;
var G__24368 = g;
var G__24369 = h;
var G__24370 = i;
var G__24371 = j;
var G__24372 = k;
var G__24373 = l;
var G__24374 = m;
var G__24375 = n;
var G__24376 = o;
var G__24377 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__24362,G__24363,G__24364,G__24365,G__24366,G__24367,G__24368,G__24369,G__24370,G__24371,G__24372,G__24373,G__24374,G__24375,G__24376,G__24377) : self__.dispatch_fn.call(null,G__24362,G__24363,G__24364,G__24365,G__24366,G__24367,G__24368,G__24369,G__24370,G__24371,G__24372,G__24373,G__24374,G__24375,G__24376,G__24377));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24378 = a;
var G__24379 = b;
var G__24380 = c;
var G__24381 = d;
var G__24382 = e;
var G__24383 = f;
var G__24384 = g;
var G__24385 = h;
var G__24386 = i;
var G__24387 = j;
var G__24388 = k;
var G__24389 = l;
var G__24390 = m;
var G__24391 = n;
var G__24392 = o;
var G__24393 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__24378,G__24379,G__24380,G__24381,G__24382,G__24383,G__24384,G__24385,G__24386,G__24387,G__24388,G__24389,G__24390,G__24391,G__24392,G__24393) : target_fn.call(null,G__24378,G__24379,G__24380,G__24381,G__24382,G__24383,G__24384,G__24385,G__24386,G__24387,G__24388,G__24389,G__24390,G__24391,G__24392,G__24393));
});
var G__24962__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__24394 = a;
var G__24395 = b;
var G__24396 = c;
var G__24397 = d;
var G__24398 = e;
var G__24399 = f;
var G__24400 = g;
var G__24401 = h;
var G__24402 = i;
var G__24403 = j;
var G__24404 = k;
var G__24405 = l;
var G__24406 = m;
var G__24407 = n;
var G__24408 = o;
var G__24409 = p;
var G__24410 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__24394,G__24395,G__24396,G__24397,G__24398,G__24399,G__24400,G__24401,G__24402,G__24403,G__24404,G__24405,G__24406,G__24407,G__24408,G__24409,G__24410) : self__.dispatch_fn.call(null,G__24394,G__24395,G__24396,G__24397,G__24398,G__24399,G__24400,G__24401,G__24402,G__24403,G__24404,G__24405,G__24406,G__24407,G__24408,G__24409,G__24410));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24411 = a;
var G__24412 = b;
var G__24413 = c;
var G__24414 = d;
var G__24415 = e;
var G__24416 = f;
var G__24417 = g;
var G__24418 = h;
var G__24419 = i;
var G__24420 = j;
var G__24421 = k;
var G__24422 = l;
var G__24423 = m;
var G__24424 = n;
var G__24425 = o;
var G__24426 = p;
var G__24427 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__24411,G__24412,G__24413,G__24414,G__24415,G__24416,G__24417,G__24418,G__24419,G__24420,G__24421,G__24422,G__24423,G__24424,G__24425,G__24426,G__24427) : target_fn.call(null,G__24411,G__24412,G__24413,G__24414,G__24415,G__24416,G__24417,G__24418,G__24419,G__24420,G__24421,G__24422,G__24423,G__24424,G__24425,G__24426,G__24427));
});
var G__24962__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__24428 = a;
var G__24429 = b;
var G__24430 = c;
var G__24431 = d;
var G__24432 = e;
var G__24433 = f;
var G__24434 = g;
var G__24435 = h;
var G__24436 = i;
var G__24437 = j;
var G__24438 = k;
var G__24439 = l;
var G__24440 = m;
var G__24441 = n;
var G__24442 = o;
var G__24443 = p;
var G__24444 = q;
var G__24445 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__24428,G__24429,G__24430,G__24431,G__24432,G__24433,G__24434,G__24435,G__24436,G__24437,G__24438,G__24439,G__24440,G__24441,G__24442,G__24443,G__24444,G__24445) : self__.dispatch_fn.call(null,G__24428,G__24429,G__24430,G__24431,G__24432,G__24433,G__24434,G__24435,G__24436,G__24437,G__24438,G__24439,G__24440,G__24441,G__24442,G__24443,G__24444,G__24445));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24446 = a;
var G__24447 = b;
var G__24448 = c;
var G__24449 = d;
var G__24450 = e;
var G__24451 = f;
var G__24452 = g;
var G__24453 = h;
var G__24454 = i;
var G__24455 = j;
var G__24456 = k;
var G__24457 = l;
var G__24458 = m;
var G__24459 = n;
var G__24460 = o;
var G__24461 = p;
var G__24462 = q;
var G__24463 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__24446,G__24447,G__24448,G__24449,G__24450,G__24451,G__24452,G__24453,G__24454,G__24455,G__24456,G__24457,G__24458,G__24459,G__24460,G__24461,G__24462,G__24463) : target_fn.call(null,G__24446,G__24447,G__24448,G__24449,G__24450,G__24451,G__24452,G__24453,G__24454,G__24455,G__24456,G__24457,G__24458,G__24459,G__24460,G__24461,G__24462,G__24463));
});
var G__24962__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__24464 = a;
var G__24465 = b;
var G__24466 = c;
var G__24467 = d;
var G__24468 = e;
var G__24469 = f;
var G__24470 = g;
var G__24471 = h;
var G__24472 = i;
var G__24473 = j;
var G__24474 = k;
var G__24475 = l;
var G__24476 = m;
var G__24477 = n;
var G__24478 = o;
var G__24479 = p;
var G__24480 = q;
var G__24481 = r;
var G__24482 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__24464,G__24465,G__24466,G__24467,G__24468,G__24469,G__24470,G__24471,G__24472,G__24473,G__24474,G__24475,G__24476,G__24477,G__24478,G__24479,G__24480,G__24481,G__24482) : self__.dispatch_fn.call(null,G__24464,G__24465,G__24466,G__24467,G__24468,G__24469,G__24470,G__24471,G__24472,G__24473,G__24474,G__24475,G__24476,G__24477,G__24478,G__24479,G__24480,G__24481,G__24482));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24483 = a;
var G__24484 = b;
var G__24485 = c;
var G__24486 = d;
var G__24487 = e;
var G__24488 = f;
var G__24489 = g;
var G__24490 = h;
var G__24491 = i;
var G__24492 = j;
var G__24493 = k;
var G__24494 = l;
var G__24495 = m;
var G__24496 = n;
var G__24497 = o;
var G__24498 = p;
var G__24499 = q;
var G__24500 = r;
var G__24501 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__24483,G__24484,G__24485,G__24486,G__24487,G__24488,G__24489,G__24490,G__24491,G__24492,G__24493,G__24494,G__24495,G__24496,G__24497,G__24498,G__24499,G__24500,G__24501) : target_fn.call(null,G__24483,G__24484,G__24485,G__24486,G__24487,G__24488,G__24489,G__24490,G__24491,G__24492,G__24493,G__24494,G__24495,G__24496,G__24497,G__24498,G__24499,G__24500,G__24501));
});
var G__24962__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__24502 = a;
var G__24503 = b;
var G__24504 = c;
var G__24505 = d;
var G__24506 = e;
var G__24507 = f;
var G__24508 = g;
var G__24509 = h;
var G__24510 = i;
var G__24511 = j;
var G__24512 = k;
var G__24513 = l;
var G__24514 = m;
var G__24515 = n;
var G__24516 = o;
var G__24517 = p;
var G__24518 = q;
var G__24519 = r;
var G__24520 = s;
var G__24521 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__24502,G__24503,G__24504,G__24505,G__24506,G__24507,G__24508,G__24509,G__24510,G__24511,G__24512,G__24513,G__24514,G__24515,G__24516,G__24517,G__24518,G__24519,G__24520,G__24521) : self__.dispatch_fn.call(null,G__24502,G__24503,G__24504,G__24505,G__24506,G__24507,G__24508,G__24509,G__24510,G__24511,G__24512,G__24513,G__24514,G__24515,G__24516,G__24517,G__24518,G__24519,G__24520,G__24521));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24522 = a;
var G__24523 = b;
var G__24524 = c;
var G__24525 = d;
var G__24526 = e;
var G__24527 = f;
var G__24528 = g;
var G__24529 = h;
var G__24530 = i;
var G__24531 = j;
var G__24532 = k;
var G__24533 = l;
var G__24534 = m;
var G__24535 = n;
var G__24536 = o;
var G__24537 = p;
var G__24538 = q;
var G__24539 = r;
var G__24540 = s;
var G__24541 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__24522,G__24523,G__24524,G__24525,G__24526,G__24527,G__24528,G__24529,G__24530,G__24531,G__24532,G__24533,G__24534,G__24535,G__24536,G__24537,G__24538,G__24539,G__24540,G__24541) : target_fn.call(null,G__24522,G__24523,G__24524,G__24525,G__24526,G__24527,G__24528,G__24529,G__24530,G__24531,G__24532,G__24533,G__24534,G__24535,G__24536,G__24537,G__24538,G__24539,G__24540,G__24541));
});
var G__24962__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});
G__24962 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__24962__1.call(this,self__);
case 2:
return G__24962__2.call(this,self__,a);
case 3:
return G__24962__3.call(this,self__,a,b);
case 4:
return G__24962__4.call(this,self__,a,b,c);
case 5:
return G__24962__5.call(this,self__,a,b,c,d);
case 6:
return G__24962__6.call(this,self__,a,b,c,d,e);
case 7:
return G__24962__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__24962__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__24962__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__24962__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__24962__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__24962__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__24962__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__24962__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__24962__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__24962__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__24962__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__24962__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__24962__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__24962__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__24962__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__24962__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24962.cljs$core$IFn$_invoke$arity$1 = G__24962__1;
G__24962.cljs$core$IFn$_invoke$arity$2 = G__24962__2;
G__24962.cljs$core$IFn$_invoke$arity$3 = G__24962__3;
G__24962.cljs$core$IFn$_invoke$arity$4 = G__24962__4;
G__24962.cljs$core$IFn$_invoke$arity$5 = G__24962__5;
G__24962.cljs$core$IFn$_invoke$arity$6 = G__24962__6;
G__24962.cljs$core$IFn$_invoke$arity$7 = G__24962__7;
G__24962.cljs$core$IFn$_invoke$arity$8 = G__24962__8;
G__24962.cljs$core$IFn$_invoke$arity$9 = G__24962__9;
G__24962.cljs$core$IFn$_invoke$arity$10 = G__24962__10;
G__24962.cljs$core$IFn$_invoke$arity$11 = G__24962__11;
G__24962.cljs$core$IFn$_invoke$arity$12 = G__24962__12;
G__24962.cljs$core$IFn$_invoke$arity$13 = G__24962__13;
G__24962.cljs$core$IFn$_invoke$arity$14 = G__24962__14;
G__24962.cljs$core$IFn$_invoke$arity$15 = G__24962__15;
G__24962.cljs$core$IFn$_invoke$arity$16 = G__24962__16;
G__24962.cljs$core$IFn$_invoke$arity$17 = G__24962__17;
G__24962.cljs$core$IFn$_invoke$arity$18 = G__24962__18;
G__24962.cljs$core$IFn$_invoke$arity$19 = G__24962__19;
G__24962.cljs$core$IFn$_invoke$arity$20 = G__24962__20;
G__24962.cljs$core$IFn$_invoke$arity$21 = G__24962__21;
G__24962.cljs$core$IFn$_invoke$arity$22 = G__24962__22;
return G__24962;
})()
;

cljs.core.MultiFn.prototype.apply = (function (self__,args24114){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args24114)));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var mf = this;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__24542 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__24542) : self__.dispatch_fn.call(null,G__24542));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24543 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__24543) : target_fn.call(null,G__24543));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__24544 = a;
var G__24545 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__24544,G__24545) : self__.dispatch_fn.call(null,G__24544,G__24545));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24546 = a;
var G__24547 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__24546,G__24547) : target_fn.call(null,G__24546,G__24547));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__24548 = a;
var G__24549 = b;
var G__24550 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__24548,G__24549,G__24550) : self__.dispatch_fn.call(null,G__24548,G__24549,G__24550));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24551 = a;
var G__24552 = b;
var G__24553 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__24551,G__24552,G__24553) : target_fn.call(null,G__24551,G__24552,G__24553));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__24554 = a;
var G__24555 = b;
var G__24556 = c;
var G__24557 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__24554,G__24555,G__24556,G__24557) : self__.dispatch_fn.call(null,G__24554,G__24555,G__24556,G__24557));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24558 = a;
var G__24559 = b;
var G__24560 = c;
var G__24561 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__24558,G__24559,G__24560,G__24561) : target_fn.call(null,G__24558,G__24559,G__24560,G__24561));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__24562 = a;
var G__24563 = b;
var G__24564 = c;
var G__24565 = d;
var G__24566 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__24562,G__24563,G__24564,G__24565,G__24566) : self__.dispatch_fn.call(null,G__24562,G__24563,G__24564,G__24565,G__24566));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24567 = a;
var G__24568 = b;
var G__24569 = c;
var G__24570 = d;
var G__24571 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__24567,G__24568,G__24569,G__24570,G__24571) : target_fn.call(null,G__24567,G__24568,G__24569,G__24570,G__24571));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__24572 = a;
var G__24573 = b;
var G__24574 = c;
var G__24575 = d;
var G__24576 = e;
var G__24577 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__24572,G__24573,G__24574,G__24575,G__24576,G__24577) : self__.dispatch_fn.call(null,G__24572,G__24573,G__24574,G__24575,G__24576,G__24577));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24578 = a;
var G__24579 = b;
var G__24580 = c;
var G__24581 = d;
var G__24582 = e;
var G__24583 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__24578,G__24579,G__24580,G__24581,G__24582,G__24583) : target_fn.call(null,G__24578,G__24579,G__24580,G__24581,G__24582,G__24583));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__24584 = a;
var G__24585 = b;
var G__24586 = c;
var G__24587 = d;
var G__24588 = e;
var G__24589 = f;
var G__24590 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__24584,G__24585,G__24586,G__24587,G__24588,G__24589,G__24590) : self__.dispatch_fn.call(null,G__24584,G__24585,G__24586,G__24587,G__24588,G__24589,G__24590));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24591 = a;
var G__24592 = b;
var G__24593 = c;
var G__24594 = d;
var G__24595 = e;
var G__24596 = f;
var G__24597 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__24591,G__24592,G__24593,G__24594,G__24595,G__24596,G__24597) : target_fn.call(null,G__24591,G__24592,G__24593,G__24594,G__24595,G__24596,G__24597));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__24598 = a;
var G__24599 = b;
var G__24600 = c;
var G__24601 = d;
var G__24602 = e;
var G__24603 = f;
var G__24604 = g;
var G__24605 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__24598,G__24599,G__24600,G__24601,G__24602,G__24603,G__24604,G__24605) : self__.dispatch_fn.call(null,G__24598,G__24599,G__24600,G__24601,G__24602,G__24603,G__24604,G__24605));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24606 = a;
var G__24607 = b;
var G__24608 = c;
var G__24609 = d;
var G__24610 = e;
var G__24611 = f;
var G__24612 = g;
var G__24613 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__24606,G__24607,G__24608,G__24609,G__24610,G__24611,G__24612,G__24613) : target_fn.call(null,G__24606,G__24607,G__24608,G__24609,G__24610,G__24611,G__24612,G__24613));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__24614 = a;
var G__24615 = b;
var G__24616 = c;
var G__24617 = d;
var G__24618 = e;
var G__24619 = f;
var G__24620 = g;
var G__24621 = h;
var G__24622 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__24614,G__24615,G__24616,G__24617,G__24618,G__24619,G__24620,G__24621,G__24622) : self__.dispatch_fn.call(null,G__24614,G__24615,G__24616,G__24617,G__24618,G__24619,G__24620,G__24621,G__24622));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24623 = a;
var G__24624 = b;
var G__24625 = c;
var G__24626 = d;
var G__24627 = e;
var G__24628 = f;
var G__24629 = g;
var G__24630 = h;
var G__24631 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__24623,G__24624,G__24625,G__24626,G__24627,G__24628,G__24629,G__24630,G__24631) : target_fn.call(null,G__24623,G__24624,G__24625,G__24626,G__24627,G__24628,G__24629,G__24630,G__24631));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__24632 = a;
var G__24633 = b;
var G__24634 = c;
var G__24635 = d;
var G__24636 = e;
var G__24637 = f;
var G__24638 = g;
var G__24639 = h;
var G__24640 = i;
var G__24641 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__24632,G__24633,G__24634,G__24635,G__24636,G__24637,G__24638,G__24639,G__24640,G__24641) : self__.dispatch_fn.call(null,G__24632,G__24633,G__24634,G__24635,G__24636,G__24637,G__24638,G__24639,G__24640,G__24641));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24642 = a;
var G__24643 = b;
var G__24644 = c;
var G__24645 = d;
var G__24646 = e;
var G__24647 = f;
var G__24648 = g;
var G__24649 = h;
var G__24650 = i;
var G__24651 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__24642,G__24643,G__24644,G__24645,G__24646,G__24647,G__24648,G__24649,G__24650,G__24651) : target_fn.call(null,G__24642,G__24643,G__24644,G__24645,G__24646,G__24647,G__24648,G__24649,G__24650,G__24651));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__24652 = a;
var G__24653 = b;
var G__24654 = c;
var G__24655 = d;
var G__24656 = e;
var G__24657 = f;
var G__24658 = g;
var G__24659 = h;
var G__24660 = i;
var G__24661 = j;
var G__24662 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__24652,G__24653,G__24654,G__24655,G__24656,G__24657,G__24658,G__24659,G__24660,G__24661,G__24662) : self__.dispatch_fn.call(null,G__24652,G__24653,G__24654,G__24655,G__24656,G__24657,G__24658,G__24659,G__24660,G__24661,G__24662));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24663 = a;
var G__24664 = b;
var G__24665 = c;
var G__24666 = d;
var G__24667 = e;
var G__24668 = f;
var G__24669 = g;
var G__24670 = h;
var G__24671 = i;
var G__24672 = j;
var G__24673 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__24663,G__24664,G__24665,G__24666,G__24667,G__24668,G__24669,G__24670,G__24671,G__24672,G__24673) : target_fn.call(null,G__24663,G__24664,G__24665,G__24666,G__24667,G__24668,G__24669,G__24670,G__24671,G__24672,G__24673));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__24674 = a;
var G__24675 = b;
var G__24676 = c;
var G__24677 = d;
var G__24678 = e;
var G__24679 = f;
var G__24680 = g;
var G__24681 = h;
var G__24682 = i;
var G__24683 = j;
var G__24684 = k;
var G__24685 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__24674,G__24675,G__24676,G__24677,G__24678,G__24679,G__24680,G__24681,G__24682,G__24683,G__24684,G__24685) : self__.dispatch_fn.call(null,G__24674,G__24675,G__24676,G__24677,G__24678,G__24679,G__24680,G__24681,G__24682,G__24683,G__24684,G__24685));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24686 = a;
var G__24687 = b;
var G__24688 = c;
var G__24689 = d;
var G__24690 = e;
var G__24691 = f;
var G__24692 = g;
var G__24693 = h;
var G__24694 = i;
var G__24695 = j;
var G__24696 = k;
var G__24697 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__24686,G__24687,G__24688,G__24689,G__24690,G__24691,G__24692,G__24693,G__24694,G__24695,G__24696,G__24697) : target_fn.call(null,G__24686,G__24687,G__24688,G__24689,G__24690,G__24691,G__24692,G__24693,G__24694,G__24695,G__24696,G__24697));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__24698 = a;
var G__24699 = b;
var G__24700 = c;
var G__24701 = d;
var G__24702 = e;
var G__24703 = f;
var G__24704 = g;
var G__24705 = h;
var G__24706 = i;
var G__24707 = j;
var G__24708 = k;
var G__24709 = l;
var G__24710 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__24698,G__24699,G__24700,G__24701,G__24702,G__24703,G__24704,G__24705,G__24706,G__24707,G__24708,G__24709,G__24710) : self__.dispatch_fn.call(null,G__24698,G__24699,G__24700,G__24701,G__24702,G__24703,G__24704,G__24705,G__24706,G__24707,G__24708,G__24709,G__24710));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24711 = a;
var G__24712 = b;
var G__24713 = c;
var G__24714 = d;
var G__24715 = e;
var G__24716 = f;
var G__24717 = g;
var G__24718 = h;
var G__24719 = i;
var G__24720 = j;
var G__24721 = k;
var G__24722 = l;
var G__24723 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__24711,G__24712,G__24713,G__24714,G__24715,G__24716,G__24717,G__24718,G__24719,G__24720,G__24721,G__24722,G__24723) : target_fn.call(null,G__24711,G__24712,G__24713,G__24714,G__24715,G__24716,G__24717,G__24718,G__24719,G__24720,G__24721,G__24722,G__24723));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__24724 = a;
var G__24725 = b;
var G__24726 = c;
var G__24727 = d;
var G__24728 = e;
var G__24729 = f;
var G__24730 = g;
var G__24731 = h;
var G__24732 = i;
var G__24733 = j;
var G__24734 = k;
var G__24735 = l;
var G__24736 = m;
var G__24737 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__24724,G__24725,G__24726,G__24727,G__24728,G__24729,G__24730,G__24731,G__24732,G__24733,G__24734,G__24735,G__24736,G__24737) : self__.dispatch_fn.call(null,G__24724,G__24725,G__24726,G__24727,G__24728,G__24729,G__24730,G__24731,G__24732,G__24733,G__24734,G__24735,G__24736,G__24737));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24738 = a;
var G__24739 = b;
var G__24740 = c;
var G__24741 = d;
var G__24742 = e;
var G__24743 = f;
var G__24744 = g;
var G__24745 = h;
var G__24746 = i;
var G__24747 = j;
var G__24748 = k;
var G__24749 = l;
var G__24750 = m;
var G__24751 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__24738,G__24739,G__24740,G__24741,G__24742,G__24743,G__24744,G__24745,G__24746,G__24747,G__24748,G__24749,G__24750,G__24751) : target_fn.call(null,G__24738,G__24739,G__24740,G__24741,G__24742,G__24743,G__24744,G__24745,G__24746,G__24747,G__24748,G__24749,G__24750,G__24751));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__24752 = a;
var G__24753 = b;
var G__24754 = c;
var G__24755 = d;
var G__24756 = e;
var G__24757 = f;
var G__24758 = g;
var G__24759 = h;
var G__24760 = i;
var G__24761 = j;
var G__24762 = k;
var G__24763 = l;
var G__24764 = m;
var G__24765 = n;
var G__24766 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__24752,G__24753,G__24754,G__24755,G__24756,G__24757,G__24758,G__24759,G__24760,G__24761,G__24762,G__24763,G__24764,G__24765,G__24766) : self__.dispatch_fn.call(null,G__24752,G__24753,G__24754,G__24755,G__24756,G__24757,G__24758,G__24759,G__24760,G__24761,G__24762,G__24763,G__24764,G__24765,G__24766));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24767 = a;
var G__24768 = b;
var G__24769 = c;
var G__24770 = d;
var G__24771 = e;
var G__24772 = f;
var G__24773 = g;
var G__24774 = h;
var G__24775 = i;
var G__24776 = j;
var G__24777 = k;
var G__24778 = l;
var G__24779 = m;
var G__24780 = n;
var G__24781 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__24767,G__24768,G__24769,G__24770,G__24771,G__24772,G__24773,G__24774,G__24775,G__24776,G__24777,G__24778,G__24779,G__24780,G__24781) : target_fn.call(null,G__24767,G__24768,G__24769,G__24770,G__24771,G__24772,G__24773,G__24774,G__24775,G__24776,G__24777,G__24778,G__24779,G__24780,G__24781));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__24782 = a;
var G__24783 = b;
var G__24784 = c;
var G__24785 = d;
var G__24786 = e;
var G__24787 = f;
var G__24788 = g;
var G__24789 = h;
var G__24790 = i;
var G__24791 = j;
var G__24792 = k;
var G__24793 = l;
var G__24794 = m;
var G__24795 = n;
var G__24796 = o;
var G__24797 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__24782,G__24783,G__24784,G__24785,G__24786,G__24787,G__24788,G__24789,G__24790,G__24791,G__24792,G__24793,G__24794,G__24795,G__24796,G__24797) : self__.dispatch_fn.call(null,G__24782,G__24783,G__24784,G__24785,G__24786,G__24787,G__24788,G__24789,G__24790,G__24791,G__24792,G__24793,G__24794,G__24795,G__24796,G__24797));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24798 = a;
var G__24799 = b;
var G__24800 = c;
var G__24801 = d;
var G__24802 = e;
var G__24803 = f;
var G__24804 = g;
var G__24805 = h;
var G__24806 = i;
var G__24807 = j;
var G__24808 = k;
var G__24809 = l;
var G__24810 = m;
var G__24811 = n;
var G__24812 = o;
var G__24813 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__24798,G__24799,G__24800,G__24801,G__24802,G__24803,G__24804,G__24805,G__24806,G__24807,G__24808,G__24809,G__24810,G__24811,G__24812,G__24813) : target_fn.call(null,G__24798,G__24799,G__24800,G__24801,G__24802,G__24803,G__24804,G__24805,G__24806,G__24807,G__24808,G__24809,G__24810,G__24811,G__24812,G__24813));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__24814 = a;
var G__24815 = b;
var G__24816 = c;
var G__24817 = d;
var G__24818 = e;
var G__24819 = f;
var G__24820 = g;
var G__24821 = h;
var G__24822 = i;
var G__24823 = j;
var G__24824 = k;
var G__24825 = l;
var G__24826 = m;
var G__24827 = n;
var G__24828 = o;
var G__24829 = p;
var G__24830 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__24814,G__24815,G__24816,G__24817,G__24818,G__24819,G__24820,G__24821,G__24822,G__24823,G__24824,G__24825,G__24826,G__24827,G__24828,G__24829,G__24830) : self__.dispatch_fn.call(null,G__24814,G__24815,G__24816,G__24817,G__24818,G__24819,G__24820,G__24821,G__24822,G__24823,G__24824,G__24825,G__24826,G__24827,G__24828,G__24829,G__24830));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24831 = a;
var G__24832 = b;
var G__24833 = c;
var G__24834 = d;
var G__24835 = e;
var G__24836 = f;
var G__24837 = g;
var G__24838 = h;
var G__24839 = i;
var G__24840 = j;
var G__24841 = k;
var G__24842 = l;
var G__24843 = m;
var G__24844 = n;
var G__24845 = o;
var G__24846 = p;
var G__24847 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__24831,G__24832,G__24833,G__24834,G__24835,G__24836,G__24837,G__24838,G__24839,G__24840,G__24841,G__24842,G__24843,G__24844,G__24845,G__24846,G__24847) : target_fn.call(null,G__24831,G__24832,G__24833,G__24834,G__24835,G__24836,G__24837,G__24838,G__24839,G__24840,G__24841,G__24842,G__24843,G__24844,G__24845,G__24846,G__24847));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__24848 = a;
var G__24849 = b;
var G__24850 = c;
var G__24851 = d;
var G__24852 = e;
var G__24853 = f;
var G__24854 = g;
var G__24855 = h;
var G__24856 = i;
var G__24857 = j;
var G__24858 = k;
var G__24859 = l;
var G__24860 = m;
var G__24861 = n;
var G__24862 = o;
var G__24863 = p;
var G__24864 = q;
var G__24865 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__24848,G__24849,G__24850,G__24851,G__24852,G__24853,G__24854,G__24855,G__24856,G__24857,G__24858,G__24859,G__24860,G__24861,G__24862,G__24863,G__24864,G__24865) : self__.dispatch_fn.call(null,G__24848,G__24849,G__24850,G__24851,G__24852,G__24853,G__24854,G__24855,G__24856,G__24857,G__24858,G__24859,G__24860,G__24861,G__24862,G__24863,G__24864,G__24865));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24866 = a;
var G__24867 = b;
var G__24868 = c;
var G__24869 = d;
var G__24870 = e;
var G__24871 = f;
var G__24872 = g;
var G__24873 = h;
var G__24874 = i;
var G__24875 = j;
var G__24876 = k;
var G__24877 = l;
var G__24878 = m;
var G__24879 = n;
var G__24880 = o;
var G__24881 = p;
var G__24882 = q;
var G__24883 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__24866,G__24867,G__24868,G__24869,G__24870,G__24871,G__24872,G__24873,G__24874,G__24875,G__24876,G__24877,G__24878,G__24879,G__24880,G__24881,G__24882,G__24883) : target_fn.call(null,G__24866,G__24867,G__24868,G__24869,G__24870,G__24871,G__24872,G__24873,G__24874,G__24875,G__24876,G__24877,G__24878,G__24879,G__24880,G__24881,G__24882,G__24883));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__24884 = a;
var G__24885 = b;
var G__24886 = c;
var G__24887 = d;
var G__24888 = e;
var G__24889 = f;
var G__24890 = g;
var G__24891 = h;
var G__24892 = i;
var G__24893 = j;
var G__24894 = k;
var G__24895 = l;
var G__24896 = m;
var G__24897 = n;
var G__24898 = o;
var G__24899 = p;
var G__24900 = q;
var G__24901 = r;
var G__24902 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__24884,G__24885,G__24886,G__24887,G__24888,G__24889,G__24890,G__24891,G__24892,G__24893,G__24894,G__24895,G__24896,G__24897,G__24898,G__24899,G__24900,G__24901,G__24902) : self__.dispatch_fn.call(null,G__24884,G__24885,G__24886,G__24887,G__24888,G__24889,G__24890,G__24891,G__24892,G__24893,G__24894,G__24895,G__24896,G__24897,G__24898,G__24899,G__24900,G__24901,G__24902));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24903 = a;
var G__24904 = b;
var G__24905 = c;
var G__24906 = d;
var G__24907 = e;
var G__24908 = f;
var G__24909 = g;
var G__24910 = h;
var G__24911 = i;
var G__24912 = j;
var G__24913 = k;
var G__24914 = l;
var G__24915 = m;
var G__24916 = n;
var G__24917 = o;
var G__24918 = p;
var G__24919 = q;
var G__24920 = r;
var G__24921 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__24903,G__24904,G__24905,G__24906,G__24907,G__24908,G__24909,G__24910,G__24911,G__24912,G__24913,G__24914,G__24915,G__24916,G__24917,G__24918,G__24919,G__24920,G__24921) : target_fn.call(null,G__24903,G__24904,G__24905,G__24906,G__24907,G__24908,G__24909,G__24910,G__24911,G__24912,G__24913,G__24914,G__24915,G__24916,G__24917,G__24918,G__24919,G__24920,G__24921));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__24922 = a;
var G__24923 = b;
var G__24924 = c;
var G__24925 = d;
var G__24926 = e;
var G__24927 = f;
var G__24928 = g;
var G__24929 = h;
var G__24930 = i;
var G__24931 = j;
var G__24932 = k;
var G__24933 = l;
var G__24934 = m;
var G__24935 = n;
var G__24936 = o;
var G__24937 = p;
var G__24938 = q;
var G__24939 = r;
var G__24940 = s;
var G__24941 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__24922,G__24923,G__24924,G__24925,G__24926,G__24927,G__24928,G__24929,G__24930,G__24931,G__24932,G__24933,G__24934,G__24935,G__24936,G__24937,G__24938,G__24939,G__24940,G__24941) : self__.dispatch_fn.call(null,G__24922,G__24923,G__24924,G__24925,G__24926,G__24927,G__24928,G__24929,G__24930,G__24931,G__24932,G__24933,G__24934,G__24935,G__24936,G__24937,G__24938,G__24939,G__24940,G__24941));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24942 = a;
var G__24943 = b;
var G__24944 = c;
var G__24945 = d;
var G__24946 = e;
var G__24947 = f;
var G__24948 = g;
var G__24949 = h;
var G__24950 = i;
var G__24951 = j;
var G__24952 = k;
var G__24953 = l;
var G__24954 = m;
var G__24955 = n;
var G__24956 = o;
var G__24957 = p;
var G__24958 = q;
var G__24959 = r;
var G__24960 = s;
var G__24961 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__24942,G__24943,G__24944,G__24945,G__24946,G__24947,G__24948,G__24949,G__24950,G__24951,G__24952,G__24953,G__24954,G__24955,G__24956,G__24957,G__24958,G__24959,G__24960,G__24961) : target_fn.call(null,G__24942,G__24943,G__24944,G__24945,G__24946,G__24947,G__24948,G__24949,G__24950,G__24951,G__24952,G__24953,G__24954,G__24955,G__24956,G__24957,G__24958,G__24959,G__24960,G__24961));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var mf = this;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});

cljs.core.MultiFn.cljs$lang$type = true;

cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";

cljs.core.MultiFn.cljs$lang$ctorPrWriter = (function (this__17919__auto__,writer__17920__auto__,opt__17921__auto__){
return cljs.core._write(writer__17920__auto__,"cljs.core/MultiFn");
});

cljs.core.__GT_MultiFn = (function __GT_MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
return (new cljs.core.MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy));
});

/**
* Removes all of the methods of multimethod.
*/
cljs.core.remove_all_methods = (function remove_all_methods(multifn){
return cljs.core._reset(multifn);
});
/**
* Removes the method of multimethod associated with dispatch-value.
*/
cljs.core.remove_method = (function remove_method(multifn,dispatch_val){
return cljs.core._remove_method(multifn,dispatch_val);
});
/**
* Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y
* when there is a conflict
*/
cljs.core.prefer_method = (function prefer_method(multifn,dispatch_val_x,dispatch_val_y){
return cljs.core._prefer_method(multifn,dispatch_val_x,dispatch_val_y);
});
/**
* Given a multimethod, returns a map of dispatch values -> dispatch fns
*/
cljs.core.methods$ = (function methods$(multifn){
return cljs.core._methods(multifn);
});
/**
* Given a multimethod and a dispatch value, returns the dispatch fn
* that would apply to that value, or nil if none apply and no default
*/
cljs.core.get_method = (function get_method(multifn,dispatch_val){
return cljs.core._get_method(multifn,dispatch_val);
});
/**
* Given a multimethod, returns a map of preferred value -> set of other values
*/
cljs.core.prefers = (function prefers(multifn){
return cljs.core._prefers(multifn);
});

/**
* @constructor
*/
cljs.core.UUID = (function (uuid){
this.uuid = uuid;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2153775104;
})
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__24963 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
return goog.string.hashCode(G__24963);
});

cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (_,writer,___$1){
var self__ = this;
var ___$2 = this;
return cljs.core._write(writer,[cljs.core.str("#uuid \""),cljs.core.str(self__.uuid),cljs.core.str("\"")].join(''));
});

cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
return ((other instanceof cljs.core.UUID)) && ((self__.uuid === other.uuid));
});

cljs.core.UUID.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.uuid;
});

cljs.core.UUID.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.UUID.cljs$lang$type = true;

cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";

cljs.core.UUID.cljs$lang$ctorPrWriter = (function (this__17919__auto__,writer__17920__auto__,opt__17921__auto__){
return cljs.core._write(writer__17920__auto__,"cljs.core/UUID");
});

cljs.core.__GT_UUID = (function __GT_UUID(uuid){
return (new cljs.core.UUID(uuid));
});


/**
* @constructor
*/
cljs.core.ExceptionInfo = (function (message,data,cause){
this.message = message;
this.data = data;
this.cause = cause;
})

cljs.core.ExceptionInfo.cljs$lang$type = true;

cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";

cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = (function (this__17919__auto__,writer__17920__auto__,opt__17921__auto__){
return cljs.core._write(writer__17920__auto__,"cljs.core/ExceptionInfo");
});

cljs.core.__GT_ExceptionInfo = (function __GT_ExceptionInfo(message,data,cause){
return (new cljs.core.ExceptionInfo(message,data,cause));
});

cljs.core.pr_writer_ex_info = (function pr_writer_ex_info(obj,writer,opts){
cljs.core._write(writer,"#ExceptionInfo{:message ");

cljs.core.pr_writer(obj.message,writer,opts);

if(cljs.core.truth_(obj.data)){
cljs.core._write(writer,", :data ");

cljs.core.pr_writer(obj.data,writer,opts);
} else {
}

if(cljs.core.truth_(obj.cause)){
cljs.core._write(writer,", :cause ");

cljs.core.pr_writer(obj.cause,writer,opts);
} else {
}

return cljs.core._write(writer,"}");
});
/**
* Alpha - subject to change.
* Create an instance of ExceptionInfo, an Error type that carries a
* map of additional data.
*/
cljs.core.ex_info = (function() {
var ex_info = null;
var ex_info__2 = (function (msg,data){
return ex_info.cljs$core$IFn$_invoke$arity$3(msg,data,null);
});
var ex_info__3 = (function (msg,data,cause){
cljs.core.ExceptionInfo.prototype = (function (){var G__24968 = msg;
return Error(G__24968);
})();

cljs.core.ExceptionInfo.prototype.name = "ExceptionInfo";

cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;

cljs.core.ExceptionInfo.prototype.toString = cljs.core.pr_str_STAR_;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (obj,writer,opts){
var obj__$1 = this;
return cljs.core.pr_writer_ex_info(obj__$1,writer,opts);
});

return (new cljs.core.ExceptionInfo(msg,data,cause));
});
ex_info = function(msg,data,cause){
switch(arguments.length){
case 2:
return ex_info__2.call(this,msg,data);
case 3:
return ex_info__3.call(this,msg,data,cause);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
return ex_info;
})()
;
/**
* Alpha - subject to change.
* Returns exception data (a map) if ex is an ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_data = (function ex_data(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.data;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns the message attached to the given Error / ExceptionInfo object.
* For non-Errors returns nil.
*/
cljs.core.ex_message = (function ex_message(ex){
if((ex instanceof Error)){
return ex.message;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns exception cause (an Error / ExceptionInfo) if ex is an
* ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_cause = (function ex_cause(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.cause;
} else {
return null;
}
});
/**
* Returns an JavaScript compatible comparator based upon pred.
*/
cljs.core.comparator = (function comparator(pred){
return (function (x,y){
if(cljs.core.truth_((function (){var G__24973 = x;
var G__24974 = y;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__24973,G__24974) : pred.call(null,G__24973,G__24974));
})())){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__24975 = y;
var G__24976 = x;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__24975,G__24976) : pred.call(null,G__24975,G__24976));
})())){
return (1);
} else {
return (0);

}
}
});
});
cljs.core.special_symbol_QMARK_ = (function special_symbol_QMARK_(x){
return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null,"&","&",-2144855648,null),null,new cljs.core.Symbol(null,"defrecord*","defrecord*",-1936366207,null),null,new cljs.core.Symbol(null,"try","try",-1273693247,null),null,new cljs.core.Symbol(null,"loop*","loop*",615029416,null),null,new cljs.core.Symbol(null,"do","do",1686842252,null),null,new cljs.core.Symbol(null,"letfn*","letfn*",-110097810,null),null,new cljs.core.Symbol(null,"if","if",1181717262,null),null,new cljs.core.Symbol(null,"new","new",-444906321,null),null,new cljs.core.Symbol(null,"ns","ns",2082130287,null),null,new cljs.core.Symbol(null,"deftype*","deftype*",962659890,null),null,new cljs.core.Symbol(null,"let*","let*",1920721458,null),null,new cljs.core.Symbol(null,"js*","js*",-1134233646,null),null,new cljs.core.Symbol(null,"fn*","fn*",-752876845,null),null,new cljs.core.Symbol(null,"recur","recur",1202958259,null),null,new cljs.core.Symbol(null,"set!","set!",250714521,null),null,new cljs.core.Symbol(null,".",".",1975675962,null),null,new cljs.core.Symbol(null,"quote","quote",1377916282,null),null,new cljs.core.Symbol(null,"throw","throw",595905694,null),null,new cljs.core.Symbol(null,"def","def",597100991,null),null], null), null),x);
});
/**
* test [v] finds fn at key :test in var metadata and calls it,
* presuming failure will throw exception
*/
cljs.core.test = (function test(v){
var f = v.cljs$lang$test;
if(cljs.core.truth_(f)){
(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));

return new cljs.core.Keyword(null,"ok","ok",967785236);
} else {
return new cljs.core.Keyword(null,"no-test","no-test",-1679482642);
}
});
